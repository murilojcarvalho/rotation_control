
rotation_control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  00000e8e  00000f22  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000e8e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000fa  00800138  00800138  00000f5a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000f5a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000fb8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000ff8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ca3  00000000  00000000  000010b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000998  00000000  00000000  00001d5b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000073e  00000000  00000000  000026f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000250  00000000  00000000  00002e34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000059c  00000000  00000000  00003084  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004d9  00000000  00000000  00003620  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00003af9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 ec 01 	jmp	0x3d8	; 0x3d8 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__vector_18>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e8       	ldi	r30, 0x8E	; 142
  7c:	fe e0       	ldi	r31, 0x0E	; 14
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 33       	cpi	r26, 0x38	; 56
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	22 e0       	ldi	r18, 0x02	; 2
  8c:	a8 e3       	ldi	r26, 0x38	; 56
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 33       	cpi	r26, 0x32	; 50
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <main>
  9e:	0c 94 45 07 	jmp	0xe8a	; 0xe8a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_1>:
	
	return 0;
}

//INT0 Interrupt
ISR (INT0_vect){
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	cf 92       	push	r12
  b2:	df 92       	push	r13
  b4:	ef 92       	push	r14
  b6:	ff 92       	push	r15
  b8:	2f 93       	push	r18
  ba:	3f 93       	push	r19
  bc:	4f 93       	push	r20
  be:	5f 93       	push	r21
  c0:	6f 93       	push	r22
  c2:	7f 93       	push	r23
  c4:	8f 93       	push	r24
  c6:	9f 93       	push	r25
  c8:	af 93       	push	r26
  ca:	bf 93       	push	r27
  cc:	ef 93       	push	r30
  ce:	ff 93       	push	r31
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
  d0:	f8 94       	cli
	ATOMIC_BLOCK(ATOMIC_FORCEON){
		pulse_rpm_count++;
  d2:	80 91 b6 01 	lds	r24, 0x01B6	; 0x8001b6 <pulse_rpm_count>
  d6:	8f 5f       	subi	r24, 0xFF	; 255
		if(pulse_rpm_count>=7){
  d8:	87 30       	cpi	r24, 0x07	; 7
  da:	18 f4       	brcc	.+6      	; 0xe2 <__vector_1+0x3c>
}

//INT0 Interrupt
ISR (INT0_vect){
	ATOMIC_BLOCK(ATOMIC_FORCEON){
		pulse_rpm_count++;
  dc:	80 93 b6 01 	sts	0x01B6, r24	; 0x8001b6 <pulse_rpm_count>
  e0:	36 c0       	rjmp	.+108    	; 0x14e <__vector_1+0xa8>
		if(pulse_rpm_count>=7){
			pulse_rpm_count=0;
  e2:	10 92 b6 01 	sts	0x01B6, r1	; 0x8001b6 <pulse_rpm_count>
			current_rpm_millis = millis();
  e6:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <millis>
  ea:	6b 01       	movw	r12, r22
  ec:	7c 01       	movw	r14, r24
  ee:	60 93 9e 01 	sts	0x019E, r22	; 0x80019e <current_rpm_millis>
  f2:	70 93 9f 01 	sts	0x019F, r23	; 0x80019f <current_rpm_millis+0x1>
  f6:	80 93 a0 01 	sts	0x01A0, r24	; 0x8001a0 <current_rpm_millis+0x2>
  fa:	90 93 a1 01 	sts	0x01A1, r25	; 0x8001a1 <current_rpm_millis+0x3>
			rpm = (float)60000/(current_rpm_millis - previous_rpm_millis);
  fe:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <previous_rpm_millis>
 102:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <previous_rpm_millis+0x1>
 106:	a0 91 a4 01 	lds	r26, 0x01A4	; 0x8001a4 <previous_rpm_millis+0x2>
 10a:	b0 91 a5 01 	lds	r27, 0x01A5	; 0x8001a5 <previous_rpm_millis+0x3>
 10e:	a7 01       	movw	r20, r14
 110:	96 01       	movw	r18, r12
 112:	28 1b       	sub	r18, r24
 114:	39 0b       	sbc	r19, r25
 116:	4a 0b       	sbc	r20, r26
 118:	5b 0b       	sbc	r21, r27
 11a:	ca 01       	movw	r24, r20
 11c:	b9 01       	movw	r22, r18
 11e:	0e 94 a7 03 	call	0x74e	; 0x74e <__floatunsisf>
 122:	9b 01       	movw	r18, r22
 124:	ac 01       	movw	r20, r24
 126:	60 e0       	ldi	r22, 0x00	; 0
 128:	70 e6       	ldi	r23, 0x60	; 96
 12a:	8a e6       	ldi	r24, 0x6A	; 106
 12c:	97 e4       	ldi	r25, 0x47	; 71
 12e:	0e 94 ff 02 	call	0x5fe	; 0x5fe <__divsf3>
 132:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__fixsfsi>
 136:	70 93 ba 01 	sts	0x01BA, r23	; 0x8001ba <rpm+0x1>
 13a:	60 93 b9 01 	sts	0x01B9, r22	; 0x8001b9 <rpm>
			previous_rpm_millis = current_rpm_millis;
 13e:	c0 92 a2 01 	sts	0x01A2, r12	; 0x8001a2 <previous_rpm_millis>
 142:	d0 92 a3 01 	sts	0x01A3, r13	; 0x8001a3 <previous_rpm_millis+0x1>
 146:	e0 92 a4 01 	sts	0x01A4, r14	; 0x8001a4 <previous_rpm_millis+0x2>
 14a:	f0 92 a5 01 	sts	0x01A5, r15	; 0x8001a5 <previous_rpm_millis+0x3>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
 14e:	78 94       	sei
		}
	}
}
 150:	ff 91       	pop	r31
 152:	ef 91       	pop	r30
 154:	bf 91       	pop	r27
 156:	af 91       	pop	r26
 158:	9f 91       	pop	r25
 15a:	8f 91       	pop	r24
 15c:	7f 91       	pop	r23
 15e:	6f 91       	pop	r22
 160:	5f 91       	pop	r21
 162:	4f 91       	pop	r20
 164:	3f 91       	pop	r19
 166:	2f 91       	pop	r18
 168:	ff 90       	pop	r15
 16a:	ef 90       	pop	r14
 16c:	df 90       	pop	r13
 16e:	cf 90       	pop	r12
 170:	0f 90       	pop	r0
 172:	0f be       	out	0x3f, r0	; 63
 174:	0f 90       	pop	r0
 176:	1f 90       	pop	r1
 178:	18 95       	reti

0000017a <init>:

void init(void){
	//Port configuration
	//1 -> output, 0 -> input
	DDRB |= 0b00100010;		//Set PB1 (arduino digital pin 9) and PB5 (arduino digital pin 13) as output
 17a:	84 b1       	in	r24, 0x04	; 4
 17c:	82 62       	ori	r24, 0x22	; 34
 17e:	84 b9       	out	0x04, r24	; 4
	DDRD &= ~(1 << DDD2);     // Set PD2/INT0 (arduino digital pin 2) as input
 180:	52 98       	cbi	0x0a, 2	; 10
	
	USART_Init();	//Start USART
 182:	0e 94 8c 02 	call	0x518	; 0x518 <USART_Init>
	
	//Interrupt Config
	EICRA |= 0b00000011;    //The rising edge of INT0 generates an interrupt request (ISC00, ISC01)
 186:	e9 e6       	ldi	r30, 0x69	; 105
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	80 81       	ld	r24, Z
 18c:	83 60       	ori	r24, 0x03	; 3
 18e:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0);     //Turns on INT0
 190:	e8 9a       	sbi	0x1d, 0	; 29
	ticks_init();
 192:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ticks_init>
	USART_rxIE();	//enable usart receive interrupt
 196:	0e 94 af 02 	call	0x55e	; 0x55e <USART_rxIE>
	sei();          // turn on interrupts
 19a:	78 94       	sei
	
	USART_StrTx("WELCOME\r\n");
 19c:	80 e0       	ldi	r24, 0x00	; 0
 19e:	91 e0       	ldi	r25, 0x01	; 1
 1a0:	0e 94 a0 02 	call	0x540	; 0x540 <USART_StrTx>
 1a4:	08 95       	ret

000001a6 <linear_control>:
}

void linear_control(void){
	if(rpm < rpm_set_point-10){
 1a6:	80 91 b7 01 	lds	r24, 0x01B7	; 0x8001b7 <rpm_set_point>
 1aa:	90 91 b8 01 	lds	r25, 0x01B8	; 0x8001b8 <rpm_set_point+0x1>
 1ae:	20 91 b9 01 	lds	r18, 0x01B9	; 0x8001b9 <rpm>
 1b2:	30 91 ba 01 	lds	r19, 0x01BA	; 0x8001ba <rpm+0x1>
 1b6:	ac 01       	movw	r20, r24
 1b8:	4a 50       	subi	r20, 0x0A	; 10
 1ba:	51 09       	sbc	r21, r1
 1bc:	24 17       	cp	r18, r20
 1be:	35 07       	cpc	r19, r21
 1c0:	44 f4       	brge	.+16     	; 0x1d2 <linear_control+0x2c>
		if(pwm<100){
 1c2:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
 1c6:	84 36       	cpi	r24, 0x64	; 100
 1c8:	78 f4       	brcc	.+30     	; 0x1e8 <linear_control+0x42>
			pwm++;
 1ca:	8f 5f       	subi	r24, 0xFF	; 255
 1cc:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <__data_end>
 1d0:	0b c0       	rjmp	.+22     	; 0x1e8 <linear_control+0x42>
		}
	}
	else if(rpm > rpm_set_point+10){
 1d2:	0a 96       	adiw	r24, 0x0a	; 10
 1d4:	82 17       	cp	r24, r18
 1d6:	93 07       	cpc	r25, r19
 1d8:	3c f4       	brge	.+14     	; 0x1e8 <linear_control+0x42>
		if(pwm>0){
 1da:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
 1de:	88 23       	and	r24, r24
 1e0:	19 f0       	breq	.+6      	; 0x1e8 <linear_control+0x42>
			pwm--;
 1e2:	81 50       	subi	r24, 0x01	; 1
 1e4:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <__data_end>
		}
	}
	set_duty_PWM(pwm);
 1e8:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
 1ec:	0e 94 80 02 	call	0x500	; 0x500 <set_duty_PWM>
 1f0:	08 95       	ret

000001f2 <main>:
void init(void);
void linear_control(void);


int main(void){
	init();
 1f2:	0e 94 bd 00 	call	0x17a	; 0x17a <init>
	
    while ( TRUE ) {
		current_blink_millis = millis();
		if(current_blink_millis - previous_blink_millis >= blink_interval){
			previous_blink_millis = current_blink_millis;
			led_builtin_status = !led_builtin_status;
 1f6:	31 2c       	mov	r3, r1
		}
		
		current_serial_millis = millis();
		if(current_serial_millis - previous_serial_millis >= serial_interval){
			previous_serial_millis = current_serial_millis;
			sprintf(string_buffer, "Time: %lu \t\t", current_serial_millis);
 1f8:	0f 2e       	mov	r0, r31
 1fa:	fa e0       	ldi	r31, 0x0A	; 10
 1fc:	af 2e       	mov	r10, r31
 1fe:	f1 e0       	ldi	r31, 0x01	; 1
 200:	bf 2e       	mov	r11, r31
 202:	f0 2d       	mov	r31, r0
 204:	ca e3       	ldi	r28, 0x3A	; 58
 206:	d1 e0       	ldi	r29, 0x01	; 1
			USART_StrTx(string_buffer);
			sprintf(string_buffer, "RPM: %u \t\t", rpm);
 208:	0f 2e       	mov	r0, r31
 20a:	f7 e1       	ldi	r31, 0x17	; 23
 20c:	cf 2e       	mov	r12, r31
 20e:	f1 e0       	ldi	r31, 0x01	; 1
 210:	df 2e       	mov	r13, r31
 212:	f0 2d       	mov	r31, r0
			USART_StrTx(string_buffer);
			sprintf(string_buffer, "PWM: %u \r\n", pwm);
 214:	0f 2e       	mov	r0, r31
 216:	f2 e2       	ldi	r31, 0x22	; 34
 218:	ef 2e       	mov	r14, r31
 21a:	f1 e0       	ldi	r31, 0x01	; 1
 21c:	ff 2e       	mov	r15, r31
 21e:	f0 2d       	mov	r31, r0
	
    while ( TRUE ) {
		current_blink_millis = millis();
		if(current_blink_millis - previous_blink_millis >= blink_interval){
			previous_blink_millis = current_blink_millis;
			led_builtin_status = !led_builtin_status;
 220:	23 2c       	mov	r2, r3
		}
		
		current_serial_millis = millis();
		if(current_serial_millis - previous_serial_millis >= serial_interval){
			previous_serial_millis = current_serial_millis;
			sprintf(string_buffer, "Time: %lu \t\t", current_serial_millis);
 222:	0c 2f       	mov	r16, r28
 224:	1d 2f       	mov	r17, r29
		
		if( frame_status ){
			frame_status = 0;
			read_usart_rx_buffer(usart_rx_buffer);
			rpm_set_point = atoi(usart_rx_buffer);
			sprintf(string_buffer, "SP = %u \r\n", rpm_set_point);
 226:	0f 2e       	mov	r0, r31
 228:	fd e2       	ldi	r31, 0x2D	; 45
 22a:	8f 2e       	mov	r8, r31
 22c:	f1 e0       	ldi	r31, 0x01	; 1
 22e:	9f 2e       	mov	r9, r31
 230:	f0 2d       	mov	r31, r0

int main(void){
	init();
	
    while ( TRUE ) {
		current_blink_millis = millis();
 232:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <millis>
 236:	60 93 ae 01 	sts	0x01AE, r22	; 0x8001ae <current_blink_millis>
 23a:	70 93 af 01 	sts	0x01AF, r23	; 0x8001af <current_blink_millis+0x1>
 23e:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <current_blink_millis+0x2>
 242:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <current_blink_millis+0x3>
		if(current_blink_millis - previous_blink_millis >= blink_interval){
 246:	40 90 b2 01 	lds	r4, 0x01B2	; 0x8001b2 <previous_blink_millis>
 24a:	50 90 b3 01 	lds	r5, 0x01B3	; 0x8001b3 <previous_blink_millis+0x1>
 24e:	60 90 b4 01 	lds	r6, 0x01B4	; 0x8001b4 <previous_blink_millis+0x2>
 252:	70 90 b5 01 	lds	r7, 0x01B5	; 0x8001b5 <previous_blink_millis+0x3>
 256:	9b 01       	movw	r18, r22
 258:	ac 01       	movw	r20, r24
 25a:	24 19       	sub	r18, r4
 25c:	35 09       	sbc	r19, r5
 25e:	46 09       	sbc	r20, r6
 260:	57 09       	sbc	r21, r7
 262:	29 01       	movw	r4, r18
 264:	3a 01       	movw	r6, r20
 266:	34 ef       	ldi	r19, 0xF4	; 244
 268:	43 16       	cp	r4, r19
 26a:	31 e0       	ldi	r19, 0x01	; 1
 26c:	53 06       	cpc	r5, r19
 26e:	61 04       	cpc	r6, r1
 270:	71 04       	cpc	r7, r1
 272:	b0 f0       	brcs	.+44     	; 0x2a0 <main+0xae>
			previous_blink_millis = current_blink_millis;
 274:	60 93 b2 01 	sts	0x01B2, r22	; 0x8001b2 <previous_blink_millis>
 278:	70 93 b3 01 	sts	0x01B3, r23	; 0x8001b3 <previous_blink_millis+0x1>
 27c:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <previous_blink_millis+0x2>
 280:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <previous_blink_millis+0x3>
			led_builtin_status = !led_builtin_status;
 284:	80 91 39 01 	lds	r24, 0x0139	; 0x800139 <led_builtin_status>
 288:	91 e0       	ldi	r25, 0x01	; 1
 28a:	81 11       	cpse	r24, r1
 28c:	92 2d       	mov	r25, r2
 28e:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <led_builtin_status>
			if(led_builtin_status){
 292:	81 11       	cpse	r24, r1
 294:	02 c0       	rjmp	.+4      	; 0x29a <main+0xa8>
				Set_bit(PORTB, 5);
 296:	2d 9a       	sbi	0x05, 5	; 5
 298:	01 c0       	rjmp	.+2      	; 0x29c <main+0xaa>
			}
			else{
				Clr_bit(PORTB, 5);
 29a:	2d 98       	cbi	0x05, 5	; 5
			}
			linear_control();
 29c:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <linear_control>
		}
		
		current_serial_millis = millis();
 2a0:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <millis>
 2a4:	60 93 a6 01 	sts	0x01A6, r22	; 0x8001a6 <current_serial_millis>
 2a8:	70 93 a7 01 	sts	0x01A7, r23	; 0x8001a7 <current_serial_millis+0x1>
 2ac:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <current_serial_millis+0x2>
 2b0:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <current_serial_millis+0x3>
		if(current_serial_millis - previous_serial_millis >= serial_interval){
 2b4:	40 90 aa 01 	lds	r4, 0x01AA	; 0x8001aa <previous_serial_millis>
 2b8:	50 90 ab 01 	lds	r5, 0x01AB	; 0x8001ab <previous_serial_millis+0x1>
 2bc:	60 90 ac 01 	lds	r6, 0x01AC	; 0x8001ac <previous_serial_millis+0x2>
 2c0:	70 90 ad 01 	lds	r7, 0x01AD	; 0x8001ad <previous_serial_millis+0x3>
 2c4:	9b 01       	movw	r18, r22
 2c6:	ac 01       	movw	r20, r24
 2c8:	24 19       	sub	r18, r4
 2ca:	35 09       	sbc	r19, r5
 2cc:	46 09       	sbc	r20, r6
 2ce:	57 09       	sbc	r21, r7
 2d0:	29 01       	movw	r4, r18
 2d2:	3a 01       	movw	r6, r20
 2d4:	34 ef       	ldi	r19, 0xF4	; 244
 2d6:	43 16       	cp	r4, r19
 2d8:	31 e0       	ldi	r19, 0x01	; 1
 2da:	53 06       	cpc	r5, r19
 2dc:	61 04       	cpc	r6, r1
 2de:	71 04       	cpc	r7, r1
 2e0:	e8 f1       	brcs	.+122    	; 0x35c <main+0x16a>
			previous_serial_millis = current_serial_millis;
 2e2:	60 93 aa 01 	sts	0x01AA, r22	; 0x8001aa <previous_serial_millis>
 2e6:	70 93 ab 01 	sts	0x01AB, r23	; 0x8001ab <previous_serial_millis+0x1>
 2ea:	80 93 ac 01 	sts	0x01AC, r24	; 0x8001ac <previous_serial_millis+0x2>
 2ee:	90 93 ad 01 	sts	0x01AD, r25	; 0x8001ad <previous_serial_millis+0x3>
			sprintf(string_buffer, "Time: %lu \t\t", current_serial_millis);
 2f2:	9f 93       	push	r25
 2f4:	8f 93       	push	r24
 2f6:	7f 93       	push	r23
 2f8:	6f 93       	push	r22
 2fa:	bf 92       	push	r11
 2fc:	af 92       	push	r10
 2fe:	df 93       	push	r29
 300:	cf 93       	push	r28
 302:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <sprintf>
			USART_StrTx(string_buffer);
 306:	80 2f       	mov	r24, r16
 308:	91 2f       	mov	r25, r17
 30a:	0e 94 a0 02 	call	0x540	; 0x540 <USART_StrTx>
			sprintf(string_buffer, "RPM: %u \t\t", rpm);
 30e:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <rpm+0x1>
 312:	8f 93       	push	r24
 314:	80 91 b9 01 	lds	r24, 0x01B9	; 0x8001b9 <rpm>
 318:	8f 93       	push	r24
 31a:	df 92       	push	r13
 31c:	cf 92       	push	r12
 31e:	df 93       	push	r29
 320:	cf 93       	push	r28
 322:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <sprintf>
			USART_StrTx(string_buffer);
 326:	80 2f       	mov	r24, r16
 328:	91 2f       	mov	r25, r17
 32a:	0e 94 a0 02 	call	0x540	; 0x540 <USART_StrTx>
			sprintf(string_buffer, "PWM: %u \r\n", pwm);
 32e:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <__data_end>
 332:	1f 92       	push	r1
 334:	8f 93       	push	r24
 336:	ff 92       	push	r15
 338:	ef 92       	push	r14
 33a:	df 93       	push	r29
 33c:	cf 93       	push	r28
 33e:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <sprintf>
			USART_StrTx(string_buffer);
 342:	80 2f       	mov	r24, r16
 344:	91 2f       	mov	r25, r17
 346:	0e 94 a0 02 	call	0x540	; 0x540 <USART_StrTx>
 34a:	4d b7       	in	r20, 0x3d	; 61
 34c:	5e b7       	in	r21, 0x3e	; 62
 34e:	4c 5e       	subi	r20, 0xEC	; 236
 350:	5f 4f       	sbci	r21, 0xFF	; 255
 352:	0f b6       	in	r0, 0x3f	; 63
 354:	f8 94       	cli
 356:	5e bf       	out	0x3e, r21	; 62
 358:	0f be       	out	0x3f, r0	; 63
 35a:	4d bf       	out	0x3d, r20	; 61
		}
		
		if( frame_status ){
 35c:	80 91 cb 01 	lds	r24, 0x01CB	; 0x8001cb <frame_status>
 360:	88 23       	and	r24, r24
 362:	09 f4       	brne	.+2      	; 0x366 <main+0x174>
 364:	66 cf       	rjmp	.-308    	; 0x232 <main+0x40>
			frame_status = 0;
 366:	30 92 cb 01 	sts	0x01CB, r3	; 0x8001cb <frame_status>
			read_usart_rx_buffer(usart_rx_buffer);
 36a:	8e ec       	ldi	r24, 0xCE	; 206
 36c:	91 e0       	ldi	r25, 0x01	; 1
 36e:	0e 94 fe 02 	call	0x5fc	; 0x5fc <read_usart_rx_buffer>
			rpm_set_point = atoi(usart_rx_buffer);
 372:	8e ec       	ldi	r24, 0xCE	; 206
 374:	91 e0       	ldi	r25, 0x01	; 1
 376:	0e 94 35 04 	call	0x86a	; 0x86a <atoi>
 37a:	80 93 b7 01 	sts	0x01B7, r24	; 0x8001b7 <rpm_set_point>
 37e:	90 93 b8 01 	sts	0x01B8, r25	; 0x8001b8 <rpm_set_point+0x1>
			sprintf(string_buffer, "SP = %u \r\n", rpm_set_point);
 382:	9f 93       	push	r25
 384:	8f 93       	push	r24
 386:	9f 92       	push	r9
 388:	8f 92       	push	r8
 38a:	df 93       	push	r29
 38c:	cf 93       	push	r28
 38e:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <sprintf>
			USART_StrTx(string_buffer);
 392:	ce 01       	movw	r24, r28
 394:	0e 94 a0 02 	call	0x540	; 0x540 <USART_StrTx>
 398:	0f 90       	pop	r0
 39a:	0f 90       	pop	r0
 39c:	0f 90       	pop	r0
 39e:	0f 90       	pop	r0
 3a0:	0f 90       	pop	r0
 3a2:	0f 90       	pop	r0
 3a4:	46 cf       	rjmp	.-372    	; 0x232 <main+0x40>

000003a6 <ticks_init>:
 3a6:	84 b5       	in	r24, 0x24	; 36
 3a8:	82 60       	ori	r24, 0x02	; 2
 3aa:	84 bd       	out	0x24, r24	; 36
 3ac:	87 ec       	ldi	r24, 0xC7	; 199
 3ae:	87 bd       	out	0x27, r24	; 39
 3b0:	ee e6       	ldi	r30, 0x6E	; 110
 3b2:	f0 e0       	ldi	r31, 0x00	; 0
 3b4:	80 81       	ld	r24, Z
 3b6:	82 60       	ori	r24, 0x02	; 2
 3b8:	80 83       	st	Z, r24
 3ba:	85 b5       	in	r24, 0x25	; 37
 3bc:	82 60       	ori	r24, 0x02	; 2
 3be:	85 bd       	out	0x25, r24	; 37
 3c0:	08 95       	ret

000003c2 <millis>:
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
 3c2:	f8 94       	cli
 3c4:	60 91 c7 01 	lds	r22, 0x01C7	; 0x8001c7 <tick_1ms>
 3c8:	70 91 c8 01 	lds	r23, 0x01C8	; 0x8001c8 <tick_1ms+0x1>
 3cc:	80 91 c9 01 	lds	r24, 0x01C9	; 0x8001c9 <tick_1ms+0x2>
 3d0:	90 91 ca 01 	lds	r25, 0x01CA	; 0x8001ca <tick_1ms+0x3>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
 3d4:	78 94       	sei
 3d6:	08 95       	ret

000003d8 <__vector_14>:
 3d8:	1f 92       	push	r1
 3da:	0f 92       	push	r0
 3dc:	0f b6       	in	r0, 0x3f	; 63
 3de:	0f 92       	push	r0
 3e0:	11 24       	eor	r1, r1
 3e2:	4f 93       	push	r20
 3e4:	5f 93       	push	r21
 3e6:	6f 93       	push	r22
 3e8:	7f 93       	push	r23
 3ea:	8f 93       	push	r24
 3ec:	9f 93       	push	r25
 3ee:	af 93       	push	r26
 3f0:	bf 93       	push	r27
 3f2:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <tick>
 3f6:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <tick+0x1>
 3fa:	a0 91 c5 01 	lds	r26, 0x01C5	; 0x8001c5 <tick+0x2>
 3fe:	b0 91 c6 01 	lds	r27, 0x01C6	; 0x8001c6 <tick+0x3>
 402:	01 96       	adiw	r24, 0x01	; 1
 404:	a1 1d       	adc	r26, r1
 406:	b1 1d       	adc	r27, r1
 408:	80 93 c3 01 	sts	0x01C3, r24	; 0x8001c3 <tick>
 40c:	90 93 c4 01 	sts	0x01C4, r25	; 0x8001c4 <tick+0x1>
 410:	a0 93 c5 01 	sts	0x01C5, r26	; 0x8001c5 <tick+0x2>
 414:	b0 93 c6 01 	sts	0x01C6, r27	; 0x8001c6 <tick+0x3>
 418:	80 91 c3 01 	lds	r24, 0x01C3	; 0x8001c3 <tick>
 41c:	90 91 c4 01 	lds	r25, 0x01C4	; 0x8001c4 <tick+0x1>
 420:	a0 91 c5 01 	lds	r26, 0x01C5	; 0x8001c5 <tick+0x2>
 424:	b0 91 c6 01 	lds	r27, 0x01C6	; 0x8001c6 <tick+0x3>
 428:	0a 97       	sbiw	r24, 0x0a	; 10
 42a:	a1 05       	cpc	r26, r1
 42c:	b1 05       	cpc	r27, r1
 42e:	d8 f0       	brcs	.+54     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 430:	10 92 c3 01 	sts	0x01C3, r1	; 0x8001c3 <tick>
 434:	10 92 c4 01 	sts	0x01C4, r1	; 0x8001c4 <tick+0x1>
 438:	10 92 c5 01 	sts	0x01C5, r1	; 0x8001c5 <tick+0x2>
 43c:	10 92 c6 01 	sts	0x01C6, r1	; 0x8001c6 <tick+0x3>
 440:	80 91 c7 01 	lds	r24, 0x01C7	; 0x8001c7 <tick_1ms>
 444:	90 91 c8 01 	lds	r25, 0x01C8	; 0x8001c8 <tick_1ms+0x1>
 448:	a0 91 c9 01 	lds	r26, 0x01C9	; 0x8001c9 <tick_1ms+0x2>
 44c:	b0 91 ca 01 	lds	r27, 0x01CA	; 0x8001ca <tick_1ms+0x3>
 450:	01 96       	adiw	r24, 0x01	; 1
 452:	a1 1d       	adc	r26, r1
 454:	b1 1d       	adc	r27, r1
 456:	80 93 c7 01 	sts	0x01C7, r24	; 0x8001c7 <tick_1ms>
 45a:	90 93 c8 01 	sts	0x01C8, r25	; 0x8001c8 <tick_1ms+0x1>
 45e:	a0 93 c9 01 	sts	0x01C9, r26	; 0x8001c9 <tick_1ms+0x2>
 462:	b0 93 ca 01 	sts	0x01CA, r27	; 0x8001ca <tick_1ms+0x3>
 466:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <pwm_tick>
 46a:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <pwm_tick+0x1>
 46e:	a0 91 c1 01 	lds	r26, 0x01C1	; 0x8001c1 <pwm_tick+0x2>
 472:	b0 91 c2 01 	lds	r27, 0x01C2	; 0x8001c2 <pwm_tick+0x3>
 476:	01 96       	adiw	r24, 0x01	; 1
 478:	a1 1d       	adc	r26, r1
 47a:	b1 1d       	adc	r27, r1
 47c:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <pwm_tick>
 480:	90 93 c0 01 	sts	0x01C0, r25	; 0x8001c0 <pwm_tick+0x1>
 484:	a0 93 c1 01 	sts	0x01C1, r26	; 0x8001c1 <pwm_tick+0x2>
 488:	b0 93 c2 01 	sts	0x01C2, r27	; 0x8001c2 <pwm_tick+0x3>
 48c:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <pwm_tick>
 490:	90 91 c0 01 	lds	r25, 0x01C0	; 0x8001c0 <pwm_tick+0x1>
 494:	a0 91 c1 01 	lds	r26, 0x01C1	; 0x8001c1 <pwm_tick+0x2>
 498:	b0 91 c2 01 	lds	r27, 0x01C2	; 0x8001c2 <pwm_tick+0x3>
 49c:	84 36       	cpi	r24, 0x64	; 100
 49e:	91 05       	cpc	r25, r1
 4a0:	a1 05       	cpc	r26, r1
 4a2:	b1 05       	cpc	r27, r1
 4a4:	50 f0       	brcs	.+20     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4a6:	10 92 bf 01 	sts	0x01BF, r1	; 0x8001bf <pwm_tick>
 4aa:	10 92 c0 01 	sts	0x01C0, r1	; 0x8001c0 <pwm_tick+0x1>
 4ae:	10 92 c1 01 	sts	0x01C1, r1	; 0x8001c1 <pwm_tick+0x2>
 4b2:	10 92 c2 01 	sts	0x01C2, r1	; 0x8001c2 <pwm_tick+0x3>
 4b6:	29 9a       	sbi	0x05, 1	; 5
 4b8:	16 c0       	rjmp	.+44     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4ba:	40 91 bf 01 	lds	r20, 0x01BF	; 0x8001bf <pwm_tick>
 4be:	50 91 c0 01 	lds	r21, 0x01C0	; 0x8001c0 <pwm_tick+0x1>
 4c2:	60 91 c1 01 	lds	r22, 0x01C1	; 0x8001c1 <pwm_tick+0x2>
 4c6:	70 91 c2 01 	lds	r23, 0x01C2	; 0x8001c2 <pwm_tick+0x3>
 4ca:	80 91 bb 01 	lds	r24, 0x01BB	; 0x8001bb <pwm_duty>
 4ce:	90 91 bc 01 	lds	r25, 0x01BC	; 0x8001bc <pwm_duty+0x1>
 4d2:	a0 91 bd 01 	lds	r26, 0x01BD	; 0x8001bd <pwm_duty+0x2>
 4d6:	b0 91 be 01 	lds	r27, 0x01BE	; 0x8001be <pwm_duty+0x3>
 4da:	48 17       	cp	r20, r24
 4dc:	59 07       	cpc	r21, r25
 4de:	6a 07       	cpc	r22, r26
 4e0:	7b 07       	cpc	r23, r27
 4e2:	08 f0       	brcs	.+2      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4e4:	29 98       	cbi	0x05, 1	; 5
 4e6:	bf 91       	pop	r27
 4e8:	af 91       	pop	r26
 4ea:	9f 91       	pop	r25
 4ec:	8f 91       	pop	r24
 4ee:	7f 91       	pop	r23
 4f0:	6f 91       	pop	r22
 4f2:	5f 91       	pop	r21
 4f4:	4f 91       	pop	r20
 4f6:	0f 90       	pop	r0
 4f8:	0f be       	out	0x3f, r0	; 63
 4fa:	0f 90       	pop	r0
 4fc:	1f 90       	pop	r1
 4fe:	18 95       	reti

00000500 <set_duty_PWM>:
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	a0 e0       	ldi	r26, 0x00	; 0
 504:	b0 e0       	ldi	r27, 0x00	; 0
 506:	80 93 bb 01 	sts	0x01BB, r24	; 0x8001bb <pwm_duty>
 50a:	90 93 bc 01 	sts	0x01BC, r25	; 0x8001bc <pwm_duty+0x1>
 50e:	a0 93 bd 01 	sts	0x01BD, r26	; 0x8001bd <pwm_duty+0x2>
 512:	b0 93 be 01 	sts	0x01BE, r27	; 0x8001be <pwm_duty+0x3>
 516:	08 95       	ret

00000518 <USART_Init>:
 518:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 51c:	87 e6       	ldi	r24, 0x67	; 103
 51e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 522:	88 e1       	ldi	r24, 0x18	; 24
 524:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 528:	86 e0       	ldi	r24, 0x06	; 6
 52a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 52e:	08 95       	ret

00000530 <USART_Transmit>:
 530:	e0 ec       	ldi	r30, 0xC0	; 192
 532:	f0 e0       	ldi	r31, 0x00	; 0
 534:	90 81       	ld	r25, Z
 536:	95 ff       	sbrs	r25, 5
 538:	fd cf       	rjmp	.-6      	; 0x534 <USART_Transmit+0x4>
 53a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 53e:	08 95       	ret

00000540 <USART_StrTx>:
 540:	cf 93       	push	r28
 542:	df 93       	push	r29
 544:	ec 01       	movw	r28, r24
 546:	88 81       	ld	r24, Y
 548:	88 23       	and	r24, r24
 54a:	31 f0       	breq	.+12     	; 0x558 <USART_StrTx+0x18>
 54c:	21 96       	adiw	r28, 0x01	; 1
 54e:	0e 94 98 02 	call	0x530	; 0x530 <USART_Transmit>
 552:	89 91       	ld	r24, Y+
 554:	81 11       	cpse	r24, r1
 556:	fb cf       	rjmp	.-10     	; 0x54e <USART_StrTx+0xe>
 558:	df 91       	pop	r29
 55a:	cf 91       	pop	r28
 55c:	08 95       	ret

0000055e <USART_rxIE>:
 55e:	e1 ec       	ldi	r30, 0xC1	; 193
 560:	f0 e0       	ldi	r31, 0x00	; 0
 562:	80 81       	ld	r24, Z
 564:	80 68       	ori	r24, 0x80	; 128
 566:	80 83       	st	Z, r24
 568:	08 95       	ret

0000056a <__vector_18>:
 56a:	1f 92       	push	r1
 56c:	0f 92       	push	r0
 56e:	0f b6       	in	r0, 0x3f	; 63
 570:	0f 92       	push	r0
 572:	11 24       	eor	r1, r1
 574:	2f 93       	push	r18
 576:	4f 93       	push	r20
 578:	5f 93       	push	r21
 57a:	8f 93       	push	r24
 57c:	9f 93       	push	r25
 57e:	ef 93       	push	r30
 580:	ff 93       	push	r31
 582:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 586:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 58a:	8c 71       	andi	r24, 0x1C	; 28
 58c:	59 f5       	brne	.+86     	; 0x5e4 <__vector_18+0x7a>
 58e:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <indice>
 592:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <indice+0x1>
 596:	84 36       	cpi	r24, 0x64	; 100
 598:	91 05       	cpc	r25, r1
 59a:	20 f0       	brcs	.+8      	; 0x5a4 <__vector_18+0x3a>
 59c:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <indice+0x1>
 5a0:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <indice>
 5a4:	2a 30       	cpi	r18, 0x0A	; 10
 5a6:	79 f4       	brne	.+30     	; 0x5c6 <__vector_18+0x5c>
 5a8:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <indice>
 5ac:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <indice+0x1>
 5b0:	e2 53       	subi	r30, 0x32	; 50
 5b2:	fe 4f       	sbci	r31, 0xFE	; 254
 5b4:	10 82       	st	Z, r1
 5b6:	81 e0       	ldi	r24, 0x01	; 1
 5b8:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <frame_status>
 5bc:	10 92 cd 01 	sts	0x01CD, r1	; 0x8001cd <indice+0x1>
 5c0:	10 92 cc 01 	sts	0x01CC, r1	; 0x8001cc <indice>
 5c4:	0f c0       	rjmp	.+30     	; 0x5e4 <__vector_18+0x7a>
 5c6:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <indice>
 5ca:	90 91 cd 01 	lds	r25, 0x01CD	; 0x8001cd <indice+0x1>
 5ce:	ac 01       	movw	r20, r24
 5d0:	4f 5f       	subi	r20, 0xFF	; 255
 5d2:	5f 4f       	sbci	r21, 0xFF	; 255
 5d4:	50 93 cd 01 	sts	0x01CD, r21	; 0x8001cd <indice+0x1>
 5d8:	40 93 cc 01 	sts	0x01CC, r20	; 0x8001cc <indice>
 5dc:	fc 01       	movw	r30, r24
 5de:	e2 53       	subi	r30, 0x32	; 50
 5e0:	fe 4f       	sbci	r31, 0xFE	; 254
 5e2:	20 83       	st	Z, r18
 5e4:	ff 91       	pop	r31
 5e6:	ef 91       	pop	r30
 5e8:	9f 91       	pop	r25
 5ea:	8f 91       	pop	r24
 5ec:	5f 91       	pop	r21
 5ee:	4f 91       	pop	r20
 5f0:	2f 91       	pop	r18
 5f2:	0f 90       	pop	r0
 5f4:	0f be       	out	0x3f, r0	; 63
 5f6:	0f 90       	pop	r0
 5f8:	1f 90       	pop	r1
 5fa:	18 95       	reti

000005fc <read_usart_rx_buffer>:
 5fc:	08 95       	ret

000005fe <__divsf3>:
 5fe:	0e 94 13 03 	call	0x626	; 0x626 <__divsf3x>
 602:	0c 94 fb 03 	jmp	0x7f6	; 0x7f6 <__fp_round>
 606:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <__fp_pscB>
 60a:	58 f0       	brcs	.+22     	; 0x622 <__divsf3+0x24>
 60c:	0e 94 ed 03 	call	0x7da	; 0x7da <__fp_pscA>
 610:	40 f0       	brcs	.+16     	; 0x622 <__divsf3+0x24>
 612:	29 f4       	brne	.+10     	; 0x61e <__divsf3+0x20>
 614:	5f 3f       	cpi	r21, 0xFF	; 255
 616:	29 f0       	breq	.+10     	; 0x622 <__divsf3+0x24>
 618:	0c 94 e4 03 	jmp	0x7c8	; 0x7c8 <__fp_inf>
 61c:	51 11       	cpse	r21, r1
 61e:	0c 94 2f 04 	jmp	0x85e	; 0x85e <__fp_szero>
 622:	0c 94 ea 03 	jmp	0x7d4	; 0x7d4 <__fp_nan>

00000626 <__divsf3x>:
 626:	0e 94 0c 04 	call	0x818	; 0x818 <__fp_split3>
 62a:	68 f3       	brcs	.-38     	; 0x606 <__divsf3+0x8>

0000062c <__divsf3_pse>:
 62c:	99 23       	and	r25, r25
 62e:	b1 f3       	breq	.-20     	; 0x61c <__divsf3+0x1e>
 630:	55 23       	and	r21, r21
 632:	91 f3       	breq	.-28     	; 0x618 <__divsf3+0x1a>
 634:	95 1b       	sub	r25, r21
 636:	55 0b       	sbc	r21, r21
 638:	bb 27       	eor	r27, r27
 63a:	aa 27       	eor	r26, r26
 63c:	62 17       	cp	r22, r18
 63e:	73 07       	cpc	r23, r19
 640:	84 07       	cpc	r24, r20
 642:	38 f0       	brcs	.+14     	; 0x652 <__divsf3_pse+0x26>
 644:	9f 5f       	subi	r25, 0xFF	; 255
 646:	5f 4f       	sbci	r21, 0xFF	; 255
 648:	22 0f       	add	r18, r18
 64a:	33 1f       	adc	r19, r19
 64c:	44 1f       	adc	r20, r20
 64e:	aa 1f       	adc	r26, r26
 650:	a9 f3       	breq	.-22     	; 0x63c <__divsf3_pse+0x10>
 652:	35 d0       	rcall	.+106    	; 0x6be <__divsf3_pse+0x92>
 654:	0e 2e       	mov	r0, r30
 656:	3a f0       	brmi	.+14     	; 0x666 <__divsf3_pse+0x3a>
 658:	e0 e8       	ldi	r30, 0x80	; 128
 65a:	32 d0       	rcall	.+100    	; 0x6c0 <__divsf3_pse+0x94>
 65c:	91 50       	subi	r25, 0x01	; 1
 65e:	50 40       	sbci	r21, 0x00	; 0
 660:	e6 95       	lsr	r30
 662:	00 1c       	adc	r0, r0
 664:	ca f7       	brpl	.-14     	; 0x658 <__divsf3_pse+0x2c>
 666:	2b d0       	rcall	.+86     	; 0x6be <__divsf3_pse+0x92>
 668:	fe 2f       	mov	r31, r30
 66a:	29 d0       	rcall	.+82     	; 0x6be <__divsf3_pse+0x92>
 66c:	66 0f       	add	r22, r22
 66e:	77 1f       	adc	r23, r23
 670:	88 1f       	adc	r24, r24
 672:	bb 1f       	adc	r27, r27
 674:	26 17       	cp	r18, r22
 676:	37 07       	cpc	r19, r23
 678:	48 07       	cpc	r20, r24
 67a:	ab 07       	cpc	r26, r27
 67c:	b0 e8       	ldi	r27, 0x80	; 128
 67e:	09 f0       	breq	.+2      	; 0x682 <__divsf3_pse+0x56>
 680:	bb 0b       	sbc	r27, r27
 682:	80 2d       	mov	r24, r0
 684:	bf 01       	movw	r22, r30
 686:	ff 27       	eor	r31, r31
 688:	93 58       	subi	r25, 0x83	; 131
 68a:	5f 4f       	sbci	r21, 0xFF	; 255
 68c:	3a f0       	brmi	.+14     	; 0x69c <__divsf3_pse+0x70>
 68e:	9e 3f       	cpi	r25, 0xFE	; 254
 690:	51 05       	cpc	r21, r1
 692:	78 f0       	brcs	.+30     	; 0x6b2 <__divsf3_pse+0x86>
 694:	0c 94 e4 03 	jmp	0x7c8	; 0x7c8 <__fp_inf>
 698:	0c 94 2f 04 	jmp	0x85e	; 0x85e <__fp_szero>
 69c:	5f 3f       	cpi	r21, 0xFF	; 255
 69e:	e4 f3       	brlt	.-8      	; 0x698 <__divsf3_pse+0x6c>
 6a0:	98 3e       	cpi	r25, 0xE8	; 232
 6a2:	d4 f3       	brlt	.-12     	; 0x698 <__divsf3_pse+0x6c>
 6a4:	86 95       	lsr	r24
 6a6:	77 95       	ror	r23
 6a8:	67 95       	ror	r22
 6aa:	b7 95       	ror	r27
 6ac:	f7 95       	ror	r31
 6ae:	9f 5f       	subi	r25, 0xFF	; 255
 6b0:	c9 f7       	brne	.-14     	; 0x6a4 <__divsf3_pse+0x78>
 6b2:	88 0f       	add	r24, r24
 6b4:	91 1d       	adc	r25, r1
 6b6:	96 95       	lsr	r25
 6b8:	87 95       	ror	r24
 6ba:	97 f9       	bld	r25, 7
 6bc:	08 95       	ret
 6be:	e1 e0       	ldi	r30, 0x01	; 1
 6c0:	66 0f       	add	r22, r22
 6c2:	77 1f       	adc	r23, r23
 6c4:	88 1f       	adc	r24, r24
 6c6:	bb 1f       	adc	r27, r27
 6c8:	62 17       	cp	r22, r18
 6ca:	73 07       	cpc	r23, r19
 6cc:	84 07       	cpc	r24, r20
 6ce:	ba 07       	cpc	r27, r26
 6d0:	20 f0       	brcs	.+8      	; 0x6da <__divsf3_pse+0xae>
 6d2:	62 1b       	sub	r22, r18
 6d4:	73 0b       	sbc	r23, r19
 6d6:	84 0b       	sbc	r24, r20
 6d8:	ba 0b       	sbc	r27, r26
 6da:	ee 1f       	adc	r30, r30
 6dc:	88 f7       	brcc	.-30     	; 0x6c0 <__divsf3_pse+0x94>
 6de:	e0 95       	com	r30
 6e0:	08 95       	ret

000006e2 <__fixsfsi>:
 6e2:	0e 94 78 03 	call	0x6f0	; 0x6f0 <__fixunssfsi>
 6e6:	68 94       	set
 6e8:	b1 11       	cpse	r27, r1
 6ea:	0c 94 2f 04 	jmp	0x85e	; 0x85e <__fp_szero>
 6ee:	08 95       	ret

000006f0 <__fixunssfsi>:
 6f0:	0e 94 14 04 	call	0x828	; 0x828 <__fp_splitA>
 6f4:	88 f0       	brcs	.+34     	; 0x718 <__fixunssfsi+0x28>
 6f6:	9f 57       	subi	r25, 0x7F	; 127
 6f8:	98 f0       	brcs	.+38     	; 0x720 <__fixunssfsi+0x30>
 6fa:	b9 2f       	mov	r27, r25
 6fc:	99 27       	eor	r25, r25
 6fe:	b7 51       	subi	r27, 0x17	; 23
 700:	b0 f0       	brcs	.+44     	; 0x72e <__fixunssfsi+0x3e>
 702:	e1 f0       	breq	.+56     	; 0x73c <__fixunssfsi+0x4c>
 704:	66 0f       	add	r22, r22
 706:	77 1f       	adc	r23, r23
 708:	88 1f       	adc	r24, r24
 70a:	99 1f       	adc	r25, r25
 70c:	1a f0       	brmi	.+6      	; 0x714 <__fixunssfsi+0x24>
 70e:	ba 95       	dec	r27
 710:	c9 f7       	brne	.-14     	; 0x704 <__fixunssfsi+0x14>
 712:	14 c0       	rjmp	.+40     	; 0x73c <__fixunssfsi+0x4c>
 714:	b1 30       	cpi	r27, 0x01	; 1
 716:	91 f0       	breq	.+36     	; 0x73c <__fixunssfsi+0x4c>
 718:	0e 94 2e 04 	call	0x85c	; 0x85c <__fp_zero>
 71c:	b1 e0       	ldi	r27, 0x01	; 1
 71e:	08 95       	ret
 720:	0c 94 2e 04 	jmp	0x85c	; 0x85c <__fp_zero>
 724:	67 2f       	mov	r22, r23
 726:	78 2f       	mov	r23, r24
 728:	88 27       	eor	r24, r24
 72a:	b8 5f       	subi	r27, 0xF8	; 248
 72c:	39 f0       	breq	.+14     	; 0x73c <__fixunssfsi+0x4c>
 72e:	b9 3f       	cpi	r27, 0xF9	; 249
 730:	cc f3       	brlt	.-14     	; 0x724 <__fixunssfsi+0x34>
 732:	86 95       	lsr	r24
 734:	77 95       	ror	r23
 736:	67 95       	ror	r22
 738:	b3 95       	inc	r27
 73a:	d9 f7       	brne	.-10     	; 0x732 <__fixunssfsi+0x42>
 73c:	3e f4       	brtc	.+14     	; 0x74c <__fixunssfsi+0x5c>
 73e:	90 95       	com	r25
 740:	80 95       	com	r24
 742:	70 95       	com	r23
 744:	61 95       	neg	r22
 746:	7f 4f       	sbci	r23, 0xFF	; 255
 748:	8f 4f       	sbci	r24, 0xFF	; 255
 74a:	9f 4f       	sbci	r25, 0xFF	; 255
 74c:	08 95       	ret

0000074e <__floatunsisf>:
 74e:	e8 94       	clt
 750:	09 c0       	rjmp	.+18     	; 0x764 <__floatsisf+0x12>

00000752 <__floatsisf>:
 752:	97 fb       	bst	r25, 7
 754:	3e f4       	brtc	.+14     	; 0x764 <__floatsisf+0x12>
 756:	90 95       	com	r25
 758:	80 95       	com	r24
 75a:	70 95       	com	r23
 75c:	61 95       	neg	r22
 75e:	7f 4f       	sbci	r23, 0xFF	; 255
 760:	8f 4f       	sbci	r24, 0xFF	; 255
 762:	9f 4f       	sbci	r25, 0xFF	; 255
 764:	99 23       	and	r25, r25
 766:	a9 f0       	breq	.+42     	; 0x792 <__floatsisf+0x40>
 768:	f9 2f       	mov	r31, r25
 76a:	96 e9       	ldi	r25, 0x96	; 150
 76c:	bb 27       	eor	r27, r27
 76e:	93 95       	inc	r25
 770:	f6 95       	lsr	r31
 772:	87 95       	ror	r24
 774:	77 95       	ror	r23
 776:	67 95       	ror	r22
 778:	b7 95       	ror	r27
 77a:	f1 11       	cpse	r31, r1
 77c:	f8 cf       	rjmp	.-16     	; 0x76e <__floatsisf+0x1c>
 77e:	fa f4       	brpl	.+62     	; 0x7be <__floatsisf+0x6c>
 780:	bb 0f       	add	r27, r27
 782:	11 f4       	brne	.+4      	; 0x788 <__floatsisf+0x36>
 784:	60 ff       	sbrs	r22, 0
 786:	1b c0       	rjmp	.+54     	; 0x7be <__floatsisf+0x6c>
 788:	6f 5f       	subi	r22, 0xFF	; 255
 78a:	7f 4f       	sbci	r23, 0xFF	; 255
 78c:	8f 4f       	sbci	r24, 0xFF	; 255
 78e:	9f 4f       	sbci	r25, 0xFF	; 255
 790:	16 c0       	rjmp	.+44     	; 0x7be <__floatsisf+0x6c>
 792:	88 23       	and	r24, r24
 794:	11 f0       	breq	.+4      	; 0x79a <__floatsisf+0x48>
 796:	96 e9       	ldi	r25, 0x96	; 150
 798:	11 c0       	rjmp	.+34     	; 0x7bc <__floatsisf+0x6a>
 79a:	77 23       	and	r23, r23
 79c:	21 f0       	breq	.+8      	; 0x7a6 <__floatsisf+0x54>
 79e:	9e e8       	ldi	r25, 0x8E	; 142
 7a0:	87 2f       	mov	r24, r23
 7a2:	76 2f       	mov	r23, r22
 7a4:	05 c0       	rjmp	.+10     	; 0x7b0 <__floatsisf+0x5e>
 7a6:	66 23       	and	r22, r22
 7a8:	71 f0       	breq	.+28     	; 0x7c6 <__floatsisf+0x74>
 7aa:	96 e8       	ldi	r25, 0x86	; 134
 7ac:	86 2f       	mov	r24, r22
 7ae:	70 e0       	ldi	r23, 0x00	; 0
 7b0:	60 e0       	ldi	r22, 0x00	; 0
 7b2:	2a f0       	brmi	.+10     	; 0x7be <__floatsisf+0x6c>
 7b4:	9a 95       	dec	r25
 7b6:	66 0f       	add	r22, r22
 7b8:	77 1f       	adc	r23, r23
 7ba:	88 1f       	adc	r24, r24
 7bc:	da f7       	brpl	.-10     	; 0x7b4 <__floatsisf+0x62>
 7be:	88 0f       	add	r24, r24
 7c0:	96 95       	lsr	r25
 7c2:	87 95       	ror	r24
 7c4:	97 f9       	bld	r25, 7
 7c6:	08 95       	ret

000007c8 <__fp_inf>:
 7c8:	97 f9       	bld	r25, 7
 7ca:	9f 67       	ori	r25, 0x7F	; 127
 7cc:	80 e8       	ldi	r24, 0x80	; 128
 7ce:	70 e0       	ldi	r23, 0x00	; 0
 7d0:	60 e0       	ldi	r22, 0x00	; 0
 7d2:	08 95       	ret

000007d4 <__fp_nan>:
 7d4:	9f ef       	ldi	r25, 0xFF	; 255
 7d6:	80 ec       	ldi	r24, 0xC0	; 192
 7d8:	08 95       	ret

000007da <__fp_pscA>:
 7da:	00 24       	eor	r0, r0
 7dc:	0a 94       	dec	r0
 7de:	16 16       	cp	r1, r22
 7e0:	17 06       	cpc	r1, r23
 7e2:	18 06       	cpc	r1, r24
 7e4:	09 06       	cpc	r0, r25
 7e6:	08 95       	ret

000007e8 <__fp_pscB>:
 7e8:	00 24       	eor	r0, r0
 7ea:	0a 94       	dec	r0
 7ec:	12 16       	cp	r1, r18
 7ee:	13 06       	cpc	r1, r19
 7f0:	14 06       	cpc	r1, r20
 7f2:	05 06       	cpc	r0, r21
 7f4:	08 95       	ret

000007f6 <__fp_round>:
 7f6:	09 2e       	mov	r0, r25
 7f8:	03 94       	inc	r0
 7fa:	00 0c       	add	r0, r0
 7fc:	11 f4       	brne	.+4      	; 0x802 <__fp_round+0xc>
 7fe:	88 23       	and	r24, r24
 800:	52 f0       	brmi	.+20     	; 0x816 <__fp_round+0x20>
 802:	bb 0f       	add	r27, r27
 804:	40 f4       	brcc	.+16     	; 0x816 <__fp_round+0x20>
 806:	bf 2b       	or	r27, r31
 808:	11 f4       	brne	.+4      	; 0x80e <__fp_round+0x18>
 80a:	60 ff       	sbrs	r22, 0
 80c:	04 c0       	rjmp	.+8      	; 0x816 <__fp_round+0x20>
 80e:	6f 5f       	subi	r22, 0xFF	; 255
 810:	7f 4f       	sbci	r23, 0xFF	; 255
 812:	8f 4f       	sbci	r24, 0xFF	; 255
 814:	9f 4f       	sbci	r25, 0xFF	; 255
 816:	08 95       	ret

00000818 <__fp_split3>:
 818:	57 fd       	sbrc	r21, 7
 81a:	90 58       	subi	r25, 0x80	; 128
 81c:	44 0f       	add	r20, r20
 81e:	55 1f       	adc	r21, r21
 820:	59 f0       	breq	.+22     	; 0x838 <__fp_splitA+0x10>
 822:	5f 3f       	cpi	r21, 0xFF	; 255
 824:	71 f0       	breq	.+28     	; 0x842 <__fp_splitA+0x1a>
 826:	47 95       	ror	r20

00000828 <__fp_splitA>:
 828:	88 0f       	add	r24, r24
 82a:	97 fb       	bst	r25, 7
 82c:	99 1f       	adc	r25, r25
 82e:	61 f0       	breq	.+24     	; 0x848 <__fp_splitA+0x20>
 830:	9f 3f       	cpi	r25, 0xFF	; 255
 832:	79 f0       	breq	.+30     	; 0x852 <__fp_splitA+0x2a>
 834:	87 95       	ror	r24
 836:	08 95       	ret
 838:	12 16       	cp	r1, r18
 83a:	13 06       	cpc	r1, r19
 83c:	14 06       	cpc	r1, r20
 83e:	55 1f       	adc	r21, r21
 840:	f2 cf       	rjmp	.-28     	; 0x826 <__fp_split3+0xe>
 842:	46 95       	lsr	r20
 844:	f1 df       	rcall	.-30     	; 0x828 <__fp_splitA>
 846:	08 c0       	rjmp	.+16     	; 0x858 <__fp_splitA+0x30>
 848:	16 16       	cp	r1, r22
 84a:	17 06       	cpc	r1, r23
 84c:	18 06       	cpc	r1, r24
 84e:	99 1f       	adc	r25, r25
 850:	f1 cf       	rjmp	.-30     	; 0x834 <__fp_splitA+0xc>
 852:	86 95       	lsr	r24
 854:	71 05       	cpc	r23, r1
 856:	61 05       	cpc	r22, r1
 858:	08 94       	sec
 85a:	08 95       	ret

0000085c <__fp_zero>:
 85c:	e8 94       	clt

0000085e <__fp_szero>:
 85e:	bb 27       	eor	r27, r27
 860:	66 27       	eor	r22, r22
 862:	77 27       	eor	r23, r23
 864:	cb 01       	movw	r24, r22
 866:	97 f9       	bld	r25, 7
 868:	08 95       	ret

0000086a <atoi>:
 86a:	fc 01       	movw	r30, r24
 86c:	88 27       	eor	r24, r24
 86e:	99 27       	eor	r25, r25
 870:	e8 94       	clt
 872:	21 91       	ld	r18, Z+
 874:	20 32       	cpi	r18, 0x20	; 32
 876:	e9 f3       	breq	.-6      	; 0x872 <atoi+0x8>
 878:	29 30       	cpi	r18, 0x09	; 9
 87a:	10 f0       	brcs	.+4      	; 0x880 <atoi+0x16>
 87c:	2e 30       	cpi	r18, 0x0E	; 14
 87e:	c8 f3       	brcs	.-14     	; 0x872 <atoi+0x8>
 880:	2b 32       	cpi	r18, 0x2B	; 43
 882:	41 f0       	breq	.+16     	; 0x894 <atoi+0x2a>
 884:	2d 32       	cpi	r18, 0x2D	; 45
 886:	39 f4       	brne	.+14     	; 0x896 <atoi+0x2c>
 888:	68 94       	set
 88a:	04 c0       	rjmp	.+8      	; 0x894 <atoi+0x2a>
 88c:	0e 94 53 04 	call	0x8a6	; 0x8a6 <__mulhi_const_10>
 890:	82 0f       	add	r24, r18
 892:	91 1d       	adc	r25, r1
 894:	21 91       	ld	r18, Z+
 896:	20 53       	subi	r18, 0x30	; 48
 898:	2a 30       	cpi	r18, 0x0A	; 10
 89a:	c0 f3       	brcs	.-16     	; 0x88c <atoi+0x22>
 89c:	1e f4       	brtc	.+6      	; 0x8a4 <atoi+0x3a>
 89e:	90 95       	com	r25
 8a0:	81 95       	neg	r24
 8a2:	9f 4f       	sbci	r25, 0xFF	; 255
 8a4:	08 95       	ret

000008a6 <__mulhi_const_10>:
 8a6:	7a e0       	ldi	r23, 0x0A	; 10
 8a8:	97 9f       	mul	r25, r23
 8aa:	90 2d       	mov	r25, r0
 8ac:	87 9f       	mul	r24, r23
 8ae:	80 2d       	mov	r24, r0
 8b0:	91 0d       	add	r25, r1
 8b2:	11 24       	eor	r1, r1
 8b4:	08 95       	ret

000008b6 <sprintf>:
 8b6:	ae e0       	ldi	r26, 0x0E	; 14
 8b8:	b0 e0       	ldi	r27, 0x00	; 0
 8ba:	e1 e6       	ldi	r30, 0x61	; 97
 8bc:	f4 e0       	ldi	r31, 0x04	; 4
 8be:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <__prologue_saves__+0x1c>
 8c2:	0d 89       	ldd	r16, Y+21	; 0x15
 8c4:	1e 89       	ldd	r17, Y+22	; 0x16
 8c6:	86 e0       	ldi	r24, 0x06	; 6
 8c8:	8c 83       	std	Y+4, r24	; 0x04
 8ca:	1a 83       	std	Y+2, r17	; 0x02
 8cc:	09 83       	std	Y+1, r16	; 0x01
 8ce:	8f ef       	ldi	r24, 0xFF	; 255
 8d0:	9f e7       	ldi	r25, 0x7F	; 127
 8d2:	9e 83       	std	Y+6, r25	; 0x06
 8d4:	8d 83       	std	Y+5, r24	; 0x05
 8d6:	ae 01       	movw	r20, r28
 8d8:	47 5e       	subi	r20, 0xE7	; 231
 8da:	5f 4f       	sbci	r21, 0xFF	; 255
 8dc:	6f 89       	ldd	r22, Y+23	; 0x17
 8de:	78 8d       	ldd	r23, Y+24	; 0x18
 8e0:	ce 01       	movw	r24, r28
 8e2:	01 96       	adiw	r24, 0x01	; 1
 8e4:	0e 94 7d 04 	call	0x8fa	; 0x8fa <vfprintf>
 8e8:	ef 81       	ldd	r30, Y+7	; 0x07
 8ea:	f8 85       	ldd	r31, Y+8	; 0x08
 8ec:	e0 0f       	add	r30, r16
 8ee:	f1 1f       	adc	r31, r17
 8f0:	10 82       	st	Z, r1
 8f2:	2e 96       	adiw	r28, 0x0e	; 14
 8f4:	e4 e0       	ldi	r30, 0x04	; 4
 8f6:	0c 94 38 07 	jmp	0xe70	; 0xe70 <__epilogue_restores__+0x1c>

000008fa <vfprintf>:
 8fa:	ab e0       	ldi	r26, 0x0B	; 11
 8fc:	b0 e0       	ldi	r27, 0x00	; 0
 8fe:	e3 e8       	ldi	r30, 0x83	; 131
 900:	f4 e0       	ldi	r31, 0x04	; 4
 902:	0c 94 0e 07 	jmp	0xe1c	; 0xe1c <__prologue_saves__>
 906:	6c 01       	movw	r12, r24
 908:	7b 01       	movw	r14, r22
 90a:	8a 01       	movw	r16, r20
 90c:	fc 01       	movw	r30, r24
 90e:	17 82       	std	Z+7, r1	; 0x07
 910:	16 82       	std	Z+6, r1	; 0x06
 912:	83 81       	ldd	r24, Z+3	; 0x03
 914:	81 ff       	sbrs	r24, 1
 916:	cc c1       	rjmp	.+920    	; 0xcb0 <__stack+0x3b1>
 918:	ce 01       	movw	r24, r28
 91a:	01 96       	adiw	r24, 0x01	; 1
 91c:	3c 01       	movw	r6, r24
 91e:	f6 01       	movw	r30, r12
 920:	93 81       	ldd	r25, Z+3	; 0x03
 922:	f7 01       	movw	r30, r14
 924:	93 fd       	sbrc	r25, 3
 926:	85 91       	lpm	r24, Z+
 928:	93 ff       	sbrs	r25, 3
 92a:	81 91       	ld	r24, Z+
 92c:	7f 01       	movw	r14, r30
 92e:	88 23       	and	r24, r24
 930:	09 f4       	brne	.+2      	; 0x934 <__stack+0x35>
 932:	ba c1       	rjmp	.+884    	; 0xca8 <__stack+0x3a9>
 934:	85 32       	cpi	r24, 0x25	; 37
 936:	39 f4       	brne	.+14     	; 0x946 <__stack+0x47>
 938:	93 fd       	sbrc	r25, 3
 93a:	85 91       	lpm	r24, Z+
 93c:	93 ff       	sbrs	r25, 3
 93e:	81 91       	ld	r24, Z+
 940:	7f 01       	movw	r14, r30
 942:	85 32       	cpi	r24, 0x25	; 37
 944:	29 f4       	brne	.+10     	; 0x950 <__stack+0x51>
 946:	b6 01       	movw	r22, r12
 948:	90 e0       	ldi	r25, 0x00	; 0
 94a:	0e 94 74 06 	call	0xce8	; 0xce8 <fputc>
 94e:	e7 cf       	rjmp	.-50     	; 0x91e <__stack+0x1f>
 950:	91 2c       	mov	r9, r1
 952:	21 2c       	mov	r2, r1
 954:	31 2c       	mov	r3, r1
 956:	ff e1       	ldi	r31, 0x1F	; 31
 958:	f3 15       	cp	r31, r3
 95a:	d8 f0       	brcs	.+54     	; 0x992 <__stack+0x93>
 95c:	8b 32       	cpi	r24, 0x2B	; 43
 95e:	79 f0       	breq	.+30     	; 0x97e <__stack+0x7f>
 960:	38 f4       	brcc	.+14     	; 0x970 <__stack+0x71>
 962:	80 32       	cpi	r24, 0x20	; 32
 964:	79 f0       	breq	.+30     	; 0x984 <__stack+0x85>
 966:	83 32       	cpi	r24, 0x23	; 35
 968:	a1 f4       	brne	.+40     	; 0x992 <__stack+0x93>
 96a:	23 2d       	mov	r18, r3
 96c:	20 61       	ori	r18, 0x10	; 16
 96e:	1d c0       	rjmp	.+58     	; 0x9aa <__stack+0xab>
 970:	8d 32       	cpi	r24, 0x2D	; 45
 972:	61 f0       	breq	.+24     	; 0x98c <__stack+0x8d>
 974:	80 33       	cpi	r24, 0x30	; 48
 976:	69 f4       	brne	.+26     	; 0x992 <__stack+0x93>
 978:	23 2d       	mov	r18, r3
 97a:	21 60       	ori	r18, 0x01	; 1
 97c:	16 c0       	rjmp	.+44     	; 0x9aa <__stack+0xab>
 97e:	83 2d       	mov	r24, r3
 980:	82 60       	ori	r24, 0x02	; 2
 982:	38 2e       	mov	r3, r24
 984:	e3 2d       	mov	r30, r3
 986:	e4 60       	ori	r30, 0x04	; 4
 988:	3e 2e       	mov	r3, r30
 98a:	2a c0       	rjmp	.+84     	; 0x9e0 <__stack+0xe1>
 98c:	f3 2d       	mov	r31, r3
 98e:	f8 60       	ori	r31, 0x08	; 8
 990:	1d c0       	rjmp	.+58     	; 0x9cc <__stack+0xcd>
 992:	37 fc       	sbrc	r3, 7
 994:	2d c0       	rjmp	.+90     	; 0x9f0 <__stack+0xf1>
 996:	20 ed       	ldi	r18, 0xD0	; 208
 998:	28 0f       	add	r18, r24
 99a:	2a 30       	cpi	r18, 0x0A	; 10
 99c:	40 f0       	brcs	.+16     	; 0x9ae <__stack+0xaf>
 99e:	8e 32       	cpi	r24, 0x2E	; 46
 9a0:	b9 f4       	brne	.+46     	; 0x9d0 <__stack+0xd1>
 9a2:	36 fc       	sbrc	r3, 6
 9a4:	81 c1       	rjmp	.+770    	; 0xca8 <__stack+0x3a9>
 9a6:	23 2d       	mov	r18, r3
 9a8:	20 64       	ori	r18, 0x40	; 64
 9aa:	32 2e       	mov	r3, r18
 9ac:	19 c0       	rjmp	.+50     	; 0x9e0 <__stack+0xe1>
 9ae:	36 fe       	sbrs	r3, 6
 9b0:	06 c0       	rjmp	.+12     	; 0x9be <__stack+0xbf>
 9b2:	8a e0       	ldi	r24, 0x0A	; 10
 9b4:	98 9e       	mul	r9, r24
 9b6:	20 0d       	add	r18, r0
 9b8:	11 24       	eor	r1, r1
 9ba:	92 2e       	mov	r9, r18
 9bc:	11 c0       	rjmp	.+34     	; 0x9e0 <__stack+0xe1>
 9be:	ea e0       	ldi	r30, 0x0A	; 10
 9c0:	2e 9e       	mul	r2, r30
 9c2:	20 0d       	add	r18, r0
 9c4:	11 24       	eor	r1, r1
 9c6:	22 2e       	mov	r2, r18
 9c8:	f3 2d       	mov	r31, r3
 9ca:	f0 62       	ori	r31, 0x20	; 32
 9cc:	3f 2e       	mov	r3, r31
 9ce:	08 c0       	rjmp	.+16     	; 0x9e0 <__stack+0xe1>
 9d0:	8c 36       	cpi	r24, 0x6C	; 108
 9d2:	21 f4       	brne	.+8      	; 0x9dc <__stack+0xdd>
 9d4:	83 2d       	mov	r24, r3
 9d6:	80 68       	ori	r24, 0x80	; 128
 9d8:	38 2e       	mov	r3, r24
 9da:	02 c0       	rjmp	.+4      	; 0x9e0 <__stack+0xe1>
 9dc:	88 36       	cpi	r24, 0x68	; 104
 9de:	41 f4       	brne	.+16     	; 0x9f0 <__stack+0xf1>
 9e0:	f7 01       	movw	r30, r14
 9e2:	93 fd       	sbrc	r25, 3
 9e4:	85 91       	lpm	r24, Z+
 9e6:	93 ff       	sbrs	r25, 3
 9e8:	81 91       	ld	r24, Z+
 9ea:	7f 01       	movw	r14, r30
 9ec:	81 11       	cpse	r24, r1
 9ee:	b3 cf       	rjmp	.-154    	; 0x956 <__stack+0x57>
 9f0:	98 2f       	mov	r25, r24
 9f2:	9f 7d       	andi	r25, 0xDF	; 223
 9f4:	95 54       	subi	r25, 0x45	; 69
 9f6:	93 30       	cpi	r25, 0x03	; 3
 9f8:	28 f4       	brcc	.+10     	; 0xa04 <__stack+0x105>
 9fa:	0c 5f       	subi	r16, 0xFC	; 252
 9fc:	1f 4f       	sbci	r17, 0xFF	; 255
 9fe:	9f e3       	ldi	r25, 0x3F	; 63
 a00:	99 83       	std	Y+1, r25	; 0x01
 a02:	0d c0       	rjmp	.+26     	; 0xa1e <__stack+0x11f>
 a04:	83 36       	cpi	r24, 0x63	; 99
 a06:	31 f0       	breq	.+12     	; 0xa14 <__stack+0x115>
 a08:	83 37       	cpi	r24, 0x73	; 115
 a0a:	71 f0       	breq	.+28     	; 0xa28 <__stack+0x129>
 a0c:	83 35       	cpi	r24, 0x53	; 83
 a0e:	09 f0       	breq	.+2      	; 0xa12 <__stack+0x113>
 a10:	59 c0       	rjmp	.+178    	; 0xac4 <__stack+0x1c5>
 a12:	21 c0       	rjmp	.+66     	; 0xa56 <__stack+0x157>
 a14:	f8 01       	movw	r30, r16
 a16:	80 81       	ld	r24, Z
 a18:	89 83       	std	Y+1, r24	; 0x01
 a1a:	0e 5f       	subi	r16, 0xFE	; 254
 a1c:	1f 4f       	sbci	r17, 0xFF	; 255
 a1e:	88 24       	eor	r8, r8
 a20:	83 94       	inc	r8
 a22:	91 2c       	mov	r9, r1
 a24:	53 01       	movw	r10, r6
 a26:	13 c0       	rjmp	.+38     	; 0xa4e <__stack+0x14f>
 a28:	28 01       	movw	r4, r16
 a2a:	f2 e0       	ldi	r31, 0x02	; 2
 a2c:	4f 0e       	add	r4, r31
 a2e:	51 1c       	adc	r5, r1
 a30:	f8 01       	movw	r30, r16
 a32:	a0 80       	ld	r10, Z
 a34:	b1 80       	ldd	r11, Z+1	; 0x01
 a36:	36 fe       	sbrs	r3, 6
 a38:	03 c0       	rjmp	.+6      	; 0xa40 <__stack+0x141>
 a3a:	69 2d       	mov	r22, r9
 a3c:	70 e0       	ldi	r23, 0x00	; 0
 a3e:	02 c0       	rjmp	.+4      	; 0xa44 <__stack+0x145>
 a40:	6f ef       	ldi	r22, 0xFF	; 255
 a42:	7f ef       	ldi	r23, 0xFF	; 255
 a44:	c5 01       	movw	r24, r10
 a46:	0e 94 69 06 	call	0xcd2	; 0xcd2 <strnlen>
 a4a:	4c 01       	movw	r8, r24
 a4c:	82 01       	movw	r16, r4
 a4e:	f3 2d       	mov	r31, r3
 a50:	ff 77       	andi	r31, 0x7F	; 127
 a52:	3f 2e       	mov	r3, r31
 a54:	16 c0       	rjmp	.+44     	; 0xa82 <__stack+0x183>
 a56:	28 01       	movw	r4, r16
 a58:	22 e0       	ldi	r18, 0x02	; 2
 a5a:	42 0e       	add	r4, r18
 a5c:	51 1c       	adc	r5, r1
 a5e:	f8 01       	movw	r30, r16
 a60:	a0 80       	ld	r10, Z
 a62:	b1 80       	ldd	r11, Z+1	; 0x01
 a64:	36 fe       	sbrs	r3, 6
 a66:	03 c0       	rjmp	.+6      	; 0xa6e <__stack+0x16f>
 a68:	69 2d       	mov	r22, r9
 a6a:	70 e0       	ldi	r23, 0x00	; 0
 a6c:	02 c0       	rjmp	.+4      	; 0xa72 <__stack+0x173>
 a6e:	6f ef       	ldi	r22, 0xFF	; 255
 a70:	7f ef       	ldi	r23, 0xFF	; 255
 a72:	c5 01       	movw	r24, r10
 a74:	0e 94 5e 06 	call	0xcbc	; 0xcbc <strnlen_P>
 a78:	4c 01       	movw	r8, r24
 a7a:	f3 2d       	mov	r31, r3
 a7c:	f0 68       	ori	r31, 0x80	; 128
 a7e:	3f 2e       	mov	r3, r31
 a80:	82 01       	movw	r16, r4
 a82:	33 fc       	sbrc	r3, 3
 a84:	1b c0       	rjmp	.+54     	; 0xabc <__stack+0x1bd>
 a86:	82 2d       	mov	r24, r2
 a88:	90 e0       	ldi	r25, 0x00	; 0
 a8a:	88 16       	cp	r8, r24
 a8c:	99 06       	cpc	r9, r25
 a8e:	b0 f4       	brcc	.+44     	; 0xabc <__stack+0x1bd>
 a90:	b6 01       	movw	r22, r12
 a92:	80 e2       	ldi	r24, 0x20	; 32
 a94:	90 e0       	ldi	r25, 0x00	; 0
 a96:	0e 94 74 06 	call	0xce8	; 0xce8 <fputc>
 a9a:	2a 94       	dec	r2
 a9c:	f4 cf       	rjmp	.-24     	; 0xa86 <__stack+0x187>
 a9e:	f5 01       	movw	r30, r10
 aa0:	37 fc       	sbrc	r3, 7
 aa2:	85 91       	lpm	r24, Z+
 aa4:	37 fe       	sbrs	r3, 7
 aa6:	81 91       	ld	r24, Z+
 aa8:	5f 01       	movw	r10, r30
 aaa:	b6 01       	movw	r22, r12
 aac:	90 e0       	ldi	r25, 0x00	; 0
 aae:	0e 94 74 06 	call	0xce8	; 0xce8 <fputc>
 ab2:	21 10       	cpse	r2, r1
 ab4:	2a 94       	dec	r2
 ab6:	21 e0       	ldi	r18, 0x01	; 1
 ab8:	82 1a       	sub	r8, r18
 aba:	91 08       	sbc	r9, r1
 abc:	81 14       	cp	r8, r1
 abe:	91 04       	cpc	r9, r1
 ac0:	71 f7       	brne	.-36     	; 0xa9e <__stack+0x19f>
 ac2:	e8 c0       	rjmp	.+464    	; 0xc94 <__stack+0x395>
 ac4:	84 36       	cpi	r24, 0x64	; 100
 ac6:	11 f0       	breq	.+4      	; 0xacc <__stack+0x1cd>
 ac8:	89 36       	cpi	r24, 0x69	; 105
 aca:	41 f5       	brne	.+80     	; 0xb1c <__stack+0x21d>
 acc:	f8 01       	movw	r30, r16
 ace:	37 fe       	sbrs	r3, 7
 ad0:	07 c0       	rjmp	.+14     	; 0xae0 <__stack+0x1e1>
 ad2:	60 81       	ld	r22, Z
 ad4:	71 81       	ldd	r23, Z+1	; 0x01
 ad6:	82 81       	ldd	r24, Z+2	; 0x02
 ad8:	93 81       	ldd	r25, Z+3	; 0x03
 ada:	0c 5f       	subi	r16, 0xFC	; 252
 adc:	1f 4f       	sbci	r17, 0xFF	; 255
 ade:	08 c0       	rjmp	.+16     	; 0xaf0 <__stack+0x1f1>
 ae0:	60 81       	ld	r22, Z
 ae2:	71 81       	ldd	r23, Z+1	; 0x01
 ae4:	07 2e       	mov	r0, r23
 ae6:	00 0c       	add	r0, r0
 ae8:	88 0b       	sbc	r24, r24
 aea:	99 0b       	sbc	r25, r25
 aec:	0e 5f       	subi	r16, 0xFE	; 254
 aee:	1f 4f       	sbci	r17, 0xFF	; 255
 af0:	f3 2d       	mov	r31, r3
 af2:	ff 76       	andi	r31, 0x6F	; 111
 af4:	3f 2e       	mov	r3, r31
 af6:	97 ff       	sbrs	r25, 7
 af8:	09 c0       	rjmp	.+18     	; 0xb0c <__stack+0x20d>
 afa:	90 95       	com	r25
 afc:	80 95       	com	r24
 afe:	70 95       	com	r23
 b00:	61 95       	neg	r22
 b02:	7f 4f       	sbci	r23, 0xFF	; 255
 b04:	8f 4f       	sbci	r24, 0xFF	; 255
 b06:	9f 4f       	sbci	r25, 0xFF	; 255
 b08:	f0 68       	ori	r31, 0x80	; 128
 b0a:	3f 2e       	mov	r3, r31
 b0c:	2a e0       	ldi	r18, 0x0A	; 10
 b0e:	30 e0       	ldi	r19, 0x00	; 0
 b10:	a3 01       	movw	r20, r6
 b12:	0e 94 b0 06 	call	0xd60	; 0xd60 <__ultoa_invert>
 b16:	88 2e       	mov	r8, r24
 b18:	86 18       	sub	r8, r6
 b1a:	45 c0       	rjmp	.+138    	; 0xba6 <__stack+0x2a7>
 b1c:	85 37       	cpi	r24, 0x75	; 117
 b1e:	31 f4       	brne	.+12     	; 0xb2c <__stack+0x22d>
 b20:	23 2d       	mov	r18, r3
 b22:	2f 7e       	andi	r18, 0xEF	; 239
 b24:	b2 2e       	mov	r11, r18
 b26:	2a e0       	ldi	r18, 0x0A	; 10
 b28:	30 e0       	ldi	r19, 0x00	; 0
 b2a:	25 c0       	rjmp	.+74     	; 0xb76 <__stack+0x277>
 b2c:	93 2d       	mov	r25, r3
 b2e:	99 7f       	andi	r25, 0xF9	; 249
 b30:	b9 2e       	mov	r11, r25
 b32:	8f 36       	cpi	r24, 0x6F	; 111
 b34:	c1 f0       	breq	.+48     	; 0xb66 <__stack+0x267>
 b36:	18 f4       	brcc	.+6      	; 0xb3e <__stack+0x23f>
 b38:	88 35       	cpi	r24, 0x58	; 88
 b3a:	79 f0       	breq	.+30     	; 0xb5a <__stack+0x25b>
 b3c:	b5 c0       	rjmp	.+362    	; 0xca8 <__stack+0x3a9>
 b3e:	80 37       	cpi	r24, 0x70	; 112
 b40:	19 f0       	breq	.+6      	; 0xb48 <__stack+0x249>
 b42:	88 37       	cpi	r24, 0x78	; 120
 b44:	21 f0       	breq	.+8      	; 0xb4e <__stack+0x24f>
 b46:	b0 c0       	rjmp	.+352    	; 0xca8 <__stack+0x3a9>
 b48:	e9 2f       	mov	r30, r25
 b4a:	e0 61       	ori	r30, 0x10	; 16
 b4c:	be 2e       	mov	r11, r30
 b4e:	b4 fe       	sbrs	r11, 4
 b50:	0d c0       	rjmp	.+26     	; 0xb6c <__stack+0x26d>
 b52:	fb 2d       	mov	r31, r11
 b54:	f4 60       	ori	r31, 0x04	; 4
 b56:	bf 2e       	mov	r11, r31
 b58:	09 c0       	rjmp	.+18     	; 0xb6c <__stack+0x26d>
 b5a:	34 fe       	sbrs	r3, 4
 b5c:	0a c0       	rjmp	.+20     	; 0xb72 <__stack+0x273>
 b5e:	29 2f       	mov	r18, r25
 b60:	26 60       	ori	r18, 0x06	; 6
 b62:	b2 2e       	mov	r11, r18
 b64:	06 c0       	rjmp	.+12     	; 0xb72 <__stack+0x273>
 b66:	28 e0       	ldi	r18, 0x08	; 8
 b68:	30 e0       	ldi	r19, 0x00	; 0
 b6a:	05 c0       	rjmp	.+10     	; 0xb76 <__stack+0x277>
 b6c:	20 e1       	ldi	r18, 0x10	; 16
 b6e:	30 e0       	ldi	r19, 0x00	; 0
 b70:	02 c0       	rjmp	.+4      	; 0xb76 <__stack+0x277>
 b72:	20 e1       	ldi	r18, 0x10	; 16
 b74:	32 e0       	ldi	r19, 0x02	; 2
 b76:	f8 01       	movw	r30, r16
 b78:	b7 fe       	sbrs	r11, 7
 b7a:	07 c0       	rjmp	.+14     	; 0xb8a <__stack+0x28b>
 b7c:	60 81       	ld	r22, Z
 b7e:	71 81       	ldd	r23, Z+1	; 0x01
 b80:	82 81       	ldd	r24, Z+2	; 0x02
 b82:	93 81       	ldd	r25, Z+3	; 0x03
 b84:	0c 5f       	subi	r16, 0xFC	; 252
 b86:	1f 4f       	sbci	r17, 0xFF	; 255
 b88:	06 c0       	rjmp	.+12     	; 0xb96 <__stack+0x297>
 b8a:	60 81       	ld	r22, Z
 b8c:	71 81       	ldd	r23, Z+1	; 0x01
 b8e:	80 e0       	ldi	r24, 0x00	; 0
 b90:	90 e0       	ldi	r25, 0x00	; 0
 b92:	0e 5f       	subi	r16, 0xFE	; 254
 b94:	1f 4f       	sbci	r17, 0xFF	; 255
 b96:	a3 01       	movw	r20, r6
 b98:	0e 94 b0 06 	call	0xd60	; 0xd60 <__ultoa_invert>
 b9c:	88 2e       	mov	r8, r24
 b9e:	86 18       	sub	r8, r6
 ba0:	fb 2d       	mov	r31, r11
 ba2:	ff 77       	andi	r31, 0x7F	; 127
 ba4:	3f 2e       	mov	r3, r31
 ba6:	36 fe       	sbrs	r3, 6
 ba8:	0d c0       	rjmp	.+26     	; 0xbc4 <__stack+0x2c5>
 baa:	23 2d       	mov	r18, r3
 bac:	2e 7f       	andi	r18, 0xFE	; 254
 bae:	a2 2e       	mov	r10, r18
 bb0:	89 14       	cp	r8, r9
 bb2:	58 f4       	brcc	.+22     	; 0xbca <__stack+0x2cb>
 bb4:	34 fe       	sbrs	r3, 4
 bb6:	0b c0       	rjmp	.+22     	; 0xbce <__stack+0x2cf>
 bb8:	32 fc       	sbrc	r3, 2
 bba:	09 c0       	rjmp	.+18     	; 0xbce <__stack+0x2cf>
 bbc:	83 2d       	mov	r24, r3
 bbe:	8e 7e       	andi	r24, 0xEE	; 238
 bc0:	a8 2e       	mov	r10, r24
 bc2:	05 c0       	rjmp	.+10     	; 0xbce <__stack+0x2cf>
 bc4:	b8 2c       	mov	r11, r8
 bc6:	a3 2c       	mov	r10, r3
 bc8:	03 c0       	rjmp	.+6      	; 0xbd0 <__stack+0x2d1>
 bca:	b8 2c       	mov	r11, r8
 bcc:	01 c0       	rjmp	.+2      	; 0xbd0 <__stack+0x2d1>
 bce:	b9 2c       	mov	r11, r9
 bd0:	a4 fe       	sbrs	r10, 4
 bd2:	0f c0       	rjmp	.+30     	; 0xbf2 <__stack+0x2f3>
 bd4:	fe 01       	movw	r30, r28
 bd6:	e8 0d       	add	r30, r8
 bd8:	f1 1d       	adc	r31, r1
 bda:	80 81       	ld	r24, Z
 bdc:	80 33       	cpi	r24, 0x30	; 48
 bde:	21 f4       	brne	.+8      	; 0xbe8 <__stack+0x2e9>
 be0:	9a 2d       	mov	r25, r10
 be2:	99 7e       	andi	r25, 0xE9	; 233
 be4:	a9 2e       	mov	r10, r25
 be6:	09 c0       	rjmp	.+18     	; 0xbfa <__stack+0x2fb>
 be8:	a2 fe       	sbrs	r10, 2
 bea:	06 c0       	rjmp	.+12     	; 0xbf8 <__stack+0x2f9>
 bec:	b3 94       	inc	r11
 bee:	b3 94       	inc	r11
 bf0:	04 c0       	rjmp	.+8      	; 0xbfa <__stack+0x2fb>
 bf2:	8a 2d       	mov	r24, r10
 bf4:	86 78       	andi	r24, 0x86	; 134
 bf6:	09 f0       	breq	.+2      	; 0xbfa <__stack+0x2fb>
 bf8:	b3 94       	inc	r11
 bfa:	a3 fc       	sbrc	r10, 3
 bfc:	11 c0       	rjmp	.+34     	; 0xc20 <__stack+0x321>
 bfe:	a0 fe       	sbrs	r10, 0
 c00:	06 c0       	rjmp	.+12     	; 0xc0e <__stack+0x30f>
 c02:	b2 14       	cp	r11, r2
 c04:	88 f4       	brcc	.+34     	; 0xc28 <__stack+0x329>
 c06:	28 0c       	add	r2, r8
 c08:	92 2c       	mov	r9, r2
 c0a:	9b 18       	sub	r9, r11
 c0c:	0e c0       	rjmp	.+28     	; 0xc2a <__stack+0x32b>
 c0e:	b2 14       	cp	r11, r2
 c10:	60 f4       	brcc	.+24     	; 0xc2a <__stack+0x32b>
 c12:	b6 01       	movw	r22, r12
 c14:	80 e2       	ldi	r24, 0x20	; 32
 c16:	90 e0       	ldi	r25, 0x00	; 0
 c18:	0e 94 74 06 	call	0xce8	; 0xce8 <fputc>
 c1c:	b3 94       	inc	r11
 c1e:	f7 cf       	rjmp	.-18     	; 0xc0e <__stack+0x30f>
 c20:	b2 14       	cp	r11, r2
 c22:	18 f4       	brcc	.+6      	; 0xc2a <__stack+0x32b>
 c24:	2b 18       	sub	r2, r11
 c26:	02 c0       	rjmp	.+4      	; 0xc2c <__stack+0x32d>
 c28:	98 2c       	mov	r9, r8
 c2a:	21 2c       	mov	r2, r1
 c2c:	a4 fe       	sbrs	r10, 4
 c2e:	10 c0       	rjmp	.+32     	; 0xc50 <__stack+0x351>
 c30:	b6 01       	movw	r22, r12
 c32:	80 e3       	ldi	r24, 0x30	; 48
 c34:	90 e0       	ldi	r25, 0x00	; 0
 c36:	0e 94 74 06 	call	0xce8	; 0xce8 <fputc>
 c3a:	a2 fe       	sbrs	r10, 2
 c3c:	17 c0       	rjmp	.+46     	; 0xc6c <__stack+0x36d>
 c3e:	a1 fc       	sbrc	r10, 1
 c40:	03 c0       	rjmp	.+6      	; 0xc48 <__stack+0x349>
 c42:	88 e7       	ldi	r24, 0x78	; 120
 c44:	90 e0       	ldi	r25, 0x00	; 0
 c46:	02 c0       	rjmp	.+4      	; 0xc4c <__stack+0x34d>
 c48:	88 e5       	ldi	r24, 0x58	; 88
 c4a:	90 e0       	ldi	r25, 0x00	; 0
 c4c:	b6 01       	movw	r22, r12
 c4e:	0c c0       	rjmp	.+24     	; 0xc68 <__stack+0x369>
 c50:	8a 2d       	mov	r24, r10
 c52:	86 78       	andi	r24, 0x86	; 134
 c54:	59 f0       	breq	.+22     	; 0xc6c <__stack+0x36d>
 c56:	a1 fe       	sbrs	r10, 1
 c58:	02 c0       	rjmp	.+4      	; 0xc5e <__stack+0x35f>
 c5a:	8b e2       	ldi	r24, 0x2B	; 43
 c5c:	01 c0       	rjmp	.+2      	; 0xc60 <__stack+0x361>
 c5e:	80 e2       	ldi	r24, 0x20	; 32
 c60:	a7 fc       	sbrc	r10, 7
 c62:	8d e2       	ldi	r24, 0x2D	; 45
 c64:	b6 01       	movw	r22, r12
 c66:	90 e0       	ldi	r25, 0x00	; 0
 c68:	0e 94 74 06 	call	0xce8	; 0xce8 <fputc>
 c6c:	89 14       	cp	r8, r9
 c6e:	38 f4       	brcc	.+14     	; 0xc7e <__stack+0x37f>
 c70:	b6 01       	movw	r22, r12
 c72:	80 e3       	ldi	r24, 0x30	; 48
 c74:	90 e0       	ldi	r25, 0x00	; 0
 c76:	0e 94 74 06 	call	0xce8	; 0xce8 <fputc>
 c7a:	9a 94       	dec	r9
 c7c:	f7 cf       	rjmp	.-18     	; 0xc6c <__stack+0x36d>
 c7e:	8a 94       	dec	r8
 c80:	f3 01       	movw	r30, r6
 c82:	e8 0d       	add	r30, r8
 c84:	f1 1d       	adc	r31, r1
 c86:	80 81       	ld	r24, Z
 c88:	b6 01       	movw	r22, r12
 c8a:	90 e0       	ldi	r25, 0x00	; 0
 c8c:	0e 94 74 06 	call	0xce8	; 0xce8 <fputc>
 c90:	81 10       	cpse	r8, r1
 c92:	f5 cf       	rjmp	.-22     	; 0xc7e <__stack+0x37f>
 c94:	22 20       	and	r2, r2
 c96:	09 f4       	brne	.+2      	; 0xc9a <__stack+0x39b>
 c98:	42 ce       	rjmp	.-892    	; 0x91e <__stack+0x1f>
 c9a:	b6 01       	movw	r22, r12
 c9c:	80 e2       	ldi	r24, 0x20	; 32
 c9e:	90 e0       	ldi	r25, 0x00	; 0
 ca0:	0e 94 74 06 	call	0xce8	; 0xce8 <fputc>
 ca4:	2a 94       	dec	r2
 ca6:	f6 cf       	rjmp	.-20     	; 0xc94 <__stack+0x395>
 ca8:	f6 01       	movw	r30, r12
 caa:	86 81       	ldd	r24, Z+6	; 0x06
 cac:	97 81       	ldd	r25, Z+7	; 0x07
 cae:	02 c0       	rjmp	.+4      	; 0xcb4 <__stack+0x3b5>
 cb0:	8f ef       	ldi	r24, 0xFF	; 255
 cb2:	9f ef       	ldi	r25, 0xFF	; 255
 cb4:	2b 96       	adiw	r28, 0x0b	; 11
 cb6:	e2 e1       	ldi	r30, 0x12	; 18
 cb8:	0c 94 2a 07 	jmp	0xe54	; 0xe54 <__epilogue_restores__>

00000cbc <strnlen_P>:
 cbc:	fc 01       	movw	r30, r24
 cbe:	05 90       	lpm	r0, Z+
 cc0:	61 50       	subi	r22, 0x01	; 1
 cc2:	70 40       	sbci	r23, 0x00	; 0
 cc4:	01 10       	cpse	r0, r1
 cc6:	d8 f7       	brcc	.-10     	; 0xcbe <strnlen_P+0x2>
 cc8:	80 95       	com	r24
 cca:	90 95       	com	r25
 ccc:	8e 0f       	add	r24, r30
 cce:	9f 1f       	adc	r25, r31
 cd0:	08 95       	ret

00000cd2 <strnlen>:
 cd2:	fc 01       	movw	r30, r24
 cd4:	61 50       	subi	r22, 0x01	; 1
 cd6:	70 40       	sbci	r23, 0x00	; 0
 cd8:	01 90       	ld	r0, Z+
 cda:	01 10       	cpse	r0, r1
 cdc:	d8 f7       	brcc	.-10     	; 0xcd4 <strnlen+0x2>
 cde:	80 95       	com	r24
 ce0:	90 95       	com	r25
 ce2:	8e 0f       	add	r24, r30
 ce4:	9f 1f       	adc	r25, r31
 ce6:	08 95       	ret

00000ce8 <fputc>:
 ce8:	0f 93       	push	r16
 cea:	1f 93       	push	r17
 cec:	cf 93       	push	r28
 cee:	df 93       	push	r29
 cf0:	fb 01       	movw	r30, r22
 cf2:	23 81       	ldd	r18, Z+3	; 0x03
 cf4:	21 fd       	sbrc	r18, 1
 cf6:	03 c0       	rjmp	.+6      	; 0xcfe <fputc+0x16>
 cf8:	8f ef       	ldi	r24, 0xFF	; 255
 cfa:	9f ef       	ldi	r25, 0xFF	; 255
 cfc:	2c c0       	rjmp	.+88     	; 0xd56 <fputc+0x6e>
 cfe:	22 ff       	sbrs	r18, 2
 d00:	16 c0       	rjmp	.+44     	; 0xd2e <fputc+0x46>
 d02:	46 81       	ldd	r20, Z+6	; 0x06
 d04:	57 81       	ldd	r21, Z+7	; 0x07
 d06:	24 81       	ldd	r18, Z+4	; 0x04
 d08:	35 81       	ldd	r19, Z+5	; 0x05
 d0a:	42 17       	cp	r20, r18
 d0c:	53 07       	cpc	r21, r19
 d0e:	44 f4       	brge	.+16     	; 0xd20 <fputc+0x38>
 d10:	a0 81       	ld	r26, Z
 d12:	b1 81       	ldd	r27, Z+1	; 0x01
 d14:	9d 01       	movw	r18, r26
 d16:	2f 5f       	subi	r18, 0xFF	; 255
 d18:	3f 4f       	sbci	r19, 0xFF	; 255
 d1a:	31 83       	std	Z+1, r19	; 0x01
 d1c:	20 83       	st	Z, r18
 d1e:	8c 93       	st	X, r24
 d20:	26 81       	ldd	r18, Z+6	; 0x06
 d22:	37 81       	ldd	r19, Z+7	; 0x07
 d24:	2f 5f       	subi	r18, 0xFF	; 255
 d26:	3f 4f       	sbci	r19, 0xFF	; 255
 d28:	37 83       	std	Z+7, r19	; 0x07
 d2a:	26 83       	std	Z+6, r18	; 0x06
 d2c:	14 c0       	rjmp	.+40     	; 0xd56 <fputc+0x6e>
 d2e:	8b 01       	movw	r16, r22
 d30:	ec 01       	movw	r28, r24
 d32:	fb 01       	movw	r30, r22
 d34:	00 84       	ldd	r0, Z+8	; 0x08
 d36:	f1 85       	ldd	r31, Z+9	; 0x09
 d38:	e0 2d       	mov	r30, r0
 d3a:	09 95       	icall
 d3c:	89 2b       	or	r24, r25
 d3e:	e1 f6       	brne	.-72     	; 0xcf8 <fputc+0x10>
 d40:	d8 01       	movw	r26, r16
 d42:	16 96       	adiw	r26, 0x06	; 6
 d44:	8d 91       	ld	r24, X+
 d46:	9c 91       	ld	r25, X
 d48:	17 97       	sbiw	r26, 0x07	; 7
 d4a:	01 96       	adiw	r24, 0x01	; 1
 d4c:	17 96       	adiw	r26, 0x07	; 7
 d4e:	9c 93       	st	X, r25
 d50:	8e 93       	st	-X, r24
 d52:	16 97       	sbiw	r26, 0x06	; 6
 d54:	ce 01       	movw	r24, r28
 d56:	df 91       	pop	r29
 d58:	cf 91       	pop	r28
 d5a:	1f 91       	pop	r17
 d5c:	0f 91       	pop	r16
 d5e:	08 95       	ret

00000d60 <__ultoa_invert>:
 d60:	fa 01       	movw	r30, r20
 d62:	aa 27       	eor	r26, r26
 d64:	28 30       	cpi	r18, 0x08	; 8
 d66:	51 f1       	breq	.+84     	; 0xdbc <__ultoa_invert+0x5c>
 d68:	20 31       	cpi	r18, 0x10	; 16
 d6a:	81 f1       	breq	.+96     	; 0xdcc <__ultoa_invert+0x6c>
 d6c:	e8 94       	clt
 d6e:	6f 93       	push	r22
 d70:	6e 7f       	andi	r22, 0xFE	; 254
 d72:	6e 5f       	subi	r22, 0xFE	; 254
 d74:	7f 4f       	sbci	r23, 0xFF	; 255
 d76:	8f 4f       	sbci	r24, 0xFF	; 255
 d78:	9f 4f       	sbci	r25, 0xFF	; 255
 d7a:	af 4f       	sbci	r26, 0xFF	; 255
 d7c:	b1 e0       	ldi	r27, 0x01	; 1
 d7e:	3e d0       	rcall	.+124    	; 0xdfc <__ultoa_invert+0x9c>
 d80:	b4 e0       	ldi	r27, 0x04	; 4
 d82:	3c d0       	rcall	.+120    	; 0xdfc <__ultoa_invert+0x9c>
 d84:	67 0f       	add	r22, r23
 d86:	78 1f       	adc	r23, r24
 d88:	89 1f       	adc	r24, r25
 d8a:	9a 1f       	adc	r25, r26
 d8c:	a1 1d       	adc	r26, r1
 d8e:	68 0f       	add	r22, r24
 d90:	79 1f       	adc	r23, r25
 d92:	8a 1f       	adc	r24, r26
 d94:	91 1d       	adc	r25, r1
 d96:	a1 1d       	adc	r26, r1
 d98:	6a 0f       	add	r22, r26
 d9a:	71 1d       	adc	r23, r1
 d9c:	81 1d       	adc	r24, r1
 d9e:	91 1d       	adc	r25, r1
 da0:	a1 1d       	adc	r26, r1
 da2:	20 d0       	rcall	.+64     	; 0xde4 <__ultoa_invert+0x84>
 da4:	09 f4       	brne	.+2      	; 0xda8 <__ultoa_invert+0x48>
 da6:	68 94       	set
 da8:	3f 91       	pop	r19
 daa:	2a e0       	ldi	r18, 0x0A	; 10
 dac:	26 9f       	mul	r18, r22
 dae:	11 24       	eor	r1, r1
 db0:	30 19       	sub	r19, r0
 db2:	30 5d       	subi	r19, 0xD0	; 208
 db4:	31 93       	st	Z+, r19
 db6:	de f6       	brtc	.-74     	; 0xd6e <__ultoa_invert+0xe>
 db8:	cf 01       	movw	r24, r30
 dba:	08 95       	ret
 dbc:	46 2f       	mov	r20, r22
 dbe:	47 70       	andi	r20, 0x07	; 7
 dc0:	40 5d       	subi	r20, 0xD0	; 208
 dc2:	41 93       	st	Z+, r20
 dc4:	b3 e0       	ldi	r27, 0x03	; 3
 dc6:	0f d0       	rcall	.+30     	; 0xde6 <__ultoa_invert+0x86>
 dc8:	c9 f7       	brne	.-14     	; 0xdbc <__ultoa_invert+0x5c>
 dca:	f6 cf       	rjmp	.-20     	; 0xdb8 <__ultoa_invert+0x58>
 dcc:	46 2f       	mov	r20, r22
 dce:	4f 70       	andi	r20, 0x0F	; 15
 dd0:	40 5d       	subi	r20, 0xD0	; 208
 dd2:	4a 33       	cpi	r20, 0x3A	; 58
 dd4:	18 f0       	brcs	.+6      	; 0xddc <__ultoa_invert+0x7c>
 dd6:	49 5d       	subi	r20, 0xD9	; 217
 dd8:	31 fd       	sbrc	r19, 1
 dda:	40 52       	subi	r20, 0x20	; 32
 ddc:	41 93       	st	Z+, r20
 dde:	02 d0       	rcall	.+4      	; 0xde4 <__ultoa_invert+0x84>
 de0:	a9 f7       	brne	.-22     	; 0xdcc <__ultoa_invert+0x6c>
 de2:	ea cf       	rjmp	.-44     	; 0xdb8 <__ultoa_invert+0x58>
 de4:	b4 e0       	ldi	r27, 0x04	; 4
 de6:	a6 95       	lsr	r26
 de8:	97 95       	ror	r25
 dea:	87 95       	ror	r24
 dec:	77 95       	ror	r23
 dee:	67 95       	ror	r22
 df0:	ba 95       	dec	r27
 df2:	c9 f7       	brne	.-14     	; 0xde6 <__ultoa_invert+0x86>
 df4:	00 97       	sbiw	r24, 0x00	; 0
 df6:	61 05       	cpc	r22, r1
 df8:	71 05       	cpc	r23, r1
 dfa:	08 95       	ret
 dfc:	9b 01       	movw	r18, r22
 dfe:	ac 01       	movw	r20, r24
 e00:	0a 2e       	mov	r0, r26
 e02:	06 94       	lsr	r0
 e04:	57 95       	ror	r21
 e06:	47 95       	ror	r20
 e08:	37 95       	ror	r19
 e0a:	27 95       	ror	r18
 e0c:	ba 95       	dec	r27
 e0e:	c9 f7       	brne	.-14     	; 0xe02 <__ultoa_invert+0xa2>
 e10:	62 0f       	add	r22, r18
 e12:	73 1f       	adc	r23, r19
 e14:	84 1f       	adc	r24, r20
 e16:	95 1f       	adc	r25, r21
 e18:	a0 1d       	adc	r26, r0
 e1a:	08 95       	ret

00000e1c <__prologue_saves__>:
 e1c:	2f 92       	push	r2
 e1e:	3f 92       	push	r3
 e20:	4f 92       	push	r4
 e22:	5f 92       	push	r5
 e24:	6f 92       	push	r6
 e26:	7f 92       	push	r7
 e28:	8f 92       	push	r8
 e2a:	9f 92       	push	r9
 e2c:	af 92       	push	r10
 e2e:	bf 92       	push	r11
 e30:	cf 92       	push	r12
 e32:	df 92       	push	r13
 e34:	ef 92       	push	r14
 e36:	ff 92       	push	r15
 e38:	0f 93       	push	r16
 e3a:	1f 93       	push	r17
 e3c:	cf 93       	push	r28
 e3e:	df 93       	push	r29
 e40:	cd b7       	in	r28, 0x3d	; 61
 e42:	de b7       	in	r29, 0x3e	; 62
 e44:	ca 1b       	sub	r28, r26
 e46:	db 0b       	sbc	r29, r27
 e48:	0f b6       	in	r0, 0x3f	; 63
 e4a:	f8 94       	cli
 e4c:	de bf       	out	0x3e, r29	; 62
 e4e:	0f be       	out	0x3f, r0	; 63
 e50:	cd bf       	out	0x3d, r28	; 61
 e52:	09 94       	ijmp

00000e54 <__epilogue_restores__>:
 e54:	2a 88       	ldd	r2, Y+18	; 0x12
 e56:	39 88       	ldd	r3, Y+17	; 0x11
 e58:	48 88       	ldd	r4, Y+16	; 0x10
 e5a:	5f 84       	ldd	r5, Y+15	; 0x0f
 e5c:	6e 84       	ldd	r6, Y+14	; 0x0e
 e5e:	7d 84       	ldd	r7, Y+13	; 0x0d
 e60:	8c 84       	ldd	r8, Y+12	; 0x0c
 e62:	9b 84       	ldd	r9, Y+11	; 0x0b
 e64:	aa 84       	ldd	r10, Y+10	; 0x0a
 e66:	b9 84       	ldd	r11, Y+9	; 0x09
 e68:	c8 84       	ldd	r12, Y+8	; 0x08
 e6a:	df 80       	ldd	r13, Y+7	; 0x07
 e6c:	ee 80       	ldd	r14, Y+6	; 0x06
 e6e:	fd 80       	ldd	r15, Y+5	; 0x05
 e70:	0c 81       	ldd	r16, Y+4	; 0x04
 e72:	1b 81       	ldd	r17, Y+3	; 0x03
 e74:	aa 81       	ldd	r26, Y+2	; 0x02
 e76:	b9 81       	ldd	r27, Y+1	; 0x01
 e78:	ce 0f       	add	r28, r30
 e7a:	d1 1d       	adc	r29, r1
 e7c:	0f b6       	in	r0, 0x3f	; 63
 e7e:	f8 94       	cli
 e80:	de bf       	out	0x3e, r29	; 62
 e82:	0f be       	out	0x3f, r0	; 63
 e84:	cd bf       	out	0x3d, r28	; 61
 e86:	ed 01       	movw	r28, r26
 e88:	08 95       	ret

00000e8a <_exit>:
 e8a:	f8 94       	cli

00000e8c <__stop_program>:
 e8c:	ff cf       	rjmp	.-2      	; 0xe8c <__stop_program>
