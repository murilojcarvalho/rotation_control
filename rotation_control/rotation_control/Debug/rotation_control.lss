
rotation_control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  00000be0  00000c74  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000be0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000006e  00800112  00800112  00000c86  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000c86  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ce4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  00000d24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b7d  00000000  00000000  00000df4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009a6  00000000  00000000  00001971  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000067d  00000000  00000000  00002317  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000018c  00000000  00000000  00002994  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000049e  00000000  00000000  00002b20  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000285  00000000  00000000  00002fbe  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00003243  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 ee       	ldi	r30, 0xE0	; 224
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 31       	cpi	r26, 0x12	; 18
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e1       	ldi	r26, 0x12	; 18
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 38       	cpi	r26, 0x80	; 128
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 80 00 	call	0x100	; 0x100 <main>
  9e:	0c 94 ee 05 	jmp	0xbdc	; 0xbdc <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_1>:
	
	return 0;
}

//INT0 Interrupt
ISR (INT0_vect){
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	8f 93       	push	r24
  b2:	9f 93       	push	r25
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
  b4:	f8 94       	cli
	ATOMIC_BLOCK(ATOMIC_FORCEON){
		//current_rpm_millis = millis();
		//rpm = 60/(current_rpm_millis - previous_rpm_millis)*7;
		rpm++;
  b6:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <rpm>
  ba:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <rpm+0x1>
  be:	01 96       	adiw	r24, 0x01	; 1
  c0:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <rpm+0x1>
  c4:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <rpm>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
  c8:	78 94       	sei
		//sprintf(string_buffer, "%u \r\n", rpm);
		//USART_StrTx(string_buffer);
	}
}
  ca:	9f 91       	pop	r25
  cc:	8f 91       	pop	r24
  ce:	0f 90       	pop	r0
  d0:	0f be       	out	0x3f, r0	; 63
  d2:	0f 90       	pop	r0
  d4:	1f 90       	pop	r1
  d6:	18 95       	reti

000000d8 <init>:

void init(void){
	//Port configuration
	//1 -> output, 0 -> input
	DDRB |= 0b00000010;		//Set PB1 (arduino digital pin 9) as output
  d8:	21 9a       	sbi	0x04, 1	; 4
	DDRD &= ~(1 << DDD2);     // Set PD2/INT0 (arduino digital pin 2) as input
  da:	52 98       	cbi	0x0a, 2	; 10
	
	USART_Init();	//Start USART
  dc:	0e 94 23 01 	call	0x246	; 0x246 <USART_Init>
	
	Pwm1AInit();	//Enable PWM
  e0:	0e 94 c2 00 	call	0x184	; 0x184 <Pwm1AInit>
	
	//Interrupt Config
	EICRA |= 0b00000011;    //The rising edge of INT0 generates an interrupt request (ISC00, ISC01)
  e4:	e9 e6       	ldi	r30, 0x69	; 105
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	83 60       	ori	r24, 0x03	; 3
  ec:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0);     //Turns on INT0
  ee:	e8 9a       	sbi	0x1d, 0	; 29
	ticks_init();
  f0:	0e 94 e5 00 	call	0x1ca	; 0x1ca <ticks_init>
	sei();          // turn on interrupts
  f4:	78 94       	sei
	
	USART_StrTx("WELCOME\r\n");
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	91 e0       	ldi	r25, 0x01	; 1
  fa:	0e 94 37 01 	call	0x26e	; 0x26e <USART_StrTx>
  fe:	08 95       	ret

00000100 <main>:
void init(void);
void proporcional_control(void);


int main(void){
	init();
 100:	0e 94 6c 00 	call	0xd8	; 0xd8 <init>
	
    while ( TRUE ) {
		Pwm1ASetDuty(10);
		test_millis = millis();
		if(test_millis%1000 == 0){
 104:	0f 2e       	mov	r0, r31
 106:	f8 ee       	ldi	r31, 0xE8	; 232
 108:	8f 2e       	mov	r8, r31
 10a:	f3 e0       	ldi	r31, 0x03	; 3
 10c:	9f 2e       	mov	r9, r31
 10e:	a1 2c       	mov	r10, r1
 110:	b1 2c       	mov	r11, r1
 112:	f0 2d       	mov	r31, r0
			sprintf(string_buffer, "%lu \r\n", test_millis/1000);
 114:	0a e0       	ldi	r16, 0x0A	; 10
 116:	11 e0       	ldi	r17, 0x01	; 1
 118:	c2 e1       	ldi	r28, 0x12	; 18
 11a:	d1 e0       	ldi	r29, 0x01	; 1

int main(void){
	init();
	
    while ( TRUE ) {
		Pwm1ASetDuty(10);
 11c:	8a e0       	ldi	r24, 0x0A	; 10
 11e:	90 e0       	ldi	r25, 0x00	; 0
 120:	0e 94 cd 00 	call	0x19a	; 0x19a <Pwm1ASetDuty>
		test_millis = millis();
 124:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <millis>
 128:	6b 01       	movw	r12, r22
 12a:	7c 01       	movw	r14, r24
 12c:	60 93 76 01 	sts	0x0176, r22	; 0x800176 <test_millis>
 130:	70 93 77 01 	sts	0x0177, r23	; 0x800177 <test_millis+0x1>
 134:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <test_millis+0x2>
 138:	90 93 79 01 	sts	0x0179, r25	; 0x800179 <test_millis+0x3>
		if(test_millis%1000 == 0){
 13c:	a5 01       	movw	r20, r10
 13e:	94 01       	movw	r18, r8
 140:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__udivmodsi4>
 144:	67 2b       	or	r22, r23
 146:	68 2b       	or	r22, r24
 148:	69 2b       	or	r22, r25
 14a:	41 f7       	brne	.-48     	; 0x11c <main+0x1c>
			sprintf(string_buffer, "%lu \r\n", test_millis/1000);
 14c:	c7 01       	movw	r24, r14
 14e:	b6 01       	movw	r22, r12
 150:	a5 01       	movw	r20, r10
 152:	94 01       	movw	r18, r8
 154:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <__udivmodsi4>
 158:	5f 93       	push	r21
 15a:	4f 93       	push	r20
 15c:	3f 93       	push	r19
 15e:	2f 93       	push	r18
 160:	1f 93       	push	r17
 162:	0f 93       	push	r16
 164:	df 93       	push	r29
 166:	cf 93       	push	r28
 168:	0e 94 04 03 	call	0x608	; 0x608 <sprintf>
			USART_StrTx(string_buffer);
 16c:	ce 01       	movw	r24, r28
 16e:	0e 94 37 01 	call	0x26e	; 0x26e <USART_StrTx>
 172:	8d b7       	in	r24, 0x3d	; 61
 174:	9e b7       	in	r25, 0x3e	; 62
 176:	08 96       	adiw	r24, 0x08	; 8
 178:	0f b6       	in	r0, 0x3f	; 63
 17a:	f8 94       	cli
 17c:	9e bf       	out	0x3e, r25	; 62
 17e:	0f be       	out	0x3f, r0	; 63
 180:	8d bf       	out	0x3d, r24	; 61
 182:	cc cf       	rjmp	.-104    	; 0x11c <main+0x1c>

00000184 <Pwm1AInit>:
#include "pwm.h"

void Pwm1AInit(void)
{
	TCCR1A |= (1<<COM1A1)|(1<<WGM10);				// Fast PWM 8 bits, modo 5, non-inverting mode.
 184:	e0 e8       	ldi	r30, 0x80	; 128
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	80 81       	ld	r24, Z
 18a:	81 68       	ori	r24, 0x81	; 129
 18c:	80 83       	st	Z, r24
	TCCR1B |= (1<<WGM12)|(1<<CS10);					// Prescaler = 1. Fpwm = 8M/(256xPrescaler)=31,25Khz
 18e:	e1 e8       	ldi	r30, 0x81	; 129
 190:	f0 e0       	ldi	r31, 0x00	; 0
 192:	80 81       	ld	r24, Z
 194:	89 60       	ori	r24, 0x09	; 9
 196:	80 83       	st	Z, r24
 198:	08 95       	ret

0000019a <Pwm1ASetDuty>:
}

void Pwm1ASetDuty(unsigned short int Duty)			// Usa esta função quando quer ajuste de 0 100%
{
	OCR1A = ((float)Duty/100)*255;
 19a:	bc 01       	movw	r22, r24
 19c:	80 e0       	ldi	r24, 0x00	; 0
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	0e 94 e7 01 	call	0x3ce	; 0x3ce <__floatunsisf>
 1a4:	20 e0       	ldi	r18, 0x00	; 0
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	48 ec       	ldi	r20, 0xC8	; 200
 1aa:	52 e4       	ldi	r21, 0x42	; 66
 1ac:	0e 94 46 01 	call	0x28c	; 0x28c <__divsf3>
 1b0:	20 e0       	ldi	r18, 0x00	; 0
 1b2:	30 e0       	ldi	r19, 0x00	; 0
 1b4:	4f e7       	ldi	r20, 0x7F	; 127
 1b6:	53 e4       	ldi	r21, 0x43	; 67
 1b8:	0e 94 75 02 	call	0x4ea	; 0x4ea <__mulsf3>
 1bc:	0e 94 b8 01 	call	0x370	; 0x370 <__fixunssfsi>
 1c0:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 1c4:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 1c8:	08 95       	ret

000001ca <ticks_init>:
*
*	Return:			None
****************************************************************************************************************************************************************/
void ticks_init( void )
{
	TCCR0A |= (1 << WGM01);				// Set the Timer0 Mode to CTC
 1ca:	84 b5       	in	r24, 0x24	; 36
 1cc:	82 60       	ori	r24, 0x02	; 2
 1ce:	84 bd       	out	0x24, r24	; 36
	OCR0A = ((F_CPU*0.001)/64)-1;		// OCRn =  [ (clock_speed / Prescaler_value) * Desired_time_in_Seconds ] - 1 =  [ (16000000 / 64) * 1ms ] - 1 = 249
 1d0:	89 ef       	ldi	r24, 0xF9	; 249
 1d2:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1 << OCIE0A);			//Set the ISR COMPA vect
 1d4:	ee e6       	ldi	r30, 0x6E	; 110
 1d6:	f0 e0       	ldi	r31, 0x00	; 0
 1d8:	80 81       	ld	r24, Z
 1da:	82 60       	ori	r24, 0x02	; 2
 1dc:	80 83       	st	Z, r24
	TCCR0B |= (1 << CS01)|(1 << CS00);	// set prescaler to 8 and start the timer
 1de:	85 b5       	in	r24, 0x25	; 37
 1e0:	83 60       	ori	r24, 0x03	; 3
 1e2:	85 bd       	out	0x25, r24	; 37
 1e4:	08 95       	ret

000001e6 <millis>:
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
 1e6:	f8 94       	cli
unsigned long int millis(void)
{
	unsigned long int tick_1ms_temp;
	
	ATOMIC_BLOCK(ATOMIC_FORCEON){
		tick_1ms_temp = tick_1ms;
 1e8:	60 91 7c 01 	lds	r22, 0x017C	; 0x80017c <tick_1ms>
 1ec:	70 91 7d 01 	lds	r23, 0x017D	; 0x80017d <tick_1ms+0x1>
 1f0:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <tick_1ms+0x2>
 1f4:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <tick_1ms+0x3>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
 1f8:	78 94       	sei
	}
	
	return tick_1ms_temp;
}
 1fa:	08 95       	ret

000001fc <__vector_14>:
*	TIMER1 Compare Output A Interrupt Service Routine
*	Increment ms_Counter at a rate of 1 ms
*
******************************************************************************************************************************************************************/
ISR( TIMER0_COMPA_vect )
{
 1fc:	1f 92       	push	r1
 1fe:	0f 92       	push	r0
 200:	0f b6       	in	r0, 0x3f	; 63
 202:	0f 92       	push	r0
 204:	11 24       	eor	r1, r1
 206:	8f 93       	push	r24
 208:	9f 93       	push	r25
 20a:	af 93       	push	r26
 20c:	bf 93       	push	r27
		tick_1ms++;
 20e:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <tick_1ms>
 212:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <tick_1ms+0x1>
 216:	a0 91 7e 01 	lds	r26, 0x017E	; 0x80017e <tick_1ms+0x2>
 21a:	b0 91 7f 01 	lds	r27, 0x017F	; 0x80017f <tick_1ms+0x3>
 21e:	01 96       	adiw	r24, 0x01	; 1
 220:	a1 1d       	adc	r26, r1
 222:	b1 1d       	adc	r27, r1
 224:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <tick_1ms>
 228:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <tick_1ms+0x1>
 22c:	a0 93 7e 01 	sts	0x017E, r26	; 0x80017e <tick_1ms+0x2>
 230:	b0 93 7f 01 	sts	0x017F, r27	; 0x80017f <tick_1ms+0x3>
}
 234:	bf 91       	pop	r27
 236:	af 91       	pop	r26
 238:	9f 91       	pop	r25
 23a:	8f 91       	pop	r24
 23c:	0f 90       	pop	r0
 23e:	0f be       	out	0x3f, r0	; 63
 240:	0f 90       	pop	r0
 242:	1f 90       	pop	r1
 244:	18 95       	reti

00000246 <USART_Init>:
//-------------------------------------------------------------------------------------------------------
unsigned char USART_Receive()
{
	while(!(UCSR0A & (1<<RXC0)));				// Espera o dado ser recebido
	return UDR0;
}
 246:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 24a:	87 e6       	ldi	r24, 0x67	; 103
 24c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 250:	88 e1       	ldi	r24, 0x18	; 24
 252:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 256:	86 e0       	ldi	r24, 0x06	; 6
 258:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 25c:	08 95       	ret

0000025e <USART_Transmit>:
 25e:	e0 ec       	ldi	r30, 0xC0	; 192
 260:	f0 e0       	ldi	r31, 0x00	; 0
 262:	90 81       	ld	r25, Z
 264:	95 ff       	sbrs	r25, 5
 266:	fd cf       	rjmp	.-6      	; 0x262 <USART_Transmit+0x4>
 268:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 26c:	08 95       	ret

0000026e <USART_StrTx>:

//-------------------------------------------------------------------------------------------------------
void USART_StrTx(const char* ptr)
{
 26e:	cf 93       	push	r28
 270:	df 93       	push	r29
 272:	ec 01       	movw	r28, r24
	while(*ptr != '\0')
 274:	88 81       	ld	r24, Y
 276:	88 23       	and	r24, r24
 278:	31 f0       	breq	.+12     	; 0x286 <USART_StrTx+0x18>
 27a:	21 96       	adiw	r28, 0x01	; 1
	{
		USART_Transmit(*ptr);
 27c:	0e 94 2f 01 	call	0x25e	; 0x25e <USART_Transmit>
}

//-------------------------------------------------------------------------------------------------------
void USART_StrTx(const char* ptr)
{
	while(*ptr != '\0')
 280:	89 91       	ld	r24, Y+
 282:	81 11       	cpse	r24, r1
 284:	fb cf       	rjmp	.-10     	; 0x27c <USART_StrTx+0xe>
	{
		USART_Transmit(*ptr);
		ptr++;
	}
}
 286:	df 91       	pop	r29
 288:	cf 91       	pop	r28
 28a:	08 95       	ret

0000028c <__divsf3>:
 28c:	0e 94 5a 01 	call	0x2b4	; 0x2b4 <__divsf3x>
 290:	0c 94 3b 02 	jmp	0x476	; 0x476 <__fp_round>
 294:	0e 94 34 02 	call	0x468	; 0x468 <__fp_pscB>
 298:	58 f0       	brcs	.+22     	; 0x2b0 <__divsf3+0x24>
 29a:	0e 94 2d 02 	call	0x45a	; 0x45a <__fp_pscA>
 29e:	40 f0       	brcs	.+16     	; 0x2b0 <__divsf3+0x24>
 2a0:	29 f4       	brne	.+10     	; 0x2ac <__divsf3+0x20>
 2a2:	5f 3f       	cpi	r21, 0xFF	; 255
 2a4:	29 f0       	breq	.+10     	; 0x2b0 <__divsf3+0x24>
 2a6:	0c 94 24 02 	jmp	0x448	; 0x448 <__fp_inf>
 2aa:	51 11       	cpse	r21, r1
 2ac:	0c 94 6f 02 	jmp	0x4de	; 0x4de <__fp_szero>
 2b0:	0c 94 2a 02 	jmp	0x454	; 0x454 <__fp_nan>

000002b4 <__divsf3x>:
 2b4:	0e 94 4c 02 	call	0x498	; 0x498 <__fp_split3>
 2b8:	68 f3       	brcs	.-38     	; 0x294 <__divsf3+0x8>

000002ba <__divsf3_pse>:
 2ba:	99 23       	and	r25, r25
 2bc:	b1 f3       	breq	.-20     	; 0x2aa <__divsf3+0x1e>
 2be:	55 23       	and	r21, r21
 2c0:	91 f3       	breq	.-28     	; 0x2a6 <__divsf3+0x1a>
 2c2:	95 1b       	sub	r25, r21
 2c4:	55 0b       	sbc	r21, r21
 2c6:	bb 27       	eor	r27, r27
 2c8:	aa 27       	eor	r26, r26
 2ca:	62 17       	cp	r22, r18
 2cc:	73 07       	cpc	r23, r19
 2ce:	84 07       	cpc	r24, r20
 2d0:	38 f0       	brcs	.+14     	; 0x2e0 <__divsf3_pse+0x26>
 2d2:	9f 5f       	subi	r25, 0xFF	; 255
 2d4:	5f 4f       	sbci	r21, 0xFF	; 255
 2d6:	22 0f       	add	r18, r18
 2d8:	33 1f       	adc	r19, r19
 2da:	44 1f       	adc	r20, r20
 2dc:	aa 1f       	adc	r26, r26
 2de:	a9 f3       	breq	.-22     	; 0x2ca <__divsf3_pse+0x10>
 2e0:	35 d0       	rcall	.+106    	; 0x34c <__divsf3_pse+0x92>
 2e2:	0e 2e       	mov	r0, r30
 2e4:	3a f0       	brmi	.+14     	; 0x2f4 <__divsf3_pse+0x3a>
 2e6:	e0 e8       	ldi	r30, 0x80	; 128
 2e8:	32 d0       	rcall	.+100    	; 0x34e <__divsf3_pse+0x94>
 2ea:	91 50       	subi	r25, 0x01	; 1
 2ec:	50 40       	sbci	r21, 0x00	; 0
 2ee:	e6 95       	lsr	r30
 2f0:	00 1c       	adc	r0, r0
 2f2:	ca f7       	brpl	.-14     	; 0x2e6 <__divsf3_pse+0x2c>
 2f4:	2b d0       	rcall	.+86     	; 0x34c <__divsf3_pse+0x92>
 2f6:	fe 2f       	mov	r31, r30
 2f8:	29 d0       	rcall	.+82     	; 0x34c <__divsf3_pse+0x92>
 2fa:	66 0f       	add	r22, r22
 2fc:	77 1f       	adc	r23, r23
 2fe:	88 1f       	adc	r24, r24
 300:	bb 1f       	adc	r27, r27
 302:	26 17       	cp	r18, r22
 304:	37 07       	cpc	r19, r23
 306:	48 07       	cpc	r20, r24
 308:	ab 07       	cpc	r26, r27
 30a:	b0 e8       	ldi	r27, 0x80	; 128
 30c:	09 f0       	breq	.+2      	; 0x310 <__divsf3_pse+0x56>
 30e:	bb 0b       	sbc	r27, r27
 310:	80 2d       	mov	r24, r0
 312:	bf 01       	movw	r22, r30
 314:	ff 27       	eor	r31, r31
 316:	93 58       	subi	r25, 0x83	; 131
 318:	5f 4f       	sbci	r21, 0xFF	; 255
 31a:	3a f0       	brmi	.+14     	; 0x32a <__divsf3_pse+0x70>
 31c:	9e 3f       	cpi	r25, 0xFE	; 254
 31e:	51 05       	cpc	r21, r1
 320:	78 f0       	brcs	.+30     	; 0x340 <__divsf3_pse+0x86>
 322:	0c 94 24 02 	jmp	0x448	; 0x448 <__fp_inf>
 326:	0c 94 6f 02 	jmp	0x4de	; 0x4de <__fp_szero>
 32a:	5f 3f       	cpi	r21, 0xFF	; 255
 32c:	e4 f3       	brlt	.-8      	; 0x326 <__divsf3_pse+0x6c>
 32e:	98 3e       	cpi	r25, 0xE8	; 232
 330:	d4 f3       	brlt	.-12     	; 0x326 <__divsf3_pse+0x6c>
 332:	86 95       	lsr	r24
 334:	77 95       	ror	r23
 336:	67 95       	ror	r22
 338:	b7 95       	ror	r27
 33a:	f7 95       	ror	r31
 33c:	9f 5f       	subi	r25, 0xFF	; 255
 33e:	c9 f7       	brne	.-14     	; 0x332 <__divsf3_pse+0x78>
 340:	88 0f       	add	r24, r24
 342:	91 1d       	adc	r25, r1
 344:	96 95       	lsr	r25
 346:	87 95       	ror	r24
 348:	97 f9       	bld	r25, 7
 34a:	08 95       	ret
 34c:	e1 e0       	ldi	r30, 0x01	; 1
 34e:	66 0f       	add	r22, r22
 350:	77 1f       	adc	r23, r23
 352:	88 1f       	adc	r24, r24
 354:	bb 1f       	adc	r27, r27
 356:	62 17       	cp	r22, r18
 358:	73 07       	cpc	r23, r19
 35a:	84 07       	cpc	r24, r20
 35c:	ba 07       	cpc	r27, r26
 35e:	20 f0       	brcs	.+8      	; 0x368 <__divsf3_pse+0xae>
 360:	62 1b       	sub	r22, r18
 362:	73 0b       	sbc	r23, r19
 364:	84 0b       	sbc	r24, r20
 366:	ba 0b       	sbc	r27, r26
 368:	ee 1f       	adc	r30, r30
 36a:	88 f7       	brcc	.-30     	; 0x34e <__divsf3_pse+0x94>
 36c:	e0 95       	com	r30
 36e:	08 95       	ret

00000370 <__fixunssfsi>:
 370:	0e 94 54 02 	call	0x4a8	; 0x4a8 <__fp_splitA>
 374:	88 f0       	brcs	.+34     	; 0x398 <__fixunssfsi+0x28>
 376:	9f 57       	subi	r25, 0x7F	; 127
 378:	98 f0       	brcs	.+38     	; 0x3a0 <__fixunssfsi+0x30>
 37a:	b9 2f       	mov	r27, r25
 37c:	99 27       	eor	r25, r25
 37e:	b7 51       	subi	r27, 0x17	; 23
 380:	b0 f0       	brcs	.+44     	; 0x3ae <__fixunssfsi+0x3e>
 382:	e1 f0       	breq	.+56     	; 0x3bc <__fixunssfsi+0x4c>
 384:	66 0f       	add	r22, r22
 386:	77 1f       	adc	r23, r23
 388:	88 1f       	adc	r24, r24
 38a:	99 1f       	adc	r25, r25
 38c:	1a f0       	brmi	.+6      	; 0x394 <__fixunssfsi+0x24>
 38e:	ba 95       	dec	r27
 390:	c9 f7       	brne	.-14     	; 0x384 <__fixunssfsi+0x14>
 392:	14 c0       	rjmp	.+40     	; 0x3bc <__fixunssfsi+0x4c>
 394:	b1 30       	cpi	r27, 0x01	; 1
 396:	91 f0       	breq	.+36     	; 0x3bc <__fixunssfsi+0x4c>
 398:	0e 94 6e 02 	call	0x4dc	; 0x4dc <__fp_zero>
 39c:	b1 e0       	ldi	r27, 0x01	; 1
 39e:	08 95       	ret
 3a0:	0c 94 6e 02 	jmp	0x4dc	; 0x4dc <__fp_zero>
 3a4:	67 2f       	mov	r22, r23
 3a6:	78 2f       	mov	r23, r24
 3a8:	88 27       	eor	r24, r24
 3aa:	b8 5f       	subi	r27, 0xF8	; 248
 3ac:	39 f0       	breq	.+14     	; 0x3bc <__fixunssfsi+0x4c>
 3ae:	b9 3f       	cpi	r27, 0xF9	; 249
 3b0:	cc f3       	brlt	.-14     	; 0x3a4 <__fixunssfsi+0x34>
 3b2:	86 95       	lsr	r24
 3b4:	77 95       	ror	r23
 3b6:	67 95       	ror	r22
 3b8:	b3 95       	inc	r27
 3ba:	d9 f7       	brne	.-10     	; 0x3b2 <__fixunssfsi+0x42>
 3bc:	3e f4       	brtc	.+14     	; 0x3cc <__fixunssfsi+0x5c>
 3be:	90 95       	com	r25
 3c0:	80 95       	com	r24
 3c2:	70 95       	com	r23
 3c4:	61 95       	neg	r22
 3c6:	7f 4f       	sbci	r23, 0xFF	; 255
 3c8:	8f 4f       	sbci	r24, 0xFF	; 255
 3ca:	9f 4f       	sbci	r25, 0xFF	; 255
 3cc:	08 95       	ret

000003ce <__floatunsisf>:
 3ce:	e8 94       	clt
 3d0:	09 c0       	rjmp	.+18     	; 0x3e4 <__floatsisf+0x12>

000003d2 <__floatsisf>:
 3d2:	97 fb       	bst	r25, 7
 3d4:	3e f4       	brtc	.+14     	; 0x3e4 <__floatsisf+0x12>
 3d6:	90 95       	com	r25
 3d8:	80 95       	com	r24
 3da:	70 95       	com	r23
 3dc:	61 95       	neg	r22
 3de:	7f 4f       	sbci	r23, 0xFF	; 255
 3e0:	8f 4f       	sbci	r24, 0xFF	; 255
 3e2:	9f 4f       	sbci	r25, 0xFF	; 255
 3e4:	99 23       	and	r25, r25
 3e6:	a9 f0       	breq	.+42     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3e8:	f9 2f       	mov	r31, r25
 3ea:	96 e9       	ldi	r25, 0x96	; 150
 3ec:	bb 27       	eor	r27, r27
 3ee:	93 95       	inc	r25
 3f0:	f6 95       	lsr	r31
 3f2:	87 95       	ror	r24
 3f4:	77 95       	ror	r23
 3f6:	67 95       	ror	r22
 3f8:	b7 95       	ror	r27
 3fa:	f1 11       	cpse	r31, r1
 3fc:	f8 cf       	rjmp	.-16     	; 0x3ee <__floatsisf+0x1c>
 3fe:	fa f4       	brpl	.+62     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 400:	bb 0f       	add	r27, r27
 402:	11 f4       	brne	.+4      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 404:	60 ff       	sbrs	r22, 0
 406:	1b c0       	rjmp	.+54     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 408:	6f 5f       	subi	r22, 0xFF	; 255
 40a:	7f 4f       	sbci	r23, 0xFF	; 255
 40c:	8f 4f       	sbci	r24, 0xFF	; 255
 40e:	9f 4f       	sbci	r25, 0xFF	; 255
 410:	16 c0       	rjmp	.+44     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 412:	88 23       	and	r24, r24
 414:	11 f0       	breq	.+4      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 416:	96 e9       	ldi	r25, 0x96	; 150
 418:	11 c0       	rjmp	.+34     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 41a:	77 23       	and	r23, r23
 41c:	21 f0       	breq	.+8      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 41e:	9e e8       	ldi	r25, 0x8E	; 142
 420:	87 2f       	mov	r24, r23
 422:	76 2f       	mov	r23, r22
 424:	05 c0       	rjmp	.+10     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 426:	66 23       	and	r22, r22
 428:	71 f0       	breq	.+28     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 42a:	96 e8       	ldi	r25, 0x86	; 134
 42c:	86 2f       	mov	r24, r22
 42e:	70 e0       	ldi	r23, 0x00	; 0
 430:	60 e0       	ldi	r22, 0x00	; 0
 432:	2a f0       	brmi	.+10     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 434:	9a 95       	dec	r25
 436:	66 0f       	add	r22, r22
 438:	77 1f       	adc	r23, r23
 43a:	88 1f       	adc	r24, r24
 43c:	da f7       	brpl	.-10     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 43e:	88 0f       	add	r24, r24
 440:	96 95       	lsr	r25
 442:	87 95       	ror	r24
 444:	97 f9       	bld	r25, 7
 446:	08 95       	ret

00000448 <__fp_inf>:
 448:	97 f9       	bld	r25, 7
 44a:	9f 67       	ori	r25, 0x7F	; 127
 44c:	80 e8       	ldi	r24, 0x80	; 128
 44e:	70 e0       	ldi	r23, 0x00	; 0
 450:	60 e0       	ldi	r22, 0x00	; 0
 452:	08 95       	ret

00000454 <__fp_nan>:
 454:	9f ef       	ldi	r25, 0xFF	; 255
 456:	80 ec       	ldi	r24, 0xC0	; 192
 458:	08 95       	ret

0000045a <__fp_pscA>:
 45a:	00 24       	eor	r0, r0
 45c:	0a 94       	dec	r0
 45e:	16 16       	cp	r1, r22
 460:	17 06       	cpc	r1, r23
 462:	18 06       	cpc	r1, r24
 464:	09 06       	cpc	r0, r25
 466:	08 95       	ret

00000468 <__fp_pscB>:
 468:	00 24       	eor	r0, r0
 46a:	0a 94       	dec	r0
 46c:	12 16       	cp	r1, r18
 46e:	13 06       	cpc	r1, r19
 470:	14 06       	cpc	r1, r20
 472:	05 06       	cpc	r0, r21
 474:	08 95       	ret

00000476 <__fp_round>:
 476:	09 2e       	mov	r0, r25
 478:	03 94       	inc	r0
 47a:	00 0c       	add	r0, r0
 47c:	11 f4       	brne	.+4      	; 0x482 <__fp_round+0xc>
 47e:	88 23       	and	r24, r24
 480:	52 f0       	brmi	.+20     	; 0x496 <__fp_round+0x20>
 482:	bb 0f       	add	r27, r27
 484:	40 f4       	brcc	.+16     	; 0x496 <__fp_round+0x20>
 486:	bf 2b       	or	r27, r31
 488:	11 f4       	brne	.+4      	; 0x48e <__fp_round+0x18>
 48a:	60 ff       	sbrs	r22, 0
 48c:	04 c0       	rjmp	.+8      	; 0x496 <__fp_round+0x20>
 48e:	6f 5f       	subi	r22, 0xFF	; 255
 490:	7f 4f       	sbci	r23, 0xFF	; 255
 492:	8f 4f       	sbci	r24, 0xFF	; 255
 494:	9f 4f       	sbci	r25, 0xFF	; 255
 496:	08 95       	ret

00000498 <__fp_split3>:
 498:	57 fd       	sbrc	r21, 7
 49a:	90 58       	subi	r25, 0x80	; 128
 49c:	44 0f       	add	r20, r20
 49e:	55 1f       	adc	r21, r21
 4a0:	59 f0       	breq	.+22     	; 0x4b8 <__fp_splitA+0x10>
 4a2:	5f 3f       	cpi	r21, 0xFF	; 255
 4a4:	71 f0       	breq	.+28     	; 0x4c2 <__fp_splitA+0x1a>
 4a6:	47 95       	ror	r20

000004a8 <__fp_splitA>:
 4a8:	88 0f       	add	r24, r24
 4aa:	97 fb       	bst	r25, 7
 4ac:	99 1f       	adc	r25, r25
 4ae:	61 f0       	breq	.+24     	; 0x4c8 <__fp_splitA+0x20>
 4b0:	9f 3f       	cpi	r25, 0xFF	; 255
 4b2:	79 f0       	breq	.+30     	; 0x4d2 <__fp_splitA+0x2a>
 4b4:	87 95       	ror	r24
 4b6:	08 95       	ret
 4b8:	12 16       	cp	r1, r18
 4ba:	13 06       	cpc	r1, r19
 4bc:	14 06       	cpc	r1, r20
 4be:	55 1f       	adc	r21, r21
 4c0:	f2 cf       	rjmp	.-28     	; 0x4a6 <__fp_split3+0xe>
 4c2:	46 95       	lsr	r20
 4c4:	f1 df       	rcall	.-30     	; 0x4a8 <__fp_splitA>
 4c6:	08 c0       	rjmp	.+16     	; 0x4d8 <__fp_splitA+0x30>
 4c8:	16 16       	cp	r1, r22
 4ca:	17 06       	cpc	r1, r23
 4cc:	18 06       	cpc	r1, r24
 4ce:	99 1f       	adc	r25, r25
 4d0:	f1 cf       	rjmp	.-30     	; 0x4b4 <__fp_splitA+0xc>
 4d2:	86 95       	lsr	r24
 4d4:	71 05       	cpc	r23, r1
 4d6:	61 05       	cpc	r22, r1
 4d8:	08 94       	sec
 4da:	08 95       	ret

000004dc <__fp_zero>:
 4dc:	e8 94       	clt

000004de <__fp_szero>:
 4de:	bb 27       	eor	r27, r27
 4e0:	66 27       	eor	r22, r22
 4e2:	77 27       	eor	r23, r23
 4e4:	cb 01       	movw	r24, r22
 4e6:	97 f9       	bld	r25, 7
 4e8:	08 95       	ret

000004ea <__mulsf3>:
 4ea:	0e 94 88 02 	call	0x510	; 0x510 <__mulsf3x>
 4ee:	0c 94 3b 02 	jmp	0x476	; 0x476 <__fp_round>
 4f2:	0e 94 2d 02 	call	0x45a	; 0x45a <__fp_pscA>
 4f6:	38 f0       	brcs	.+14     	; 0x506 <__mulsf3+0x1c>
 4f8:	0e 94 34 02 	call	0x468	; 0x468 <__fp_pscB>
 4fc:	20 f0       	brcs	.+8      	; 0x506 <__mulsf3+0x1c>
 4fe:	95 23       	and	r25, r21
 500:	11 f0       	breq	.+4      	; 0x506 <__mulsf3+0x1c>
 502:	0c 94 24 02 	jmp	0x448	; 0x448 <__fp_inf>
 506:	0c 94 2a 02 	jmp	0x454	; 0x454 <__fp_nan>
 50a:	11 24       	eor	r1, r1
 50c:	0c 94 6f 02 	jmp	0x4de	; 0x4de <__fp_szero>

00000510 <__mulsf3x>:
 510:	0e 94 4c 02 	call	0x498	; 0x498 <__fp_split3>
 514:	70 f3       	brcs	.-36     	; 0x4f2 <__mulsf3+0x8>

00000516 <__mulsf3_pse>:
 516:	95 9f       	mul	r25, r21
 518:	c1 f3       	breq	.-16     	; 0x50a <__mulsf3+0x20>
 51a:	95 0f       	add	r25, r21
 51c:	50 e0       	ldi	r21, 0x00	; 0
 51e:	55 1f       	adc	r21, r21
 520:	62 9f       	mul	r22, r18
 522:	f0 01       	movw	r30, r0
 524:	72 9f       	mul	r23, r18
 526:	bb 27       	eor	r27, r27
 528:	f0 0d       	add	r31, r0
 52a:	b1 1d       	adc	r27, r1
 52c:	63 9f       	mul	r22, r19
 52e:	aa 27       	eor	r26, r26
 530:	f0 0d       	add	r31, r0
 532:	b1 1d       	adc	r27, r1
 534:	aa 1f       	adc	r26, r26
 536:	64 9f       	mul	r22, r20
 538:	66 27       	eor	r22, r22
 53a:	b0 0d       	add	r27, r0
 53c:	a1 1d       	adc	r26, r1
 53e:	66 1f       	adc	r22, r22
 540:	82 9f       	mul	r24, r18
 542:	22 27       	eor	r18, r18
 544:	b0 0d       	add	r27, r0
 546:	a1 1d       	adc	r26, r1
 548:	62 1f       	adc	r22, r18
 54a:	73 9f       	mul	r23, r19
 54c:	b0 0d       	add	r27, r0
 54e:	a1 1d       	adc	r26, r1
 550:	62 1f       	adc	r22, r18
 552:	83 9f       	mul	r24, r19
 554:	a0 0d       	add	r26, r0
 556:	61 1d       	adc	r22, r1
 558:	22 1f       	adc	r18, r18
 55a:	74 9f       	mul	r23, r20
 55c:	33 27       	eor	r19, r19
 55e:	a0 0d       	add	r26, r0
 560:	61 1d       	adc	r22, r1
 562:	23 1f       	adc	r18, r19
 564:	84 9f       	mul	r24, r20
 566:	60 0d       	add	r22, r0
 568:	21 1d       	adc	r18, r1
 56a:	82 2f       	mov	r24, r18
 56c:	76 2f       	mov	r23, r22
 56e:	6a 2f       	mov	r22, r26
 570:	11 24       	eor	r1, r1
 572:	9f 57       	subi	r25, 0x7F	; 127
 574:	50 40       	sbci	r21, 0x00	; 0
 576:	9a f0       	brmi	.+38     	; 0x59e <__mulsf3_pse+0x88>
 578:	f1 f0       	breq	.+60     	; 0x5b6 <__mulsf3_pse+0xa0>
 57a:	88 23       	and	r24, r24
 57c:	4a f0       	brmi	.+18     	; 0x590 <__mulsf3_pse+0x7a>
 57e:	ee 0f       	add	r30, r30
 580:	ff 1f       	adc	r31, r31
 582:	bb 1f       	adc	r27, r27
 584:	66 1f       	adc	r22, r22
 586:	77 1f       	adc	r23, r23
 588:	88 1f       	adc	r24, r24
 58a:	91 50       	subi	r25, 0x01	; 1
 58c:	50 40       	sbci	r21, 0x00	; 0
 58e:	a9 f7       	brne	.-22     	; 0x57a <__mulsf3_pse+0x64>
 590:	9e 3f       	cpi	r25, 0xFE	; 254
 592:	51 05       	cpc	r21, r1
 594:	80 f0       	brcs	.+32     	; 0x5b6 <__mulsf3_pse+0xa0>
 596:	0c 94 24 02 	jmp	0x448	; 0x448 <__fp_inf>
 59a:	0c 94 6f 02 	jmp	0x4de	; 0x4de <__fp_szero>
 59e:	5f 3f       	cpi	r21, 0xFF	; 255
 5a0:	e4 f3       	brlt	.-8      	; 0x59a <__mulsf3_pse+0x84>
 5a2:	98 3e       	cpi	r25, 0xE8	; 232
 5a4:	d4 f3       	brlt	.-12     	; 0x59a <__mulsf3_pse+0x84>
 5a6:	86 95       	lsr	r24
 5a8:	77 95       	ror	r23
 5aa:	67 95       	ror	r22
 5ac:	b7 95       	ror	r27
 5ae:	f7 95       	ror	r31
 5b0:	e7 95       	ror	r30
 5b2:	9f 5f       	subi	r25, 0xFF	; 255
 5b4:	c1 f7       	brne	.-16     	; 0x5a6 <__mulsf3_pse+0x90>
 5b6:	fe 2b       	or	r31, r30
 5b8:	88 0f       	add	r24, r24
 5ba:	91 1d       	adc	r25, r1
 5bc:	96 95       	lsr	r25
 5be:	87 95       	ror	r24
 5c0:	97 f9       	bld	r25, 7
 5c2:	08 95       	ret

000005c4 <__udivmodsi4>:
 5c4:	a1 e2       	ldi	r26, 0x21	; 33
 5c6:	1a 2e       	mov	r1, r26
 5c8:	aa 1b       	sub	r26, r26
 5ca:	bb 1b       	sub	r27, r27
 5cc:	fd 01       	movw	r30, r26
 5ce:	0d c0       	rjmp	.+26     	; 0x5ea <__udivmodsi4_ep>

000005d0 <__udivmodsi4_loop>:
 5d0:	aa 1f       	adc	r26, r26
 5d2:	bb 1f       	adc	r27, r27
 5d4:	ee 1f       	adc	r30, r30
 5d6:	ff 1f       	adc	r31, r31
 5d8:	a2 17       	cp	r26, r18
 5da:	b3 07       	cpc	r27, r19
 5dc:	e4 07       	cpc	r30, r20
 5de:	f5 07       	cpc	r31, r21
 5e0:	20 f0       	brcs	.+8      	; 0x5ea <__udivmodsi4_ep>
 5e2:	a2 1b       	sub	r26, r18
 5e4:	b3 0b       	sbc	r27, r19
 5e6:	e4 0b       	sbc	r30, r20
 5e8:	f5 0b       	sbc	r31, r21

000005ea <__udivmodsi4_ep>:
 5ea:	66 1f       	adc	r22, r22
 5ec:	77 1f       	adc	r23, r23
 5ee:	88 1f       	adc	r24, r24
 5f0:	99 1f       	adc	r25, r25
 5f2:	1a 94       	dec	r1
 5f4:	69 f7       	brne	.-38     	; 0x5d0 <__udivmodsi4_loop>
 5f6:	60 95       	com	r22
 5f8:	70 95       	com	r23
 5fa:	80 95       	com	r24
 5fc:	90 95       	com	r25
 5fe:	9b 01       	movw	r18, r22
 600:	ac 01       	movw	r20, r24
 602:	bd 01       	movw	r22, r26
 604:	cf 01       	movw	r24, r30
 606:	08 95       	ret

00000608 <sprintf>:
 608:	ae e0       	ldi	r26, 0x0E	; 14
 60a:	b0 e0       	ldi	r27, 0x00	; 0
 60c:	ea e0       	ldi	r30, 0x0A	; 10
 60e:	f3 e0       	ldi	r31, 0x03	; 3
 610:	0c 94 c5 05 	jmp	0xb8a	; 0xb8a <__prologue_saves__+0x1c>
 614:	0d 89       	ldd	r16, Y+21	; 0x15
 616:	1e 89       	ldd	r17, Y+22	; 0x16
 618:	86 e0       	ldi	r24, 0x06	; 6
 61a:	8c 83       	std	Y+4, r24	; 0x04
 61c:	1a 83       	std	Y+2, r17	; 0x02
 61e:	09 83       	std	Y+1, r16	; 0x01
 620:	8f ef       	ldi	r24, 0xFF	; 255
 622:	9f e7       	ldi	r25, 0x7F	; 127
 624:	9e 83       	std	Y+6, r25	; 0x06
 626:	8d 83       	std	Y+5, r24	; 0x05
 628:	ae 01       	movw	r20, r28
 62a:	47 5e       	subi	r20, 0xE7	; 231
 62c:	5f 4f       	sbci	r21, 0xFF	; 255
 62e:	6f 89       	ldd	r22, Y+23	; 0x17
 630:	78 8d       	ldd	r23, Y+24	; 0x18
 632:	ce 01       	movw	r24, r28
 634:	01 96       	adiw	r24, 0x01	; 1
 636:	0e 94 26 03 	call	0x64c	; 0x64c <vfprintf>
 63a:	ef 81       	ldd	r30, Y+7	; 0x07
 63c:	f8 85       	ldd	r31, Y+8	; 0x08
 63e:	e0 0f       	add	r30, r16
 640:	f1 1f       	adc	r31, r17
 642:	10 82       	st	Z, r1
 644:	2e 96       	adiw	r28, 0x0e	; 14
 646:	e4 e0       	ldi	r30, 0x04	; 4
 648:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <__epilogue_restores__+0x1c>

0000064c <vfprintf>:
 64c:	ab e0       	ldi	r26, 0x0B	; 11
 64e:	b0 e0       	ldi	r27, 0x00	; 0
 650:	ec e2       	ldi	r30, 0x2C	; 44
 652:	f3 e0       	ldi	r31, 0x03	; 3
 654:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__prologue_saves__>
 658:	6c 01       	movw	r12, r24
 65a:	7b 01       	movw	r14, r22
 65c:	8a 01       	movw	r16, r20
 65e:	fc 01       	movw	r30, r24
 660:	17 82       	std	Z+7, r1	; 0x07
 662:	16 82       	std	Z+6, r1	; 0x06
 664:	83 81       	ldd	r24, Z+3	; 0x03
 666:	81 ff       	sbrs	r24, 1
 668:	cc c1       	rjmp	.+920    	; 0xa02 <__stack+0x103>
 66a:	ce 01       	movw	r24, r28
 66c:	01 96       	adiw	r24, 0x01	; 1
 66e:	3c 01       	movw	r6, r24
 670:	f6 01       	movw	r30, r12
 672:	93 81       	ldd	r25, Z+3	; 0x03
 674:	f7 01       	movw	r30, r14
 676:	93 fd       	sbrc	r25, 3
 678:	85 91       	lpm	r24, Z+
 67a:	93 ff       	sbrs	r25, 3
 67c:	81 91       	ld	r24, Z+
 67e:	7f 01       	movw	r14, r30
 680:	88 23       	and	r24, r24
 682:	09 f4       	brne	.+2      	; 0x686 <vfprintf+0x3a>
 684:	ba c1       	rjmp	.+884    	; 0x9fa <__stack+0xfb>
 686:	85 32       	cpi	r24, 0x25	; 37
 688:	39 f4       	brne	.+14     	; 0x698 <vfprintf+0x4c>
 68a:	93 fd       	sbrc	r25, 3
 68c:	85 91       	lpm	r24, Z+
 68e:	93 ff       	sbrs	r25, 3
 690:	81 91       	ld	r24, Z+
 692:	7f 01       	movw	r14, r30
 694:	85 32       	cpi	r24, 0x25	; 37
 696:	29 f4       	brne	.+10     	; 0x6a2 <vfprintf+0x56>
 698:	b6 01       	movw	r22, r12
 69a:	90 e0       	ldi	r25, 0x00	; 0
 69c:	0e 94 1d 05 	call	0xa3a	; 0xa3a <fputc>
 6a0:	e7 cf       	rjmp	.-50     	; 0x670 <vfprintf+0x24>
 6a2:	91 2c       	mov	r9, r1
 6a4:	21 2c       	mov	r2, r1
 6a6:	31 2c       	mov	r3, r1
 6a8:	ff e1       	ldi	r31, 0x1F	; 31
 6aa:	f3 15       	cp	r31, r3
 6ac:	d8 f0       	brcs	.+54     	; 0x6e4 <vfprintf+0x98>
 6ae:	8b 32       	cpi	r24, 0x2B	; 43
 6b0:	79 f0       	breq	.+30     	; 0x6d0 <vfprintf+0x84>
 6b2:	38 f4       	brcc	.+14     	; 0x6c2 <vfprintf+0x76>
 6b4:	80 32       	cpi	r24, 0x20	; 32
 6b6:	79 f0       	breq	.+30     	; 0x6d6 <vfprintf+0x8a>
 6b8:	83 32       	cpi	r24, 0x23	; 35
 6ba:	a1 f4       	brne	.+40     	; 0x6e4 <vfprintf+0x98>
 6bc:	23 2d       	mov	r18, r3
 6be:	20 61       	ori	r18, 0x10	; 16
 6c0:	1d c0       	rjmp	.+58     	; 0x6fc <vfprintf+0xb0>
 6c2:	8d 32       	cpi	r24, 0x2D	; 45
 6c4:	61 f0       	breq	.+24     	; 0x6de <vfprintf+0x92>
 6c6:	80 33       	cpi	r24, 0x30	; 48
 6c8:	69 f4       	brne	.+26     	; 0x6e4 <vfprintf+0x98>
 6ca:	23 2d       	mov	r18, r3
 6cc:	21 60       	ori	r18, 0x01	; 1
 6ce:	16 c0       	rjmp	.+44     	; 0x6fc <vfprintf+0xb0>
 6d0:	83 2d       	mov	r24, r3
 6d2:	82 60       	ori	r24, 0x02	; 2
 6d4:	38 2e       	mov	r3, r24
 6d6:	e3 2d       	mov	r30, r3
 6d8:	e4 60       	ori	r30, 0x04	; 4
 6da:	3e 2e       	mov	r3, r30
 6dc:	2a c0       	rjmp	.+84     	; 0x732 <vfprintf+0xe6>
 6de:	f3 2d       	mov	r31, r3
 6e0:	f8 60       	ori	r31, 0x08	; 8
 6e2:	1d c0       	rjmp	.+58     	; 0x71e <vfprintf+0xd2>
 6e4:	37 fc       	sbrc	r3, 7
 6e6:	2d c0       	rjmp	.+90     	; 0x742 <vfprintf+0xf6>
 6e8:	20 ed       	ldi	r18, 0xD0	; 208
 6ea:	28 0f       	add	r18, r24
 6ec:	2a 30       	cpi	r18, 0x0A	; 10
 6ee:	40 f0       	brcs	.+16     	; 0x700 <vfprintf+0xb4>
 6f0:	8e 32       	cpi	r24, 0x2E	; 46
 6f2:	b9 f4       	brne	.+46     	; 0x722 <vfprintf+0xd6>
 6f4:	36 fc       	sbrc	r3, 6
 6f6:	81 c1       	rjmp	.+770    	; 0x9fa <__stack+0xfb>
 6f8:	23 2d       	mov	r18, r3
 6fa:	20 64       	ori	r18, 0x40	; 64
 6fc:	32 2e       	mov	r3, r18
 6fe:	19 c0       	rjmp	.+50     	; 0x732 <vfprintf+0xe6>
 700:	36 fe       	sbrs	r3, 6
 702:	06 c0       	rjmp	.+12     	; 0x710 <vfprintf+0xc4>
 704:	8a e0       	ldi	r24, 0x0A	; 10
 706:	98 9e       	mul	r9, r24
 708:	20 0d       	add	r18, r0
 70a:	11 24       	eor	r1, r1
 70c:	92 2e       	mov	r9, r18
 70e:	11 c0       	rjmp	.+34     	; 0x732 <vfprintf+0xe6>
 710:	ea e0       	ldi	r30, 0x0A	; 10
 712:	2e 9e       	mul	r2, r30
 714:	20 0d       	add	r18, r0
 716:	11 24       	eor	r1, r1
 718:	22 2e       	mov	r2, r18
 71a:	f3 2d       	mov	r31, r3
 71c:	f0 62       	ori	r31, 0x20	; 32
 71e:	3f 2e       	mov	r3, r31
 720:	08 c0       	rjmp	.+16     	; 0x732 <vfprintf+0xe6>
 722:	8c 36       	cpi	r24, 0x6C	; 108
 724:	21 f4       	brne	.+8      	; 0x72e <vfprintf+0xe2>
 726:	83 2d       	mov	r24, r3
 728:	80 68       	ori	r24, 0x80	; 128
 72a:	38 2e       	mov	r3, r24
 72c:	02 c0       	rjmp	.+4      	; 0x732 <vfprintf+0xe6>
 72e:	88 36       	cpi	r24, 0x68	; 104
 730:	41 f4       	brne	.+16     	; 0x742 <vfprintf+0xf6>
 732:	f7 01       	movw	r30, r14
 734:	93 fd       	sbrc	r25, 3
 736:	85 91       	lpm	r24, Z+
 738:	93 ff       	sbrs	r25, 3
 73a:	81 91       	ld	r24, Z+
 73c:	7f 01       	movw	r14, r30
 73e:	81 11       	cpse	r24, r1
 740:	b3 cf       	rjmp	.-154    	; 0x6a8 <vfprintf+0x5c>
 742:	98 2f       	mov	r25, r24
 744:	9f 7d       	andi	r25, 0xDF	; 223
 746:	95 54       	subi	r25, 0x45	; 69
 748:	93 30       	cpi	r25, 0x03	; 3
 74a:	28 f4       	brcc	.+10     	; 0x756 <vfprintf+0x10a>
 74c:	0c 5f       	subi	r16, 0xFC	; 252
 74e:	1f 4f       	sbci	r17, 0xFF	; 255
 750:	9f e3       	ldi	r25, 0x3F	; 63
 752:	99 83       	std	Y+1, r25	; 0x01
 754:	0d c0       	rjmp	.+26     	; 0x770 <vfprintf+0x124>
 756:	83 36       	cpi	r24, 0x63	; 99
 758:	31 f0       	breq	.+12     	; 0x766 <vfprintf+0x11a>
 75a:	83 37       	cpi	r24, 0x73	; 115
 75c:	71 f0       	breq	.+28     	; 0x77a <vfprintf+0x12e>
 75e:	83 35       	cpi	r24, 0x53	; 83
 760:	09 f0       	breq	.+2      	; 0x764 <vfprintf+0x118>
 762:	59 c0       	rjmp	.+178    	; 0x816 <vfprintf+0x1ca>
 764:	21 c0       	rjmp	.+66     	; 0x7a8 <vfprintf+0x15c>
 766:	f8 01       	movw	r30, r16
 768:	80 81       	ld	r24, Z
 76a:	89 83       	std	Y+1, r24	; 0x01
 76c:	0e 5f       	subi	r16, 0xFE	; 254
 76e:	1f 4f       	sbci	r17, 0xFF	; 255
 770:	88 24       	eor	r8, r8
 772:	83 94       	inc	r8
 774:	91 2c       	mov	r9, r1
 776:	53 01       	movw	r10, r6
 778:	13 c0       	rjmp	.+38     	; 0x7a0 <vfprintf+0x154>
 77a:	28 01       	movw	r4, r16
 77c:	f2 e0       	ldi	r31, 0x02	; 2
 77e:	4f 0e       	add	r4, r31
 780:	51 1c       	adc	r5, r1
 782:	f8 01       	movw	r30, r16
 784:	a0 80       	ld	r10, Z
 786:	b1 80       	ldd	r11, Z+1	; 0x01
 788:	36 fe       	sbrs	r3, 6
 78a:	03 c0       	rjmp	.+6      	; 0x792 <vfprintf+0x146>
 78c:	69 2d       	mov	r22, r9
 78e:	70 e0       	ldi	r23, 0x00	; 0
 790:	02 c0       	rjmp	.+4      	; 0x796 <vfprintf+0x14a>
 792:	6f ef       	ldi	r22, 0xFF	; 255
 794:	7f ef       	ldi	r23, 0xFF	; 255
 796:	c5 01       	movw	r24, r10
 798:	0e 94 12 05 	call	0xa24	; 0xa24 <strnlen>
 79c:	4c 01       	movw	r8, r24
 79e:	82 01       	movw	r16, r4
 7a0:	f3 2d       	mov	r31, r3
 7a2:	ff 77       	andi	r31, 0x7F	; 127
 7a4:	3f 2e       	mov	r3, r31
 7a6:	16 c0       	rjmp	.+44     	; 0x7d4 <vfprintf+0x188>
 7a8:	28 01       	movw	r4, r16
 7aa:	22 e0       	ldi	r18, 0x02	; 2
 7ac:	42 0e       	add	r4, r18
 7ae:	51 1c       	adc	r5, r1
 7b0:	f8 01       	movw	r30, r16
 7b2:	a0 80       	ld	r10, Z
 7b4:	b1 80       	ldd	r11, Z+1	; 0x01
 7b6:	36 fe       	sbrs	r3, 6
 7b8:	03 c0       	rjmp	.+6      	; 0x7c0 <vfprintf+0x174>
 7ba:	69 2d       	mov	r22, r9
 7bc:	70 e0       	ldi	r23, 0x00	; 0
 7be:	02 c0       	rjmp	.+4      	; 0x7c4 <vfprintf+0x178>
 7c0:	6f ef       	ldi	r22, 0xFF	; 255
 7c2:	7f ef       	ldi	r23, 0xFF	; 255
 7c4:	c5 01       	movw	r24, r10
 7c6:	0e 94 07 05 	call	0xa0e	; 0xa0e <strnlen_P>
 7ca:	4c 01       	movw	r8, r24
 7cc:	f3 2d       	mov	r31, r3
 7ce:	f0 68       	ori	r31, 0x80	; 128
 7d0:	3f 2e       	mov	r3, r31
 7d2:	82 01       	movw	r16, r4
 7d4:	33 fc       	sbrc	r3, 3
 7d6:	1b c0       	rjmp	.+54     	; 0x80e <vfprintf+0x1c2>
 7d8:	82 2d       	mov	r24, r2
 7da:	90 e0       	ldi	r25, 0x00	; 0
 7dc:	88 16       	cp	r8, r24
 7de:	99 06       	cpc	r9, r25
 7e0:	b0 f4       	brcc	.+44     	; 0x80e <vfprintf+0x1c2>
 7e2:	b6 01       	movw	r22, r12
 7e4:	80 e2       	ldi	r24, 0x20	; 32
 7e6:	90 e0       	ldi	r25, 0x00	; 0
 7e8:	0e 94 1d 05 	call	0xa3a	; 0xa3a <fputc>
 7ec:	2a 94       	dec	r2
 7ee:	f4 cf       	rjmp	.-24     	; 0x7d8 <vfprintf+0x18c>
 7f0:	f5 01       	movw	r30, r10
 7f2:	37 fc       	sbrc	r3, 7
 7f4:	85 91       	lpm	r24, Z+
 7f6:	37 fe       	sbrs	r3, 7
 7f8:	81 91       	ld	r24, Z+
 7fa:	5f 01       	movw	r10, r30
 7fc:	b6 01       	movw	r22, r12
 7fe:	90 e0       	ldi	r25, 0x00	; 0
 800:	0e 94 1d 05 	call	0xa3a	; 0xa3a <fputc>
 804:	21 10       	cpse	r2, r1
 806:	2a 94       	dec	r2
 808:	21 e0       	ldi	r18, 0x01	; 1
 80a:	82 1a       	sub	r8, r18
 80c:	91 08       	sbc	r9, r1
 80e:	81 14       	cp	r8, r1
 810:	91 04       	cpc	r9, r1
 812:	71 f7       	brne	.-36     	; 0x7f0 <vfprintf+0x1a4>
 814:	e8 c0       	rjmp	.+464    	; 0x9e6 <__stack+0xe7>
 816:	84 36       	cpi	r24, 0x64	; 100
 818:	11 f0       	breq	.+4      	; 0x81e <vfprintf+0x1d2>
 81a:	89 36       	cpi	r24, 0x69	; 105
 81c:	41 f5       	brne	.+80     	; 0x86e <vfprintf+0x222>
 81e:	f8 01       	movw	r30, r16
 820:	37 fe       	sbrs	r3, 7
 822:	07 c0       	rjmp	.+14     	; 0x832 <vfprintf+0x1e6>
 824:	60 81       	ld	r22, Z
 826:	71 81       	ldd	r23, Z+1	; 0x01
 828:	82 81       	ldd	r24, Z+2	; 0x02
 82a:	93 81       	ldd	r25, Z+3	; 0x03
 82c:	0c 5f       	subi	r16, 0xFC	; 252
 82e:	1f 4f       	sbci	r17, 0xFF	; 255
 830:	08 c0       	rjmp	.+16     	; 0x842 <vfprintf+0x1f6>
 832:	60 81       	ld	r22, Z
 834:	71 81       	ldd	r23, Z+1	; 0x01
 836:	07 2e       	mov	r0, r23
 838:	00 0c       	add	r0, r0
 83a:	88 0b       	sbc	r24, r24
 83c:	99 0b       	sbc	r25, r25
 83e:	0e 5f       	subi	r16, 0xFE	; 254
 840:	1f 4f       	sbci	r17, 0xFF	; 255
 842:	f3 2d       	mov	r31, r3
 844:	ff 76       	andi	r31, 0x6F	; 111
 846:	3f 2e       	mov	r3, r31
 848:	97 ff       	sbrs	r25, 7
 84a:	09 c0       	rjmp	.+18     	; 0x85e <vfprintf+0x212>
 84c:	90 95       	com	r25
 84e:	80 95       	com	r24
 850:	70 95       	com	r23
 852:	61 95       	neg	r22
 854:	7f 4f       	sbci	r23, 0xFF	; 255
 856:	8f 4f       	sbci	r24, 0xFF	; 255
 858:	9f 4f       	sbci	r25, 0xFF	; 255
 85a:	f0 68       	ori	r31, 0x80	; 128
 85c:	3f 2e       	mov	r3, r31
 85e:	2a e0       	ldi	r18, 0x0A	; 10
 860:	30 e0       	ldi	r19, 0x00	; 0
 862:	a3 01       	movw	r20, r6
 864:	0e 94 59 05 	call	0xab2	; 0xab2 <__ultoa_invert>
 868:	88 2e       	mov	r8, r24
 86a:	86 18       	sub	r8, r6
 86c:	45 c0       	rjmp	.+138    	; 0x8f8 <vfprintf+0x2ac>
 86e:	85 37       	cpi	r24, 0x75	; 117
 870:	31 f4       	brne	.+12     	; 0x87e <vfprintf+0x232>
 872:	23 2d       	mov	r18, r3
 874:	2f 7e       	andi	r18, 0xEF	; 239
 876:	b2 2e       	mov	r11, r18
 878:	2a e0       	ldi	r18, 0x0A	; 10
 87a:	30 e0       	ldi	r19, 0x00	; 0
 87c:	25 c0       	rjmp	.+74     	; 0x8c8 <vfprintf+0x27c>
 87e:	93 2d       	mov	r25, r3
 880:	99 7f       	andi	r25, 0xF9	; 249
 882:	b9 2e       	mov	r11, r25
 884:	8f 36       	cpi	r24, 0x6F	; 111
 886:	c1 f0       	breq	.+48     	; 0x8b8 <vfprintf+0x26c>
 888:	18 f4       	brcc	.+6      	; 0x890 <vfprintf+0x244>
 88a:	88 35       	cpi	r24, 0x58	; 88
 88c:	79 f0       	breq	.+30     	; 0x8ac <vfprintf+0x260>
 88e:	b5 c0       	rjmp	.+362    	; 0x9fa <__stack+0xfb>
 890:	80 37       	cpi	r24, 0x70	; 112
 892:	19 f0       	breq	.+6      	; 0x89a <vfprintf+0x24e>
 894:	88 37       	cpi	r24, 0x78	; 120
 896:	21 f0       	breq	.+8      	; 0x8a0 <vfprintf+0x254>
 898:	b0 c0       	rjmp	.+352    	; 0x9fa <__stack+0xfb>
 89a:	e9 2f       	mov	r30, r25
 89c:	e0 61       	ori	r30, 0x10	; 16
 89e:	be 2e       	mov	r11, r30
 8a0:	b4 fe       	sbrs	r11, 4
 8a2:	0d c0       	rjmp	.+26     	; 0x8be <vfprintf+0x272>
 8a4:	fb 2d       	mov	r31, r11
 8a6:	f4 60       	ori	r31, 0x04	; 4
 8a8:	bf 2e       	mov	r11, r31
 8aa:	09 c0       	rjmp	.+18     	; 0x8be <vfprintf+0x272>
 8ac:	34 fe       	sbrs	r3, 4
 8ae:	0a c0       	rjmp	.+20     	; 0x8c4 <vfprintf+0x278>
 8b0:	29 2f       	mov	r18, r25
 8b2:	26 60       	ori	r18, 0x06	; 6
 8b4:	b2 2e       	mov	r11, r18
 8b6:	06 c0       	rjmp	.+12     	; 0x8c4 <vfprintf+0x278>
 8b8:	28 e0       	ldi	r18, 0x08	; 8
 8ba:	30 e0       	ldi	r19, 0x00	; 0
 8bc:	05 c0       	rjmp	.+10     	; 0x8c8 <vfprintf+0x27c>
 8be:	20 e1       	ldi	r18, 0x10	; 16
 8c0:	30 e0       	ldi	r19, 0x00	; 0
 8c2:	02 c0       	rjmp	.+4      	; 0x8c8 <vfprintf+0x27c>
 8c4:	20 e1       	ldi	r18, 0x10	; 16
 8c6:	32 e0       	ldi	r19, 0x02	; 2
 8c8:	f8 01       	movw	r30, r16
 8ca:	b7 fe       	sbrs	r11, 7
 8cc:	07 c0       	rjmp	.+14     	; 0x8dc <vfprintf+0x290>
 8ce:	60 81       	ld	r22, Z
 8d0:	71 81       	ldd	r23, Z+1	; 0x01
 8d2:	82 81       	ldd	r24, Z+2	; 0x02
 8d4:	93 81       	ldd	r25, Z+3	; 0x03
 8d6:	0c 5f       	subi	r16, 0xFC	; 252
 8d8:	1f 4f       	sbci	r17, 0xFF	; 255
 8da:	06 c0       	rjmp	.+12     	; 0x8e8 <vfprintf+0x29c>
 8dc:	60 81       	ld	r22, Z
 8de:	71 81       	ldd	r23, Z+1	; 0x01
 8e0:	80 e0       	ldi	r24, 0x00	; 0
 8e2:	90 e0       	ldi	r25, 0x00	; 0
 8e4:	0e 5f       	subi	r16, 0xFE	; 254
 8e6:	1f 4f       	sbci	r17, 0xFF	; 255
 8e8:	a3 01       	movw	r20, r6
 8ea:	0e 94 59 05 	call	0xab2	; 0xab2 <__ultoa_invert>
 8ee:	88 2e       	mov	r8, r24
 8f0:	86 18       	sub	r8, r6
 8f2:	fb 2d       	mov	r31, r11
 8f4:	ff 77       	andi	r31, 0x7F	; 127
 8f6:	3f 2e       	mov	r3, r31
 8f8:	36 fe       	sbrs	r3, 6
 8fa:	0d c0       	rjmp	.+26     	; 0x916 <__stack+0x17>
 8fc:	23 2d       	mov	r18, r3
 8fe:	2e 7f       	andi	r18, 0xFE	; 254
 900:	a2 2e       	mov	r10, r18
 902:	89 14       	cp	r8, r9
 904:	58 f4       	brcc	.+22     	; 0x91c <__stack+0x1d>
 906:	34 fe       	sbrs	r3, 4
 908:	0b c0       	rjmp	.+22     	; 0x920 <__stack+0x21>
 90a:	32 fc       	sbrc	r3, 2
 90c:	09 c0       	rjmp	.+18     	; 0x920 <__stack+0x21>
 90e:	83 2d       	mov	r24, r3
 910:	8e 7e       	andi	r24, 0xEE	; 238
 912:	a8 2e       	mov	r10, r24
 914:	05 c0       	rjmp	.+10     	; 0x920 <__stack+0x21>
 916:	b8 2c       	mov	r11, r8
 918:	a3 2c       	mov	r10, r3
 91a:	03 c0       	rjmp	.+6      	; 0x922 <__stack+0x23>
 91c:	b8 2c       	mov	r11, r8
 91e:	01 c0       	rjmp	.+2      	; 0x922 <__stack+0x23>
 920:	b9 2c       	mov	r11, r9
 922:	a4 fe       	sbrs	r10, 4
 924:	0f c0       	rjmp	.+30     	; 0x944 <__stack+0x45>
 926:	fe 01       	movw	r30, r28
 928:	e8 0d       	add	r30, r8
 92a:	f1 1d       	adc	r31, r1
 92c:	80 81       	ld	r24, Z
 92e:	80 33       	cpi	r24, 0x30	; 48
 930:	21 f4       	brne	.+8      	; 0x93a <__stack+0x3b>
 932:	9a 2d       	mov	r25, r10
 934:	99 7e       	andi	r25, 0xE9	; 233
 936:	a9 2e       	mov	r10, r25
 938:	09 c0       	rjmp	.+18     	; 0x94c <__stack+0x4d>
 93a:	a2 fe       	sbrs	r10, 2
 93c:	06 c0       	rjmp	.+12     	; 0x94a <__stack+0x4b>
 93e:	b3 94       	inc	r11
 940:	b3 94       	inc	r11
 942:	04 c0       	rjmp	.+8      	; 0x94c <__stack+0x4d>
 944:	8a 2d       	mov	r24, r10
 946:	86 78       	andi	r24, 0x86	; 134
 948:	09 f0       	breq	.+2      	; 0x94c <__stack+0x4d>
 94a:	b3 94       	inc	r11
 94c:	a3 fc       	sbrc	r10, 3
 94e:	11 c0       	rjmp	.+34     	; 0x972 <__stack+0x73>
 950:	a0 fe       	sbrs	r10, 0
 952:	06 c0       	rjmp	.+12     	; 0x960 <__stack+0x61>
 954:	b2 14       	cp	r11, r2
 956:	88 f4       	brcc	.+34     	; 0x97a <__stack+0x7b>
 958:	28 0c       	add	r2, r8
 95a:	92 2c       	mov	r9, r2
 95c:	9b 18       	sub	r9, r11
 95e:	0e c0       	rjmp	.+28     	; 0x97c <__stack+0x7d>
 960:	b2 14       	cp	r11, r2
 962:	60 f4       	brcc	.+24     	; 0x97c <__stack+0x7d>
 964:	b6 01       	movw	r22, r12
 966:	80 e2       	ldi	r24, 0x20	; 32
 968:	90 e0       	ldi	r25, 0x00	; 0
 96a:	0e 94 1d 05 	call	0xa3a	; 0xa3a <fputc>
 96e:	b3 94       	inc	r11
 970:	f7 cf       	rjmp	.-18     	; 0x960 <__stack+0x61>
 972:	b2 14       	cp	r11, r2
 974:	18 f4       	brcc	.+6      	; 0x97c <__stack+0x7d>
 976:	2b 18       	sub	r2, r11
 978:	02 c0       	rjmp	.+4      	; 0x97e <__stack+0x7f>
 97a:	98 2c       	mov	r9, r8
 97c:	21 2c       	mov	r2, r1
 97e:	a4 fe       	sbrs	r10, 4
 980:	10 c0       	rjmp	.+32     	; 0x9a2 <__stack+0xa3>
 982:	b6 01       	movw	r22, r12
 984:	80 e3       	ldi	r24, 0x30	; 48
 986:	90 e0       	ldi	r25, 0x00	; 0
 988:	0e 94 1d 05 	call	0xa3a	; 0xa3a <fputc>
 98c:	a2 fe       	sbrs	r10, 2
 98e:	17 c0       	rjmp	.+46     	; 0x9be <__stack+0xbf>
 990:	a1 fc       	sbrc	r10, 1
 992:	03 c0       	rjmp	.+6      	; 0x99a <__stack+0x9b>
 994:	88 e7       	ldi	r24, 0x78	; 120
 996:	90 e0       	ldi	r25, 0x00	; 0
 998:	02 c0       	rjmp	.+4      	; 0x99e <__stack+0x9f>
 99a:	88 e5       	ldi	r24, 0x58	; 88
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	b6 01       	movw	r22, r12
 9a0:	0c c0       	rjmp	.+24     	; 0x9ba <__stack+0xbb>
 9a2:	8a 2d       	mov	r24, r10
 9a4:	86 78       	andi	r24, 0x86	; 134
 9a6:	59 f0       	breq	.+22     	; 0x9be <__stack+0xbf>
 9a8:	a1 fe       	sbrs	r10, 1
 9aa:	02 c0       	rjmp	.+4      	; 0x9b0 <__stack+0xb1>
 9ac:	8b e2       	ldi	r24, 0x2B	; 43
 9ae:	01 c0       	rjmp	.+2      	; 0x9b2 <__stack+0xb3>
 9b0:	80 e2       	ldi	r24, 0x20	; 32
 9b2:	a7 fc       	sbrc	r10, 7
 9b4:	8d e2       	ldi	r24, 0x2D	; 45
 9b6:	b6 01       	movw	r22, r12
 9b8:	90 e0       	ldi	r25, 0x00	; 0
 9ba:	0e 94 1d 05 	call	0xa3a	; 0xa3a <fputc>
 9be:	89 14       	cp	r8, r9
 9c0:	38 f4       	brcc	.+14     	; 0x9d0 <__stack+0xd1>
 9c2:	b6 01       	movw	r22, r12
 9c4:	80 e3       	ldi	r24, 0x30	; 48
 9c6:	90 e0       	ldi	r25, 0x00	; 0
 9c8:	0e 94 1d 05 	call	0xa3a	; 0xa3a <fputc>
 9cc:	9a 94       	dec	r9
 9ce:	f7 cf       	rjmp	.-18     	; 0x9be <__stack+0xbf>
 9d0:	8a 94       	dec	r8
 9d2:	f3 01       	movw	r30, r6
 9d4:	e8 0d       	add	r30, r8
 9d6:	f1 1d       	adc	r31, r1
 9d8:	80 81       	ld	r24, Z
 9da:	b6 01       	movw	r22, r12
 9dc:	90 e0       	ldi	r25, 0x00	; 0
 9de:	0e 94 1d 05 	call	0xa3a	; 0xa3a <fputc>
 9e2:	81 10       	cpse	r8, r1
 9e4:	f5 cf       	rjmp	.-22     	; 0x9d0 <__stack+0xd1>
 9e6:	22 20       	and	r2, r2
 9e8:	09 f4       	brne	.+2      	; 0x9ec <__stack+0xed>
 9ea:	42 ce       	rjmp	.-892    	; 0x670 <vfprintf+0x24>
 9ec:	b6 01       	movw	r22, r12
 9ee:	80 e2       	ldi	r24, 0x20	; 32
 9f0:	90 e0       	ldi	r25, 0x00	; 0
 9f2:	0e 94 1d 05 	call	0xa3a	; 0xa3a <fputc>
 9f6:	2a 94       	dec	r2
 9f8:	f6 cf       	rjmp	.-20     	; 0x9e6 <__stack+0xe7>
 9fa:	f6 01       	movw	r30, r12
 9fc:	86 81       	ldd	r24, Z+6	; 0x06
 9fe:	97 81       	ldd	r25, Z+7	; 0x07
 a00:	02 c0       	rjmp	.+4      	; 0xa06 <__stack+0x107>
 a02:	8f ef       	ldi	r24, 0xFF	; 255
 a04:	9f ef       	ldi	r25, 0xFF	; 255
 a06:	2b 96       	adiw	r28, 0x0b	; 11
 a08:	e2 e1       	ldi	r30, 0x12	; 18
 a0a:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <__epilogue_restores__>

00000a0e <strnlen_P>:
 a0e:	fc 01       	movw	r30, r24
 a10:	05 90       	lpm	r0, Z+
 a12:	61 50       	subi	r22, 0x01	; 1
 a14:	70 40       	sbci	r23, 0x00	; 0
 a16:	01 10       	cpse	r0, r1
 a18:	d8 f7       	brcc	.-10     	; 0xa10 <strnlen_P+0x2>
 a1a:	80 95       	com	r24
 a1c:	90 95       	com	r25
 a1e:	8e 0f       	add	r24, r30
 a20:	9f 1f       	adc	r25, r31
 a22:	08 95       	ret

00000a24 <strnlen>:
 a24:	fc 01       	movw	r30, r24
 a26:	61 50       	subi	r22, 0x01	; 1
 a28:	70 40       	sbci	r23, 0x00	; 0
 a2a:	01 90       	ld	r0, Z+
 a2c:	01 10       	cpse	r0, r1
 a2e:	d8 f7       	brcc	.-10     	; 0xa26 <strnlen+0x2>
 a30:	80 95       	com	r24
 a32:	90 95       	com	r25
 a34:	8e 0f       	add	r24, r30
 a36:	9f 1f       	adc	r25, r31
 a38:	08 95       	ret

00000a3a <fputc>:
 a3a:	0f 93       	push	r16
 a3c:	1f 93       	push	r17
 a3e:	cf 93       	push	r28
 a40:	df 93       	push	r29
 a42:	fb 01       	movw	r30, r22
 a44:	23 81       	ldd	r18, Z+3	; 0x03
 a46:	21 fd       	sbrc	r18, 1
 a48:	03 c0       	rjmp	.+6      	; 0xa50 <fputc+0x16>
 a4a:	8f ef       	ldi	r24, 0xFF	; 255
 a4c:	9f ef       	ldi	r25, 0xFF	; 255
 a4e:	2c c0       	rjmp	.+88     	; 0xaa8 <fputc+0x6e>
 a50:	22 ff       	sbrs	r18, 2
 a52:	16 c0       	rjmp	.+44     	; 0xa80 <fputc+0x46>
 a54:	46 81       	ldd	r20, Z+6	; 0x06
 a56:	57 81       	ldd	r21, Z+7	; 0x07
 a58:	24 81       	ldd	r18, Z+4	; 0x04
 a5a:	35 81       	ldd	r19, Z+5	; 0x05
 a5c:	42 17       	cp	r20, r18
 a5e:	53 07       	cpc	r21, r19
 a60:	44 f4       	brge	.+16     	; 0xa72 <fputc+0x38>
 a62:	a0 81       	ld	r26, Z
 a64:	b1 81       	ldd	r27, Z+1	; 0x01
 a66:	9d 01       	movw	r18, r26
 a68:	2f 5f       	subi	r18, 0xFF	; 255
 a6a:	3f 4f       	sbci	r19, 0xFF	; 255
 a6c:	31 83       	std	Z+1, r19	; 0x01
 a6e:	20 83       	st	Z, r18
 a70:	8c 93       	st	X, r24
 a72:	26 81       	ldd	r18, Z+6	; 0x06
 a74:	37 81       	ldd	r19, Z+7	; 0x07
 a76:	2f 5f       	subi	r18, 0xFF	; 255
 a78:	3f 4f       	sbci	r19, 0xFF	; 255
 a7a:	37 83       	std	Z+7, r19	; 0x07
 a7c:	26 83       	std	Z+6, r18	; 0x06
 a7e:	14 c0       	rjmp	.+40     	; 0xaa8 <fputc+0x6e>
 a80:	8b 01       	movw	r16, r22
 a82:	ec 01       	movw	r28, r24
 a84:	fb 01       	movw	r30, r22
 a86:	00 84       	ldd	r0, Z+8	; 0x08
 a88:	f1 85       	ldd	r31, Z+9	; 0x09
 a8a:	e0 2d       	mov	r30, r0
 a8c:	09 95       	icall
 a8e:	89 2b       	or	r24, r25
 a90:	e1 f6       	brne	.-72     	; 0xa4a <fputc+0x10>
 a92:	d8 01       	movw	r26, r16
 a94:	16 96       	adiw	r26, 0x06	; 6
 a96:	8d 91       	ld	r24, X+
 a98:	9c 91       	ld	r25, X
 a9a:	17 97       	sbiw	r26, 0x07	; 7
 a9c:	01 96       	adiw	r24, 0x01	; 1
 a9e:	17 96       	adiw	r26, 0x07	; 7
 aa0:	9c 93       	st	X, r25
 aa2:	8e 93       	st	-X, r24
 aa4:	16 97       	sbiw	r26, 0x06	; 6
 aa6:	ce 01       	movw	r24, r28
 aa8:	df 91       	pop	r29
 aaa:	cf 91       	pop	r28
 aac:	1f 91       	pop	r17
 aae:	0f 91       	pop	r16
 ab0:	08 95       	ret

00000ab2 <__ultoa_invert>:
 ab2:	fa 01       	movw	r30, r20
 ab4:	aa 27       	eor	r26, r26
 ab6:	28 30       	cpi	r18, 0x08	; 8
 ab8:	51 f1       	breq	.+84     	; 0xb0e <__ultoa_invert+0x5c>
 aba:	20 31       	cpi	r18, 0x10	; 16
 abc:	81 f1       	breq	.+96     	; 0xb1e <__ultoa_invert+0x6c>
 abe:	e8 94       	clt
 ac0:	6f 93       	push	r22
 ac2:	6e 7f       	andi	r22, 0xFE	; 254
 ac4:	6e 5f       	subi	r22, 0xFE	; 254
 ac6:	7f 4f       	sbci	r23, 0xFF	; 255
 ac8:	8f 4f       	sbci	r24, 0xFF	; 255
 aca:	9f 4f       	sbci	r25, 0xFF	; 255
 acc:	af 4f       	sbci	r26, 0xFF	; 255
 ace:	b1 e0       	ldi	r27, 0x01	; 1
 ad0:	3e d0       	rcall	.+124    	; 0xb4e <__ultoa_invert+0x9c>
 ad2:	b4 e0       	ldi	r27, 0x04	; 4
 ad4:	3c d0       	rcall	.+120    	; 0xb4e <__ultoa_invert+0x9c>
 ad6:	67 0f       	add	r22, r23
 ad8:	78 1f       	adc	r23, r24
 ada:	89 1f       	adc	r24, r25
 adc:	9a 1f       	adc	r25, r26
 ade:	a1 1d       	adc	r26, r1
 ae0:	68 0f       	add	r22, r24
 ae2:	79 1f       	adc	r23, r25
 ae4:	8a 1f       	adc	r24, r26
 ae6:	91 1d       	adc	r25, r1
 ae8:	a1 1d       	adc	r26, r1
 aea:	6a 0f       	add	r22, r26
 aec:	71 1d       	adc	r23, r1
 aee:	81 1d       	adc	r24, r1
 af0:	91 1d       	adc	r25, r1
 af2:	a1 1d       	adc	r26, r1
 af4:	20 d0       	rcall	.+64     	; 0xb36 <__ultoa_invert+0x84>
 af6:	09 f4       	brne	.+2      	; 0xafa <__ultoa_invert+0x48>
 af8:	68 94       	set
 afa:	3f 91       	pop	r19
 afc:	2a e0       	ldi	r18, 0x0A	; 10
 afe:	26 9f       	mul	r18, r22
 b00:	11 24       	eor	r1, r1
 b02:	30 19       	sub	r19, r0
 b04:	30 5d       	subi	r19, 0xD0	; 208
 b06:	31 93       	st	Z+, r19
 b08:	de f6       	brtc	.-74     	; 0xac0 <__ultoa_invert+0xe>
 b0a:	cf 01       	movw	r24, r30
 b0c:	08 95       	ret
 b0e:	46 2f       	mov	r20, r22
 b10:	47 70       	andi	r20, 0x07	; 7
 b12:	40 5d       	subi	r20, 0xD0	; 208
 b14:	41 93       	st	Z+, r20
 b16:	b3 e0       	ldi	r27, 0x03	; 3
 b18:	0f d0       	rcall	.+30     	; 0xb38 <__ultoa_invert+0x86>
 b1a:	c9 f7       	brne	.-14     	; 0xb0e <__ultoa_invert+0x5c>
 b1c:	f6 cf       	rjmp	.-20     	; 0xb0a <__ultoa_invert+0x58>
 b1e:	46 2f       	mov	r20, r22
 b20:	4f 70       	andi	r20, 0x0F	; 15
 b22:	40 5d       	subi	r20, 0xD0	; 208
 b24:	4a 33       	cpi	r20, 0x3A	; 58
 b26:	18 f0       	brcs	.+6      	; 0xb2e <__ultoa_invert+0x7c>
 b28:	49 5d       	subi	r20, 0xD9	; 217
 b2a:	31 fd       	sbrc	r19, 1
 b2c:	40 52       	subi	r20, 0x20	; 32
 b2e:	41 93       	st	Z+, r20
 b30:	02 d0       	rcall	.+4      	; 0xb36 <__ultoa_invert+0x84>
 b32:	a9 f7       	brne	.-22     	; 0xb1e <__ultoa_invert+0x6c>
 b34:	ea cf       	rjmp	.-44     	; 0xb0a <__ultoa_invert+0x58>
 b36:	b4 e0       	ldi	r27, 0x04	; 4
 b38:	a6 95       	lsr	r26
 b3a:	97 95       	ror	r25
 b3c:	87 95       	ror	r24
 b3e:	77 95       	ror	r23
 b40:	67 95       	ror	r22
 b42:	ba 95       	dec	r27
 b44:	c9 f7       	brne	.-14     	; 0xb38 <__ultoa_invert+0x86>
 b46:	00 97       	sbiw	r24, 0x00	; 0
 b48:	61 05       	cpc	r22, r1
 b4a:	71 05       	cpc	r23, r1
 b4c:	08 95       	ret
 b4e:	9b 01       	movw	r18, r22
 b50:	ac 01       	movw	r20, r24
 b52:	0a 2e       	mov	r0, r26
 b54:	06 94       	lsr	r0
 b56:	57 95       	ror	r21
 b58:	47 95       	ror	r20
 b5a:	37 95       	ror	r19
 b5c:	27 95       	ror	r18
 b5e:	ba 95       	dec	r27
 b60:	c9 f7       	brne	.-14     	; 0xb54 <__ultoa_invert+0xa2>
 b62:	62 0f       	add	r22, r18
 b64:	73 1f       	adc	r23, r19
 b66:	84 1f       	adc	r24, r20
 b68:	95 1f       	adc	r25, r21
 b6a:	a0 1d       	adc	r26, r0
 b6c:	08 95       	ret

00000b6e <__prologue_saves__>:
 b6e:	2f 92       	push	r2
 b70:	3f 92       	push	r3
 b72:	4f 92       	push	r4
 b74:	5f 92       	push	r5
 b76:	6f 92       	push	r6
 b78:	7f 92       	push	r7
 b7a:	8f 92       	push	r8
 b7c:	9f 92       	push	r9
 b7e:	af 92       	push	r10
 b80:	bf 92       	push	r11
 b82:	cf 92       	push	r12
 b84:	df 92       	push	r13
 b86:	ef 92       	push	r14
 b88:	ff 92       	push	r15
 b8a:	0f 93       	push	r16
 b8c:	1f 93       	push	r17
 b8e:	cf 93       	push	r28
 b90:	df 93       	push	r29
 b92:	cd b7       	in	r28, 0x3d	; 61
 b94:	de b7       	in	r29, 0x3e	; 62
 b96:	ca 1b       	sub	r28, r26
 b98:	db 0b       	sbc	r29, r27
 b9a:	0f b6       	in	r0, 0x3f	; 63
 b9c:	f8 94       	cli
 b9e:	de bf       	out	0x3e, r29	; 62
 ba0:	0f be       	out	0x3f, r0	; 63
 ba2:	cd bf       	out	0x3d, r28	; 61
 ba4:	09 94       	ijmp

00000ba6 <__epilogue_restores__>:
 ba6:	2a 88       	ldd	r2, Y+18	; 0x12
 ba8:	39 88       	ldd	r3, Y+17	; 0x11
 baa:	48 88       	ldd	r4, Y+16	; 0x10
 bac:	5f 84       	ldd	r5, Y+15	; 0x0f
 bae:	6e 84       	ldd	r6, Y+14	; 0x0e
 bb0:	7d 84       	ldd	r7, Y+13	; 0x0d
 bb2:	8c 84       	ldd	r8, Y+12	; 0x0c
 bb4:	9b 84       	ldd	r9, Y+11	; 0x0b
 bb6:	aa 84       	ldd	r10, Y+10	; 0x0a
 bb8:	b9 84       	ldd	r11, Y+9	; 0x09
 bba:	c8 84       	ldd	r12, Y+8	; 0x08
 bbc:	df 80       	ldd	r13, Y+7	; 0x07
 bbe:	ee 80       	ldd	r14, Y+6	; 0x06
 bc0:	fd 80       	ldd	r15, Y+5	; 0x05
 bc2:	0c 81       	ldd	r16, Y+4	; 0x04
 bc4:	1b 81       	ldd	r17, Y+3	; 0x03
 bc6:	aa 81       	ldd	r26, Y+2	; 0x02
 bc8:	b9 81       	ldd	r27, Y+1	; 0x01
 bca:	ce 0f       	add	r28, r30
 bcc:	d1 1d       	adc	r29, r1
 bce:	0f b6       	in	r0, 0x3f	; 63
 bd0:	f8 94       	cli
 bd2:	de bf       	out	0x3e, r29	; 62
 bd4:	0f be       	out	0x3f, r0	; 63
 bd6:	cd bf       	out	0x3d, r28	; 61
 bd8:	ed 01       	movw	r28, r26
 bda:	08 95       	ret

00000bdc <_exit>:
 bdc:	f8 94       	cli

00000bde <__stop_program>:
 bde:	ff cf       	rjmp	.-2      	; 0xbde <__stop_program>
