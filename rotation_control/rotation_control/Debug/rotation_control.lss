
rotation_control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  00000c90  00000d24  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c90  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000089  00800116  00800116  00000d3a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d3a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  00000dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bda  00000000  00000000  00000e88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000953  00000000  00000000  00001a62  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000679  00000000  00000000  000023b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  00002a30  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004df  00000000  00000000  00002bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000313  00000000  00000000  000030cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  000033e2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 6a 01 	jmp	0x2d4	; 0x2d4 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e9       	ldi	r30, 0x90	; 144
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 31       	cpi	r26, 0x16	; 22
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e1       	ldi	r26, 0x16	; 22
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	af 39       	cpi	r26, 0x9F	; 159
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 f7 00 	call	0x1ee	; 0x1ee <main>
  9e:	0c 94 46 06 	jmp	0xc8c	; 0xc8c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_1>:
	
	return 0;
}

//INT0 Interrupt
ISR (INT0_vect){
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	cf 92       	push	r12
  b2:	df 92       	push	r13
  b4:	ef 92       	push	r14
  b6:	ff 92       	push	r15
  b8:	2f 93       	push	r18
  ba:	3f 93       	push	r19
  bc:	4f 93       	push	r20
  be:	5f 93       	push	r21
  c0:	6f 93       	push	r22
  c2:	7f 93       	push	r23
  c4:	8f 93       	push	r24
  c6:	9f 93       	push	r25
  c8:	af 93       	push	r26
  ca:	bf 93       	push	r27
  cc:	ef 93       	push	r30
  ce:	ff 93       	push	r31
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
  d0:	f8 94       	cli
	ATOMIC_BLOCK(ATOMIC_FORCEON){
		pulse_rpm_count++;
  d2:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <pulse_rpm_count>
  d6:	8f 5f       	subi	r24, 0xFF	; 255
		if(pulse_rpm_count>=7){
  d8:	87 30       	cpi	r24, 0x07	; 7
  da:	18 f4       	brcc	.+6      	; 0xe2 <__vector_1+0x3c>
}

//INT0 Interrupt
ISR (INT0_vect){
	ATOMIC_BLOCK(ATOMIC_FORCEON){
		pulse_rpm_count++;
  dc:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <pulse_rpm_count>
  e0:	36 c0       	rjmp	.+108    	; 0x14e <__vector_1+0xa8>
		if(pulse_rpm_count>=7){
			pulse_rpm_count=0;
  e2:	10 92 8c 01 	sts	0x018C, r1	; 0x80018c <pulse_rpm_count>
			current_rpm_millis = millis();
  e6:	0e 94 5f 01 	call	0x2be	; 0x2be <millis>
  ea:	6b 01       	movw	r12, r22
  ec:	7c 01       	movw	r14, r24
  ee:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <current_rpm_millis>
  f2:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <current_rpm_millis+0x1>
  f6:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <current_rpm_millis+0x2>
  fa:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <current_rpm_millis+0x3>
			rpm = (float)60000/(current_rpm_millis - previous_rpm_millis);
  fe:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <previous_rpm_millis>
 102:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <previous_rpm_millis+0x1>
 106:	a0 91 82 01 	lds	r26, 0x0182	; 0x800182 <previous_rpm_millis+0x2>
 10a:	b0 91 83 01 	lds	r27, 0x0183	; 0x800183 <previous_rpm_millis+0x3>
 10e:	a7 01       	movw	r20, r14
 110:	96 01       	movw	r18, r12
 112:	28 1b       	sub	r18, r24
 114:	39 0b       	sbc	r19, r25
 116:	4a 0b       	sbc	r20, r26
 118:	5b 0b       	sbc	r21, r27
 11a:	ca 01       	movw	r24, r20
 11c:	b9 01       	movw	r22, r18
 11e:	0e 94 ce 02 	call	0x59c	; 0x59c <__floatunsisf>
 122:	9b 01       	movw	r18, r22
 124:	ac 01       	movw	r20, r24
 126:	60 e0       	ldi	r22, 0x00	; 0
 128:	70 e6       	ldi	r23, 0x60	; 96
 12a:	8a e6       	ldi	r24, 0x6A	; 106
 12c:	97 e4       	ldi	r25, 0x47	; 71
 12e:	0e 94 2d 02 	call	0x45a	; 0x45a <__divsf3>
 132:	0e 94 9f 02 	call	0x53e	; 0x53e <__fixunssfsi>
 136:	70 93 8e 01 	sts	0x018E, r23	; 0x80018e <rpm+0x1>
 13a:	60 93 8d 01 	sts	0x018D, r22	; 0x80018d <rpm>
			previous_rpm_millis = current_rpm_millis;
 13e:	c0 92 80 01 	sts	0x0180, r12	; 0x800180 <previous_rpm_millis>
 142:	d0 92 81 01 	sts	0x0181, r13	; 0x800181 <previous_rpm_millis+0x1>
 146:	e0 92 82 01 	sts	0x0182, r14	; 0x800182 <previous_rpm_millis+0x2>
 14a:	f0 92 83 01 	sts	0x0183, r15	; 0x800183 <previous_rpm_millis+0x3>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
 14e:	78 94       	sei
		}
	}
}
 150:	ff 91       	pop	r31
 152:	ef 91       	pop	r30
 154:	bf 91       	pop	r27
 156:	af 91       	pop	r26
 158:	9f 91       	pop	r25
 15a:	8f 91       	pop	r24
 15c:	7f 91       	pop	r23
 15e:	6f 91       	pop	r22
 160:	5f 91       	pop	r21
 162:	4f 91       	pop	r20
 164:	3f 91       	pop	r19
 166:	2f 91       	pop	r18
 168:	ff 90       	pop	r15
 16a:	ef 90       	pop	r14
 16c:	df 90       	pop	r13
 16e:	cf 90       	pop	r12
 170:	0f 90       	pop	r0
 172:	0f be       	out	0x3f, r0	; 63
 174:	0f 90       	pop	r0
 176:	1f 90       	pop	r1
 178:	18 95       	reti

0000017a <init>:

void init(void){
	//Port configuration
	//1 -> output, 0 -> input
	DDRB |= 0b00100010;		//Set PB1 (arduino digital pin 9) and PB5 (arduino digital pin 13) as output
 17a:	84 b1       	in	r24, 0x04	; 4
 17c:	82 62       	ori	r24, 0x22	; 34
 17e:	84 b9       	out	0x04, r24	; 4
	DDRD &= ~(1 << DDD2);     // Set PD2/INT0 (arduino digital pin 2) as input
 180:	52 98       	cbi	0x0a, 2	; 10
	
	USART_Init();	//Start USART
 182:	0e 94 0a 02 	call	0x414	; 0x414 <USART_Init>
	
	//Interrupt Config
	EICRA |= 0b00000011;    //The rising edge of INT0 generates an interrupt request (ISC00, ISC01)
 186:	e9 e6       	ldi	r30, 0x69	; 105
 188:	f0 e0       	ldi	r31, 0x00	; 0
 18a:	80 81       	ld	r24, Z
 18c:	83 60       	ori	r24, 0x03	; 3
 18e:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0);     //Turns on INT0
 190:	e8 9a       	sbi	0x1d, 0	; 29
	ticks_init();
 192:	0e 94 51 01 	call	0x2a2	; 0x2a2 <ticks_init>
	sei();          // turn on interrupts
 196:	78 94       	sei
	
	USART_StrTx("WELCOME\r\n");
 198:	82 e0       	ldi	r24, 0x02	; 2
 19a:	91 e0       	ldi	r25, 0x01	; 1
 19c:	0e 94 1e 02 	call	0x43c	; 0x43c <USART_StrTx>
 1a0:	08 95       	ret

000001a2 <linear_control>:
}

void linear_control(void){
	if(rpm < rpm_set_point-10){
 1a2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1a6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1aa:	20 91 8d 01 	lds	r18, 0x018D	; 0x80018d <rpm>
 1ae:	30 91 8e 01 	lds	r19, 0x018E	; 0x80018e <rpm+0x1>
 1b2:	ac 01       	movw	r20, r24
 1b4:	4a 50       	subi	r20, 0x0A	; 10
 1b6:	51 09       	sbc	r21, r1
 1b8:	24 17       	cp	r18, r20
 1ba:	35 07       	cpc	r19, r21
 1bc:	40 f4       	brcc	.+16     	; 0x1ce <linear_control+0x2c>
		if(pwm<100){
 1be:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 1c2:	84 36       	cpi	r24, 0x64	; 100
 1c4:	78 f4       	brcc	.+30     	; 0x1e4 <linear_control+0x42>
			pwm++;
 1c6:	8f 5f       	subi	r24, 0xFF	; 255
 1c8:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
 1cc:	0b c0       	rjmp	.+22     	; 0x1e4 <linear_control+0x42>
		}
	}
	else if(rpm > rpm_set_point+10){
 1ce:	0a 96       	adiw	r24, 0x0a	; 10
 1d0:	82 17       	cp	r24, r18
 1d2:	93 07       	cpc	r25, r19
 1d4:	38 f4       	brcc	.+14     	; 0x1e4 <linear_control+0x42>
		if(pwm>0){
 1d6:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 1da:	88 23       	and	r24, r24
 1dc:	19 f0       	breq	.+6      	; 0x1e4 <linear_control+0x42>
			pwm--;
 1de:	81 50       	subi	r24, 0x01	; 1
 1e0:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__data_end>
		}
	}
	set_duty_PWM(pwm);
 1e4:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__data_end>
 1e8:	0e 94 fe 01 	call	0x3fc	; 0x3fc <set_duty_PWM>
 1ec:	08 95       	ret

000001ee <main>:
void init(void);
void linear_control(void);


int main(void){
	init();
 1ee:	0e 94 bd 00 	call	0x17a	; 0x17a <init>
	
    while ( TRUE ) {
		current_blink_millis = millis();
		if(current_blink_millis - previous_blink_millis >= blink_interval){
			led_builtin_status = !led_builtin_status;
 1f2:	bb 24       	eor	r11, r11
 1f4:	b3 94       	inc	r11
 1f6:	a1 2c       	mov	r10, r1
			else{
				Clr_bit(PORTB, 5);
			}
			previous_blink_millis = current_blink_millis;
			linear_control();
			sprintf(string_buffer, "%u RPM \r\n", rpm);
 1f8:	0c e0       	ldi	r16, 0x0C	; 12
 1fa:	11 e0       	ldi	r17, 0x01	; 1
 1fc:	c8 e1       	ldi	r28, 0x18	; 24
 1fe:	d1 e0       	ldi	r29, 0x01	; 1

int main(void){
	init();
	
    while ( TRUE ) {
		current_blink_millis = millis();
 200:	0e 94 5f 01 	call	0x2be	; 0x2be <millis>
 204:	60 93 84 01 	sts	0x0184, r22	; 0x800184 <current_blink_millis>
 208:	70 93 85 01 	sts	0x0185, r23	; 0x800185 <current_blink_millis+0x1>
 20c:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <current_blink_millis+0x2>
 210:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <current_blink_millis+0x3>
		if(current_blink_millis - previous_blink_millis >= blink_interval){
 214:	c0 90 88 01 	lds	r12, 0x0188	; 0x800188 <previous_blink_millis>
 218:	d0 90 89 01 	lds	r13, 0x0189	; 0x800189 <previous_blink_millis+0x1>
 21c:	e0 90 8a 01 	lds	r14, 0x018A	; 0x80018a <previous_blink_millis+0x2>
 220:	f0 90 8b 01 	lds	r15, 0x018B	; 0x80018b <previous_blink_millis+0x3>
 224:	dc 01       	movw	r26, r24
 226:	cb 01       	movw	r24, r22
 228:	8c 19       	sub	r24, r12
 22a:	9d 09       	sbc	r25, r13
 22c:	ae 09       	sbc	r26, r14
 22e:	bf 09       	sbc	r27, r15
 230:	8a 3f       	cpi	r24, 0xFA	; 250
 232:	91 05       	cpc	r25, r1
 234:	a1 05       	cpc	r26, r1
 236:	b1 05       	cpc	r27, r1
 238:	18 f3       	brcs	.-58     	; 0x200 <main+0x12>
			led_builtin_status = !led_builtin_status;
 23a:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <led_builtin_status>
 23e:	9b 2d       	mov	r25, r11
 240:	81 11       	cpse	r24, r1
 242:	9a 2d       	mov	r25, r10
 244:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <led_builtin_status>
			if(led_builtin_status){
 248:	81 11       	cpse	r24, r1
 24a:	02 c0       	rjmp	.+4      	; 0x250 <main+0x62>
				Set_bit(PORTB, 5);
 24c:	2d 9a       	sbi	0x05, 5	; 5
 24e:	01 c0       	rjmp	.+2      	; 0x252 <main+0x64>
			}
			else{
				Clr_bit(PORTB, 5);
 250:	2d 98       	cbi	0x05, 5	; 5
			}
			previous_blink_millis = current_blink_millis;
 252:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <current_blink_millis>
 256:	90 91 85 01 	lds	r25, 0x0185	; 0x800185 <current_blink_millis+0x1>
 25a:	a0 91 86 01 	lds	r26, 0x0186	; 0x800186 <current_blink_millis+0x2>
 25e:	b0 91 87 01 	lds	r27, 0x0187	; 0x800187 <current_blink_millis+0x3>
 262:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <previous_blink_millis>
 266:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <previous_blink_millis+0x1>
 26a:	a0 93 8a 01 	sts	0x018A, r26	; 0x80018a <previous_blink_millis+0x2>
 26e:	b0 93 8b 01 	sts	0x018B, r27	; 0x80018b <previous_blink_millis+0x3>
			linear_control();
 272:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <linear_control>
			sprintf(string_buffer, "%u RPM \r\n", rpm);
 276:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <rpm+0x1>
 27a:	8f 93       	push	r24
 27c:	80 91 8d 01 	lds	r24, 0x018D	; 0x80018d <rpm>
 280:	8f 93       	push	r24
 282:	1f 93       	push	r17
 284:	0f 93       	push	r16
 286:	df 93       	push	r29
 288:	cf 93       	push	r28
 28a:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <sprintf>
			USART_StrTx(string_buffer);
 28e:	ce 01       	movw	r24, r28
 290:	0e 94 1e 02 	call	0x43c	; 0x43c <USART_StrTx>
 294:	0f 90       	pop	r0
 296:	0f 90       	pop	r0
 298:	0f 90       	pop	r0
 29a:	0f 90       	pop	r0
 29c:	0f 90       	pop	r0
 29e:	0f 90       	pop	r0
 2a0:	af cf       	rjmp	.-162    	; 0x200 <main+0x12>

000002a2 <ticks_init>:
*
*	Return:			None
****************************************************************************************************************************************************************/
void ticks_init( void )
{
	TCCR0A |= (1 << WGM01);				// Set the Timer0 Mode to CTC
 2a2:	84 b5       	in	r24, 0x24	; 36
 2a4:	82 60       	ori	r24, 0x02	; 2
 2a6:	84 bd       	out	0x24, r24	; 36
	OCR0A = ((F_CPU*0.0001)/8)-1;		// OCRn =  [ (clock_speed / Prescaler_value) * Desired_time_in_Seconds ] - 1 =  [ (16000000 / 8) * 100us ] - 1 = 199
 2a8:	87 ec       	ldi	r24, 0xC7	; 199
 2aa:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1 << OCIE0A);			//Set the ISR COMPA vect
 2ac:	ee e6       	ldi	r30, 0x6E	; 110
 2ae:	f0 e0       	ldi	r31, 0x00	; 0
 2b0:	80 81       	ld	r24, Z
 2b2:	82 60       	ori	r24, 0x02	; 2
 2b4:	80 83       	st	Z, r24
	TCCR0B |= (1 << CS01);	// set prescaler to 8 and start the timer
 2b6:	85 b5       	in	r24, 0x25	; 37
 2b8:	82 60       	ori	r24, 0x02	; 2
 2ba:	85 bd       	out	0x25, r24	; 37
 2bc:	08 95       	ret

000002be <millis>:
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
 2be:	f8 94       	cli
unsigned long int millis(void)
{
	unsigned long int tick_1ms_temp;
	
	ATOMIC_BLOCK(ATOMIC_FORCEON){
		tick_1ms_temp = tick_1ms;
 2c0:	60 91 9b 01 	lds	r22, 0x019B	; 0x80019b <tick_1ms>
 2c4:	70 91 9c 01 	lds	r23, 0x019C	; 0x80019c <tick_1ms+0x1>
 2c8:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <tick_1ms+0x2>
 2cc:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <tick_1ms+0x3>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
 2d0:	78 94       	sei
	}
	
	return tick_1ms_temp;
}
 2d2:	08 95       	ret

000002d4 <__vector_14>:
*	TIMER1 Compare Output A Interrupt Service Routine
*	Increment ms_Counter at a rate of 1 ms
*
******************************************************************************************************************************************************************/
ISR( TIMER0_COMPA_vect )
{
 2d4:	1f 92       	push	r1
 2d6:	0f 92       	push	r0
 2d8:	0f b6       	in	r0, 0x3f	; 63
 2da:	0f 92       	push	r0
 2dc:	11 24       	eor	r1, r1
 2de:	4f 93       	push	r20
 2e0:	5f 93       	push	r21
 2e2:	6f 93       	push	r22
 2e4:	7f 93       	push	r23
 2e6:	8f 93       	push	r24
 2e8:	9f 93       	push	r25
 2ea:	af 93       	push	r26
 2ec:	bf 93       	push	r27
	tick++;
 2ee:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <tick>
 2f2:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <tick+0x1>
 2f6:	a0 91 99 01 	lds	r26, 0x0199	; 0x800199 <tick+0x2>
 2fa:	b0 91 9a 01 	lds	r27, 0x019A	; 0x80019a <tick+0x3>
 2fe:	01 96       	adiw	r24, 0x01	; 1
 300:	a1 1d       	adc	r26, r1
 302:	b1 1d       	adc	r27, r1
 304:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <tick>
 308:	90 93 98 01 	sts	0x0198, r25	; 0x800198 <tick+0x1>
 30c:	a0 93 99 01 	sts	0x0199, r26	; 0x800199 <tick+0x2>
 310:	b0 93 9a 01 	sts	0x019A, r27	; 0x80019a <tick+0x3>
	if(tick >= 10){
 314:	80 91 97 01 	lds	r24, 0x0197	; 0x800197 <tick>
 318:	90 91 98 01 	lds	r25, 0x0198	; 0x800198 <tick+0x1>
 31c:	a0 91 99 01 	lds	r26, 0x0199	; 0x800199 <tick+0x2>
 320:	b0 91 9a 01 	lds	r27, 0x019A	; 0x80019a <tick+0x3>
 324:	0a 97       	sbiw	r24, 0x0a	; 10
 326:	a1 05       	cpc	r26, r1
 328:	b1 05       	cpc	r27, r1
 32a:	d8 f0       	brcs	.+54     	; 0x362 <__vector_14+0x8e>
		tick=0;
 32c:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <tick>
 330:	10 92 98 01 	sts	0x0198, r1	; 0x800198 <tick+0x1>
 334:	10 92 99 01 	sts	0x0199, r1	; 0x800199 <tick+0x2>
 338:	10 92 9a 01 	sts	0x019A, r1	; 0x80019a <tick+0x3>
		tick_1ms++;
 33c:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <tick_1ms>
 340:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <tick_1ms+0x1>
 344:	a0 91 9d 01 	lds	r26, 0x019D	; 0x80019d <tick_1ms+0x2>
 348:	b0 91 9e 01 	lds	r27, 0x019E	; 0x80019e <tick_1ms+0x3>
 34c:	01 96       	adiw	r24, 0x01	; 1
 34e:	a1 1d       	adc	r26, r1
 350:	b1 1d       	adc	r27, r1
 352:	80 93 9b 01 	sts	0x019B, r24	; 0x80019b <tick_1ms>
 356:	90 93 9c 01 	sts	0x019C, r25	; 0x80019c <tick_1ms+0x1>
 35a:	a0 93 9d 01 	sts	0x019D, r26	; 0x80019d <tick_1ms+0x2>
 35e:	b0 93 9e 01 	sts	0x019E, r27	; 0x80019e <tick_1ms+0x3>
	}
	
	pwm_tick++;
 362:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <pwm_tick>
 366:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <pwm_tick+0x1>
 36a:	a0 91 95 01 	lds	r26, 0x0195	; 0x800195 <pwm_tick+0x2>
 36e:	b0 91 96 01 	lds	r27, 0x0196	; 0x800196 <pwm_tick+0x3>
 372:	01 96       	adiw	r24, 0x01	; 1
 374:	a1 1d       	adc	r26, r1
 376:	b1 1d       	adc	r27, r1
 378:	80 93 93 01 	sts	0x0193, r24	; 0x800193 <pwm_tick>
 37c:	90 93 94 01 	sts	0x0194, r25	; 0x800194 <pwm_tick+0x1>
 380:	a0 93 95 01 	sts	0x0195, r26	; 0x800195 <pwm_tick+0x2>
 384:	b0 93 96 01 	sts	0x0196, r27	; 0x800196 <pwm_tick+0x3>
	if(pwm_tick>=pwm_period){
 388:	80 91 93 01 	lds	r24, 0x0193	; 0x800193 <pwm_tick>
 38c:	90 91 94 01 	lds	r25, 0x0194	; 0x800194 <pwm_tick+0x1>
 390:	a0 91 95 01 	lds	r26, 0x0195	; 0x800195 <pwm_tick+0x2>
 394:	b0 91 96 01 	lds	r27, 0x0196	; 0x800196 <pwm_tick+0x3>
 398:	84 36       	cpi	r24, 0x64	; 100
 39a:	91 05       	cpc	r25, r1
 39c:	a1 05       	cpc	r26, r1
 39e:	b1 05       	cpc	r27, r1
 3a0:	50 f0       	brcs	.+20     	; 0x3b6 <__vector_14+0xe2>
		pwm_tick = 0;
 3a2:	10 92 93 01 	sts	0x0193, r1	; 0x800193 <pwm_tick>
 3a6:	10 92 94 01 	sts	0x0194, r1	; 0x800194 <pwm_tick+0x1>
 3aa:	10 92 95 01 	sts	0x0195, r1	; 0x800195 <pwm_tick+0x2>
 3ae:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <pwm_tick+0x3>
		PORTB |= 0b00000010;  // Set PB1 (arduino digital pin 9) to 1
 3b2:	29 9a       	sbi	0x05, 1	; 5
 3b4:	16 c0       	rjmp	.+44     	; 0x3e2 <__vector_14+0x10e>
	}
	else if(pwm_tick>=pwm_duty){
 3b6:	40 91 93 01 	lds	r20, 0x0193	; 0x800193 <pwm_tick>
 3ba:	50 91 94 01 	lds	r21, 0x0194	; 0x800194 <pwm_tick+0x1>
 3be:	60 91 95 01 	lds	r22, 0x0195	; 0x800195 <pwm_tick+0x2>
 3c2:	70 91 96 01 	lds	r23, 0x0196	; 0x800196 <pwm_tick+0x3>
 3c6:	80 91 8f 01 	lds	r24, 0x018F	; 0x80018f <pwm_duty>
 3ca:	90 91 90 01 	lds	r25, 0x0190	; 0x800190 <pwm_duty+0x1>
 3ce:	a0 91 91 01 	lds	r26, 0x0191	; 0x800191 <pwm_duty+0x2>
 3d2:	b0 91 92 01 	lds	r27, 0x0192	; 0x800192 <pwm_duty+0x3>
 3d6:	48 17       	cp	r20, r24
 3d8:	59 07       	cpc	r21, r25
 3da:	6a 07       	cpc	r22, r26
 3dc:	7b 07       	cpc	r23, r27
 3de:	08 f0       	brcs	.+2      	; 0x3e2 <__vector_14+0x10e>
			PORTB &= 0b11111101; // Set PB1 (arduino digital pin 9) to 0
 3e0:	29 98       	cbi	0x05, 1	; 5
	}
}
 3e2:	bf 91       	pop	r27
 3e4:	af 91       	pop	r26
 3e6:	9f 91       	pop	r25
 3e8:	8f 91       	pop	r24
 3ea:	7f 91       	pop	r23
 3ec:	6f 91       	pop	r22
 3ee:	5f 91       	pop	r21
 3f0:	4f 91       	pop	r20
 3f2:	0f 90       	pop	r0
 3f4:	0f be       	out	0x3f, r0	; 63
 3f6:	0f 90       	pop	r0
 3f8:	1f 90       	pop	r1
 3fa:	18 95       	reti

000003fc <set_duty_PWM>:

void set_duty_PWM(unsigned char pwm_duty_temp){
	pwm_duty = pwm_duty_temp;
 3fc:	90 e0       	ldi	r25, 0x00	; 0
 3fe:	a0 e0       	ldi	r26, 0x00	; 0
 400:	b0 e0       	ldi	r27, 0x00	; 0
 402:	80 93 8f 01 	sts	0x018F, r24	; 0x80018f <pwm_duty>
 406:	90 93 90 01 	sts	0x0190, r25	; 0x800190 <pwm_duty+0x1>
 40a:	a0 93 91 01 	sts	0x0191, r26	; 0x800191 <pwm_duty+0x2>
 40e:	b0 93 92 01 	sts	0x0192, r27	; 0x800192 <pwm_duty+0x3>
 412:	08 95       	ret

00000414 <USART_Init>:
//-------------------------------------------------------------------------------------------------------
unsigned char USART_Receive()
{
	while(!(UCSR0A & (1<<RXC0)));				// Espera o dado ser recebido
	return UDR0;
}
 414:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 418:	87 e6       	ldi	r24, 0x67	; 103
 41a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 41e:	88 e1       	ldi	r24, 0x18	; 24
 420:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 424:	86 e0       	ldi	r24, 0x06	; 6
 426:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 42a:	08 95       	ret

0000042c <USART_Transmit>:
 42c:	e0 ec       	ldi	r30, 0xC0	; 192
 42e:	f0 e0       	ldi	r31, 0x00	; 0
 430:	90 81       	ld	r25, Z
 432:	95 ff       	sbrs	r25, 5
 434:	fd cf       	rjmp	.-6      	; 0x430 <USART_Transmit+0x4>
 436:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 43a:	08 95       	ret

0000043c <USART_StrTx>:

//-------------------------------------------------------------------------------------------------------
void USART_StrTx(const char* ptr)
{
 43c:	cf 93       	push	r28
 43e:	df 93       	push	r29
 440:	ec 01       	movw	r28, r24
	while(*ptr != '\0')
 442:	88 81       	ld	r24, Y
 444:	88 23       	and	r24, r24
 446:	31 f0       	breq	.+12     	; 0x454 <USART_StrTx+0x18>
 448:	21 96       	adiw	r28, 0x01	; 1
	{
		USART_Transmit(*ptr);
 44a:	0e 94 16 02 	call	0x42c	; 0x42c <USART_Transmit>
}

//-------------------------------------------------------------------------------------------------------
void USART_StrTx(const char* ptr)
{
	while(*ptr != '\0')
 44e:	89 91       	ld	r24, Y+
 450:	81 11       	cpse	r24, r1
 452:	fb cf       	rjmp	.-10     	; 0x44a <USART_StrTx+0xe>
	{
		USART_Transmit(*ptr);
		ptr++;
	}
}
 454:	df 91       	pop	r29
 456:	cf 91       	pop	r28
 458:	08 95       	ret

0000045a <__divsf3>:
 45a:	0e 94 41 02 	call	0x482	; 0x482 <__divsf3x>
 45e:	0c 94 22 03 	jmp	0x644	; 0x644 <__fp_round>
 462:	0e 94 1b 03 	call	0x636	; 0x636 <__fp_pscB>
 466:	58 f0       	brcs	.+22     	; 0x47e <__divsf3+0x24>
 468:	0e 94 14 03 	call	0x628	; 0x628 <__fp_pscA>
 46c:	40 f0       	brcs	.+16     	; 0x47e <__divsf3+0x24>
 46e:	29 f4       	brne	.+10     	; 0x47a <__divsf3+0x20>
 470:	5f 3f       	cpi	r21, 0xFF	; 255
 472:	29 f0       	breq	.+10     	; 0x47e <__divsf3+0x24>
 474:	0c 94 0b 03 	jmp	0x616	; 0x616 <__fp_inf>
 478:	51 11       	cpse	r21, r1
 47a:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__fp_szero>
 47e:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_nan>

00000482 <__divsf3x>:
 482:	0e 94 33 03 	call	0x666	; 0x666 <__fp_split3>
 486:	68 f3       	brcs	.-38     	; 0x462 <__divsf3+0x8>

00000488 <__divsf3_pse>:
 488:	99 23       	and	r25, r25
 48a:	b1 f3       	breq	.-20     	; 0x478 <__divsf3+0x1e>
 48c:	55 23       	and	r21, r21
 48e:	91 f3       	breq	.-28     	; 0x474 <__divsf3+0x1a>
 490:	95 1b       	sub	r25, r21
 492:	55 0b       	sbc	r21, r21
 494:	bb 27       	eor	r27, r27
 496:	aa 27       	eor	r26, r26
 498:	62 17       	cp	r22, r18
 49a:	73 07       	cpc	r23, r19
 49c:	84 07       	cpc	r24, r20
 49e:	38 f0       	brcs	.+14     	; 0x4ae <__divsf3_pse+0x26>
 4a0:	9f 5f       	subi	r25, 0xFF	; 255
 4a2:	5f 4f       	sbci	r21, 0xFF	; 255
 4a4:	22 0f       	add	r18, r18
 4a6:	33 1f       	adc	r19, r19
 4a8:	44 1f       	adc	r20, r20
 4aa:	aa 1f       	adc	r26, r26
 4ac:	a9 f3       	breq	.-22     	; 0x498 <__divsf3_pse+0x10>
 4ae:	35 d0       	rcall	.+106    	; 0x51a <__divsf3_pse+0x92>
 4b0:	0e 2e       	mov	r0, r30
 4b2:	3a f0       	brmi	.+14     	; 0x4c2 <__divsf3_pse+0x3a>
 4b4:	e0 e8       	ldi	r30, 0x80	; 128
 4b6:	32 d0       	rcall	.+100    	; 0x51c <__divsf3_pse+0x94>
 4b8:	91 50       	subi	r25, 0x01	; 1
 4ba:	50 40       	sbci	r21, 0x00	; 0
 4bc:	e6 95       	lsr	r30
 4be:	00 1c       	adc	r0, r0
 4c0:	ca f7       	brpl	.-14     	; 0x4b4 <__divsf3_pse+0x2c>
 4c2:	2b d0       	rcall	.+86     	; 0x51a <__divsf3_pse+0x92>
 4c4:	fe 2f       	mov	r31, r30
 4c6:	29 d0       	rcall	.+82     	; 0x51a <__divsf3_pse+0x92>
 4c8:	66 0f       	add	r22, r22
 4ca:	77 1f       	adc	r23, r23
 4cc:	88 1f       	adc	r24, r24
 4ce:	bb 1f       	adc	r27, r27
 4d0:	26 17       	cp	r18, r22
 4d2:	37 07       	cpc	r19, r23
 4d4:	48 07       	cpc	r20, r24
 4d6:	ab 07       	cpc	r26, r27
 4d8:	b0 e8       	ldi	r27, 0x80	; 128
 4da:	09 f0       	breq	.+2      	; 0x4de <__divsf3_pse+0x56>
 4dc:	bb 0b       	sbc	r27, r27
 4de:	80 2d       	mov	r24, r0
 4e0:	bf 01       	movw	r22, r30
 4e2:	ff 27       	eor	r31, r31
 4e4:	93 58       	subi	r25, 0x83	; 131
 4e6:	5f 4f       	sbci	r21, 0xFF	; 255
 4e8:	3a f0       	brmi	.+14     	; 0x4f8 <__divsf3_pse+0x70>
 4ea:	9e 3f       	cpi	r25, 0xFE	; 254
 4ec:	51 05       	cpc	r21, r1
 4ee:	78 f0       	brcs	.+30     	; 0x50e <__divsf3_pse+0x86>
 4f0:	0c 94 0b 03 	jmp	0x616	; 0x616 <__fp_inf>
 4f4:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__fp_szero>
 4f8:	5f 3f       	cpi	r21, 0xFF	; 255
 4fa:	e4 f3       	brlt	.-8      	; 0x4f4 <__divsf3_pse+0x6c>
 4fc:	98 3e       	cpi	r25, 0xE8	; 232
 4fe:	d4 f3       	brlt	.-12     	; 0x4f4 <__divsf3_pse+0x6c>
 500:	86 95       	lsr	r24
 502:	77 95       	ror	r23
 504:	67 95       	ror	r22
 506:	b7 95       	ror	r27
 508:	f7 95       	ror	r31
 50a:	9f 5f       	subi	r25, 0xFF	; 255
 50c:	c9 f7       	brne	.-14     	; 0x500 <__divsf3_pse+0x78>
 50e:	88 0f       	add	r24, r24
 510:	91 1d       	adc	r25, r1
 512:	96 95       	lsr	r25
 514:	87 95       	ror	r24
 516:	97 f9       	bld	r25, 7
 518:	08 95       	ret
 51a:	e1 e0       	ldi	r30, 0x01	; 1
 51c:	66 0f       	add	r22, r22
 51e:	77 1f       	adc	r23, r23
 520:	88 1f       	adc	r24, r24
 522:	bb 1f       	adc	r27, r27
 524:	62 17       	cp	r22, r18
 526:	73 07       	cpc	r23, r19
 528:	84 07       	cpc	r24, r20
 52a:	ba 07       	cpc	r27, r26
 52c:	20 f0       	brcs	.+8      	; 0x536 <__divsf3_pse+0xae>
 52e:	62 1b       	sub	r22, r18
 530:	73 0b       	sbc	r23, r19
 532:	84 0b       	sbc	r24, r20
 534:	ba 0b       	sbc	r27, r26
 536:	ee 1f       	adc	r30, r30
 538:	88 f7       	brcc	.-30     	; 0x51c <__divsf3_pse+0x94>
 53a:	e0 95       	com	r30
 53c:	08 95       	ret

0000053e <__fixunssfsi>:
 53e:	0e 94 3b 03 	call	0x676	; 0x676 <__fp_splitA>
 542:	88 f0       	brcs	.+34     	; 0x566 <__fixunssfsi+0x28>
 544:	9f 57       	subi	r25, 0x7F	; 127
 546:	98 f0       	brcs	.+38     	; 0x56e <__fixunssfsi+0x30>
 548:	b9 2f       	mov	r27, r25
 54a:	99 27       	eor	r25, r25
 54c:	b7 51       	subi	r27, 0x17	; 23
 54e:	b0 f0       	brcs	.+44     	; 0x57c <__fixunssfsi+0x3e>
 550:	e1 f0       	breq	.+56     	; 0x58a <__fixunssfsi+0x4c>
 552:	66 0f       	add	r22, r22
 554:	77 1f       	adc	r23, r23
 556:	88 1f       	adc	r24, r24
 558:	99 1f       	adc	r25, r25
 55a:	1a f0       	brmi	.+6      	; 0x562 <__fixunssfsi+0x24>
 55c:	ba 95       	dec	r27
 55e:	c9 f7       	brne	.-14     	; 0x552 <__fixunssfsi+0x14>
 560:	14 c0       	rjmp	.+40     	; 0x58a <__fixunssfsi+0x4c>
 562:	b1 30       	cpi	r27, 0x01	; 1
 564:	91 f0       	breq	.+36     	; 0x58a <__fixunssfsi+0x4c>
 566:	0e 94 55 03 	call	0x6aa	; 0x6aa <__fp_zero>
 56a:	b1 e0       	ldi	r27, 0x01	; 1
 56c:	08 95       	ret
 56e:	0c 94 55 03 	jmp	0x6aa	; 0x6aa <__fp_zero>
 572:	67 2f       	mov	r22, r23
 574:	78 2f       	mov	r23, r24
 576:	88 27       	eor	r24, r24
 578:	b8 5f       	subi	r27, 0xF8	; 248
 57a:	39 f0       	breq	.+14     	; 0x58a <__fixunssfsi+0x4c>
 57c:	b9 3f       	cpi	r27, 0xF9	; 249
 57e:	cc f3       	brlt	.-14     	; 0x572 <__fixunssfsi+0x34>
 580:	86 95       	lsr	r24
 582:	77 95       	ror	r23
 584:	67 95       	ror	r22
 586:	b3 95       	inc	r27
 588:	d9 f7       	brne	.-10     	; 0x580 <__fixunssfsi+0x42>
 58a:	3e f4       	brtc	.+14     	; 0x59a <__fixunssfsi+0x5c>
 58c:	90 95       	com	r25
 58e:	80 95       	com	r24
 590:	70 95       	com	r23
 592:	61 95       	neg	r22
 594:	7f 4f       	sbci	r23, 0xFF	; 255
 596:	8f 4f       	sbci	r24, 0xFF	; 255
 598:	9f 4f       	sbci	r25, 0xFF	; 255
 59a:	08 95       	ret

0000059c <__floatunsisf>:
 59c:	e8 94       	clt
 59e:	09 c0       	rjmp	.+18     	; 0x5b2 <__floatsisf+0x12>

000005a0 <__floatsisf>:
 5a0:	97 fb       	bst	r25, 7
 5a2:	3e f4       	brtc	.+14     	; 0x5b2 <__floatsisf+0x12>
 5a4:	90 95       	com	r25
 5a6:	80 95       	com	r24
 5a8:	70 95       	com	r23
 5aa:	61 95       	neg	r22
 5ac:	7f 4f       	sbci	r23, 0xFF	; 255
 5ae:	8f 4f       	sbci	r24, 0xFF	; 255
 5b0:	9f 4f       	sbci	r25, 0xFF	; 255
 5b2:	99 23       	and	r25, r25
 5b4:	a9 f0       	breq	.+42     	; 0x5e0 <__floatsisf+0x40>
 5b6:	f9 2f       	mov	r31, r25
 5b8:	96 e9       	ldi	r25, 0x96	; 150
 5ba:	bb 27       	eor	r27, r27
 5bc:	93 95       	inc	r25
 5be:	f6 95       	lsr	r31
 5c0:	87 95       	ror	r24
 5c2:	77 95       	ror	r23
 5c4:	67 95       	ror	r22
 5c6:	b7 95       	ror	r27
 5c8:	f1 11       	cpse	r31, r1
 5ca:	f8 cf       	rjmp	.-16     	; 0x5bc <__floatsisf+0x1c>
 5cc:	fa f4       	brpl	.+62     	; 0x60c <__floatsisf+0x6c>
 5ce:	bb 0f       	add	r27, r27
 5d0:	11 f4       	brne	.+4      	; 0x5d6 <__floatsisf+0x36>
 5d2:	60 ff       	sbrs	r22, 0
 5d4:	1b c0       	rjmp	.+54     	; 0x60c <__floatsisf+0x6c>
 5d6:	6f 5f       	subi	r22, 0xFF	; 255
 5d8:	7f 4f       	sbci	r23, 0xFF	; 255
 5da:	8f 4f       	sbci	r24, 0xFF	; 255
 5dc:	9f 4f       	sbci	r25, 0xFF	; 255
 5de:	16 c0       	rjmp	.+44     	; 0x60c <__floatsisf+0x6c>
 5e0:	88 23       	and	r24, r24
 5e2:	11 f0       	breq	.+4      	; 0x5e8 <__floatsisf+0x48>
 5e4:	96 e9       	ldi	r25, 0x96	; 150
 5e6:	11 c0       	rjmp	.+34     	; 0x60a <__floatsisf+0x6a>
 5e8:	77 23       	and	r23, r23
 5ea:	21 f0       	breq	.+8      	; 0x5f4 <__floatsisf+0x54>
 5ec:	9e e8       	ldi	r25, 0x8E	; 142
 5ee:	87 2f       	mov	r24, r23
 5f0:	76 2f       	mov	r23, r22
 5f2:	05 c0       	rjmp	.+10     	; 0x5fe <__floatsisf+0x5e>
 5f4:	66 23       	and	r22, r22
 5f6:	71 f0       	breq	.+28     	; 0x614 <__floatsisf+0x74>
 5f8:	96 e8       	ldi	r25, 0x86	; 134
 5fa:	86 2f       	mov	r24, r22
 5fc:	70 e0       	ldi	r23, 0x00	; 0
 5fe:	60 e0       	ldi	r22, 0x00	; 0
 600:	2a f0       	brmi	.+10     	; 0x60c <__floatsisf+0x6c>
 602:	9a 95       	dec	r25
 604:	66 0f       	add	r22, r22
 606:	77 1f       	adc	r23, r23
 608:	88 1f       	adc	r24, r24
 60a:	da f7       	brpl	.-10     	; 0x602 <__floatsisf+0x62>
 60c:	88 0f       	add	r24, r24
 60e:	96 95       	lsr	r25
 610:	87 95       	ror	r24
 612:	97 f9       	bld	r25, 7
 614:	08 95       	ret

00000616 <__fp_inf>:
 616:	97 f9       	bld	r25, 7
 618:	9f 67       	ori	r25, 0x7F	; 127
 61a:	80 e8       	ldi	r24, 0x80	; 128
 61c:	70 e0       	ldi	r23, 0x00	; 0
 61e:	60 e0       	ldi	r22, 0x00	; 0
 620:	08 95       	ret

00000622 <__fp_nan>:
 622:	9f ef       	ldi	r25, 0xFF	; 255
 624:	80 ec       	ldi	r24, 0xC0	; 192
 626:	08 95       	ret

00000628 <__fp_pscA>:
 628:	00 24       	eor	r0, r0
 62a:	0a 94       	dec	r0
 62c:	16 16       	cp	r1, r22
 62e:	17 06       	cpc	r1, r23
 630:	18 06       	cpc	r1, r24
 632:	09 06       	cpc	r0, r25
 634:	08 95       	ret

00000636 <__fp_pscB>:
 636:	00 24       	eor	r0, r0
 638:	0a 94       	dec	r0
 63a:	12 16       	cp	r1, r18
 63c:	13 06       	cpc	r1, r19
 63e:	14 06       	cpc	r1, r20
 640:	05 06       	cpc	r0, r21
 642:	08 95       	ret

00000644 <__fp_round>:
 644:	09 2e       	mov	r0, r25
 646:	03 94       	inc	r0
 648:	00 0c       	add	r0, r0
 64a:	11 f4       	brne	.+4      	; 0x650 <__fp_round+0xc>
 64c:	88 23       	and	r24, r24
 64e:	52 f0       	brmi	.+20     	; 0x664 <__fp_round+0x20>
 650:	bb 0f       	add	r27, r27
 652:	40 f4       	brcc	.+16     	; 0x664 <__fp_round+0x20>
 654:	bf 2b       	or	r27, r31
 656:	11 f4       	brne	.+4      	; 0x65c <__fp_round+0x18>
 658:	60 ff       	sbrs	r22, 0
 65a:	04 c0       	rjmp	.+8      	; 0x664 <__fp_round+0x20>
 65c:	6f 5f       	subi	r22, 0xFF	; 255
 65e:	7f 4f       	sbci	r23, 0xFF	; 255
 660:	8f 4f       	sbci	r24, 0xFF	; 255
 662:	9f 4f       	sbci	r25, 0xFF	; 255
 664:	08 95       	ret

00000666 <__fp_split3>:
 666:	57 fd       	sbrc	r21, 7
 668:	90 58       	subi	r25, 0x80	; 128
 66a:	44 0f       	add	r20, r20
 66c:	55 1f       	adc	r21, r21
 66e:	59 f0       	breq	.+22     	; 0x686 <__fp_splitA+0x10>
 670:	5f 3f       	cpi	r21, 0xFF	; 255
 672:	71 f0       	breq	.+28     	; 0x690 <__fp_splitA+0x1a>
 674:	47 95       	ror	r20

00000676 <__fp_splitA>:
 676:	88 0f       	add	r24, r24
 678:	97 fb       	bst	r25, 7
 67a:	99 1f       	adc	r25, r25
 67c:	61 f0       	breq	.+24     	; 0x696 <__fp_splitA+0x20>
 67e:	9f 3f       	cpi	r25, 0xFF	; 255
 680:	79 f0       	breq	.+30     	; 0x6a0 <__fp_splitA+0x2a>
 682:	87 95       	ror	r24
 684:	08 95       	ret
 686:	12 16       	cp	r1, r18
 688:	13 06       	cpc	r1, r19
 68a:	14 06       	cpc	r1, r20
 68c:	55 1f       	adc	r21, r21
 68e:	f2 cf       	rjmp	.-28     	; 0x674 <__fp_split3+0xe>
 690:	46 95       	lsr	r20
 692:	f1 df       	rcall	.-30     	; 0x676 <__fp_splitA>
 694:	08 c0       	rjmp	.+16     	; 0x6a6 <__fp_splitA+0x30>
 696:	16 16       	cp	r1, r22
 698:	17 06       	cpc	r1, r23
 69a:	18 06       	cpc	r1, r24
 69c:	99 1f       	adc	r25, r25
 69e:	f1 cf       	rjmp	.-30     	; 0x682 <__fp_splitA+0xc>
 6a0:	86 95       	lsr	r24
 6a2:	71 05       	cpc	r23, r1
 6a4:	61 05       	cpc	r22, r1
 6a6:	08 94       	sec
 6a8:	08 95       	ret

000006aa <__fp_zero>:
 6aa:	e8 94       	clt

000006ac <__fp_szero>:
 6ac:	bb 27       	eor	r27, r27
 6ae:	66 27       	eor	r22, r22
 6b0:	77 27       	eor	r23, r23
 6b2:	cb 01       	movw	r24, r22
 6b4:	97 f9       	bld	r25, 7
 6b6:	08 95       	ret

000006b8 <sprintf>:
 6b8:	ae e0       	ldi	r26, 0x0E	; 14
 6ba:	b0 e0       	ldi	r27, 0x00	; 0
 6bc:	e2 e6       	ldi	r30, 0x62	; 98
 6be:	f3 e0       	ldi	r31, 0x03	; 3
 6c0:	0c 94 1d 06 	jmp	0xc3a	; 0xc3a <__prologue_saves__+0x1c>
 6c4:	0d 89       	ldd	r16, Y+21	; 0x15
 6c6:	1e 89       	ldd	r17, Y+22	; 0x16
 6c8:	86 e0       	ldi	r24, 0x06	; 6
 6ca:	8c 83       	std	Y+4, r24	; 0x04
 6cc:	1a 83       	std	Y+2, r17	; 0x02
 6ce:	09 83       	std	Y+1, r16	; 0x01
 6d0:	8f ef       	ldi	r24, 0xFF	; 255
 6d2:	9f e7       	ldi	r25, 0x7F	; 127
 6d4:	9e 83       	std	Y+6, r25	; 0x06
 6d6:	8d 83       	std	Y+5, r24	; 0x05
 6d8:	ae 01       	movw	r20, r28
 6da:	47 5e       	subi	r20, 0xE7	; 231
 6dc:	5f 4f       	sbci	r21, 0xFF	; 255
 6de:	6f 89       	ldd	r22, Y+23	; 0x17
 6e0:	78 8d       	ldd	r23, Y+24	; 0x18
 6e2:	ce 01       	movw	r24, r28
 6e4:	01 96       	adiw	r24, 0x01	; 1
 6e6:	0e 94 7e 03 	call	0x6fc	; 0x6fc <vfprintf>
 6ea:	ef 81       	ldd	r30, Y+7	; 0x07
 6ec:	f8 85       	ldd	r31, Y+8	; 0x08
 6ee:	e0 0f       	add	r30, r16
 6f0:	f1 1f       	adc	r31, r17
 6f2:	10 82       	st	Z, r1
 6f4:	2e 96       	adiw	r28, 0x0e	; 14
 6f6:	e4 e0       	ldi	r30, 0x04	; 4
 6f8:	0c 94 39 06 	jmp	0xc72	; 0xc72 <__epilogue_restores__+0x1c>

000006fc <vfprintf>:
 6fc:	ab e0       	ldi	r26, 0x0B	; 11
 6fe:	b0 e0       	ldi	r27, 0x00	; 0
 700:	e4 e8       	ldi	r30, 0x84	; 132
 702:	f3 e0       	ldi	r31, 0x03	; 3
 704:	0c 94 0f 06 	jmp	0xc1e	; 0xc1e <__prologue_saves__>
 708:	6c 01       	movw	r12, r24
 70a:	7b 01       	movw	r14, r22
 70c:	8a 01       	movw	r16, r20
 70e:	fc 01       	movw	r30, r24
 710:	17 82       	std	Z+7, r1	; 0x07
 712:	16 82       	std	Z+6, r1	; 0x06
 714:	83 81       	ldd	r24, Z+3	; 0x03
 716:	81 ff       	sbrs	r24, 1
 718:	cc c1       	rjmp	.+920    	; 0xab2 <__stack+0x1b3>
 71a:	ce 01       	movw	r24, r28
 71c:	01 96       	adiw	r24, 0x01	; 1
 71e:	3c 01       	movw	r6, r24
 720:	f6 01       	movw	r30, r12
 722:	93 81       	ldd	r25, Z+3	; 0x03
 724:	f7 01       	movw	r30, r14
 726:	93 fd       	sbrc	r25, 3
 728:	85 91       	lpm	r24, Z+
 72a:	93 ff       	sbrs	r25, 3
 72c:	81 91       	ld	r24, Z+
 72e:	7f 01       	movw	r14, r30
 730:	88 23       	and	r24, r24
 732:	09 f4       	brne	.+2      	; 0x736 <vfprintf+0x3a>
 734:	ba c1       	rjmp	.+884    	; 0xaaa <__stack+0x1ab>
 736:	85 32       	cpi	r24, 0x25	; 37
 738:	39 f4       	brne	.+14     	; 0x748 <vfprintf+0x4c>
 73a:	93 fd       	sbrc	r25, 3
 73c:	85 91       	lpm	r24, Z+
 73e:	93 ff       	sbrs	r25, 3
 740:	81 91       	ld	r24, Z+
 742:	7f 01       	movw	r14, r30
 744:	85 32       	cpi	r24, 0x25	; 37
 746:	29 f4       	brne	.+10     	; 0x752 <vfprintf+0x56>
 748:	b6 01       	movw	r22, r12
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	0e 94 75 05 	call	0xaea	; 0xaea <fputc>
 750:	e7 cf       	rjmp	.-50     	; 0x720 <vfprintf+0x24>
 752:	91 2c       	mov	r9, r1
 754:	21 2c       	mov	r2, r1
 756:	31 2c       	mov	r3, r1
 758:	ff e1       	ldi	r31, 0x1F	; 31
 75a:	f3 15       	cp	r31, r3
 75c:	d8 f0       	brcs	.+54     	; 0x794 <vfprintf+0x98>
 75e:	8b 32       	cpi	r24, 0x2B	; 43
 760:	79 f0       	breq	.+30     	; 0x780 <vfprintf+0x84>
 762:	38 f4       	brcc	.+14     	; 0x772 <vfprintf+0x76>
 764:	80 32       	cpi	r24, 0x20	; 32
 766:	79 f0       	breq	.+30     	; 0x786 <vfprintf+0x8a>
 768:	83 32       	cpi	r24, 0x23	; 35
 76a:	a1 f4       	brne	.+40     	; 0x794 <vfprintf+0x98>
 76c:	23 2d       	mov	r18, r3
 76e:	20 61       	ori	r18, 0x10	; 16
 770:	1d c0       	rjmp	.+58     	; 0x7ac <vfprintf+0xb0>
 772:	8d 32       	cpi	r24, 0x2D	; 45
 774:	61 f0       	breq	.+24     	; 0x78e <vfprintf+0x92>
 776:	80 33       	cpi	r24, 0x30	; 48
 778:	69 f4       	brne	.+26     	; 0x794 <vfprintf+0x98>
 77a:	23 2d       	mov	r18, r3
 77c:	21 60       	ori	r18, 0x01	; 1
 77e:	16 c0       	rjmp	.+44     	; 0x7ac <vfprintf+0xb0>
 780:	83 2d       	mov	r24, r3
 782:	82 60       	ori	r24, 0x02	; 2
 784:	38 2e       	mov	r3, r24
 786:	e3 2d       	mov	r30, r3
 788:	e4 60       	ori	r30, 0x04	; 4
 78a:	3e 2e       	mov	r3, r30
 78c:	2a c0       	rjmp	.+84     	; 0x7e2 <vfprintf+0xe6>
 78e:	f3 2d       	mov	r31, r3
 790:	f8 60       	ori	r31, 0x08	; 8
 792:	1d c0       	rjmp	.+58     	; 0x7ce <vfprintf+0xd2>
 794:	37 fc       	sbrc	r3, 7
 796:	2d c0       	rjmp	.+90     	; 0x7f2 <vfprintf+0xf6>
 798:	20 ed       	ldi	r18, 0xD0	; 208
 79a:	28 0f       	add	r18, r24
 79c:	2a 30       	cpi	r18, 0x0A	; 10
 79e:	40 f0       	brcs	.+16     	; 0x7b0 <vfprintf+0xb4>
 7a0:	8e 32       	cpi	r24, 0x2E	; 46
 7a2:	b9 f4       	brne	.+46     	; 0x7d2 <vfprintf+0xd6>
 7a4:	36 fc       	sbrc	r3, 6
 7a6:	81 c1       	rjmp	.+770    	; 0xaaa <__stack+0x1ab>
 7a8:	23 2d       	mov	r18, r3
 7aa:	20 64       	ori	r18, 0x40	; 64
 7ac:	32 2e       	mov	r3, r18
 7ae:	19 c0       	rjmp	.+50     	; 0x7e2 <vfprintf+0xe6>
 7b0:	36 fe       	sbrs	r3, 6
 7b2:	06 c0       	rjmp	.+12     	; 0x7c0 <vfprintf+0xc4>
 7b4:	8a e0       	ldi	r24, 0x0A	; 10
 7b6:	98 9e       	mul	r9, r24
 7b8:	20 0d       	add	r18, r0
 7ba:	11 24       	eor	r1, r1
 7bc:	92 2e       	mov	r9, r18
 7be:	11 c0       	rjmp	.+34     	; 0x7e2 <vfprintf+0xe6>
 7c0:	ea e0       	ldi	r30, 0x0A	; 10
 7c2:	2e 9e       	mul	r2, r30
 7c4:	20 0d       	add	r18, r0
 7c6:	11 24       	eor	r1, r1
 7c8:	22 2e       	mov	r2, r18
 7ca:	f3 2d       	mov	r31, r3
 7cc:	f0 62       	ori	r31, 0x20	; 32
 7ce:	3f 2e       	mov	r3, r31
 7d0:	08 c0       	rjmp	.+16     	; 0x7e2 <vfprintf+0xe6>
 7d2:	8c 36       	cpi	r24, 0x6C	; 108
 7d4:	21 f4       	brne	.+8      	; 0x7de <vfprintf+0xe2>
 7d6:	83 2d       	mov	r24, r3
 7d8:	80 68       	ori	r24, 0x80	; 128
 7da:	38 2e       	mov	r3, r24
 7dc:	02 c0       	rjmp	.+4      	; 0x7e2 <vfprintf+0xe6>
 7de:	88 36       	cpi	r24, 0x68	; 104
 7e0:	41 f4       	brne	.+16     	; 0x7f2 <vfprintf+0xf6>
 7e2:	f7 01       	movw	r30, r14
 7e4:	93 fd       	sbrc	r25, 3
 7e6:	85 91       	lpm	r24, Z+
 7e8:	93 ff       	sbrs	r25, 3
 7ea:	81 91       	ld	r24, Z+
 7ec:	7f 01       	movw	r14, r30
 7ee:	81 11       	cpse	r24, r1
 7f0:	b3 cf       	rjmp	.-154    	; 0x758 <vfprintf+0x5c>
 7f2:	98 2f       	mov	r25, r24
 7f4:	9f 7d       	andi	r25, 0xDF	; 223
 7f6:	95 54       	subi	r25, 0x45	; 69
 7f8:	93 30       	cpi	r25, 0x03	; 3
 7fa:	28 f4       	brcc	.+10     	; 0x806 <vfprintf+0x10a>
 7fc:	0c 5f       	subi	r16, 0xFC	; 252
 7fe:	1f 4f       	sbci	r17, 0xFF	; 255
 800:	9f e3       	ldi	r25, 0x3F	; 63
 802:	99 83       	std	Y+1, r25	; 0x01
 804:	0d c0       	rjmp	.+26     	; 0x820 <vfprintf+0x124>
 806:	83 36       	cpi	r24, 0x63	; 99
 808:	31 f0       	breq	.+12     	; 0x816 <vfprintf+0x11a>
 80a:	83 37       	cpi	r24, 0x73	; 115
 80c:	71 f0       	breq	.+28     	; 0x82a <vfprintf+0x12e>
 80e:	83 35       	cpi	r24, 0x53	; 83
 810:	09 f0       	breq	.+2      	; 0x814 <vfprintf+0x118>
 812:	59 c0       	rjmp	.+178    	; 0x8c6 <vfprintf+0x1ca>
 814:	21 c0       	rjmp	.+66     	; 0x858 <vfprintf+0x15c>
 816:	f8 01       	movw	r30, r16
 818:	80 81       	ld	r24, Z
 81a:	89 83       	std	Y+1, r24	; 0x01
 81c:	0e 5f       	subi	r16, 0xFE	; 254
 81e:	1f 4f       	sbci	r17, 0xFF	; 255
 820:	88 24       	eor	r8, r8
 822:	83 94       	inc	r8
 824:	91 2c       	mov	r9, r1
 826:	53 01       	movw	r10, r6
 828:	13 c0       	rjmp	.+38     	; 0x850 <vfprintf+0x154>
 82a:	28 01       	movw	r4, r16
 82c:	f2 e0       	ldi	r31, 0x02	; 2
 82e:	4f 0e       	add	r4, r31
 830:	51 1c       	adc	r5, r1
 832:	f8 01       	movw	r30, r16
 834:	a0 80       	ld	r10, Z
 836:	b1 80       	ldd	r11, Z+1	; 0x01
 838:	36 fe       	sbrs	r3, 6
 83a:	03 c0       	rjmp	.+6      	; 0x842 <vfprintf+0x146>
 83c:	69 2d       	mov	r22, r9
 83e:	70 e0       	ldi	r23, 0x00	; 0
 840:	02 c0       	rjmp	.+4      	; 0x846 <vfprintf+0x14a>
 842:	6f ef       	ldi	r22, 0xFF	; 255
 844:	7f ef       	ldi	r23, 0xFF	; 255
 846:	c5 01       	movw	r24, r10
 848:	0e 94 6a 05 	call	0xad4	; 0xad4 <strnlen>
 84c:	4c 01       	movw	r8, r24
 84e:	82 01       	movw	r16, r4
 850:	f3 2d       	mov	r31, r3
 852:	ff 77       	andi	r31, 0x7F	; 127
 854:	3f 2e       	mov	r3, r31
 856:	16 c0       	rjmp	.+44     	; 0x884 <vfprintf+0x188>
 858:	28 01       	movw	r4, r16
 85a:	22 e0       	ldi	r18, 0x02	; 2
 85c:	42 0e       	add	r4, r18
 85e:	51 1c       	adc	r5, r1
 860:	f8 01       	movw	r30, r16
 862:	a0 80       	ld	r10, Z
 864:	b1 80       	ldd	r11, Z+1	; 0x01
 866:	36 fe       	sbrs	r3, 6
 868:	03 c0       	rjmp	.+6      	; 0x870 <vfprintf+0x174>
 86a:	69 2d       	mov	r22, r9
 86c:	70 e0       	ldi	r23, 0x00	; 0
 86e:	02 c0       	rjmp	.+4      	; 0x874 <vfprintf+0x178>
 870:	6f ef       	ldi	r22, 0xFF	; 255
 872:	7f ef       	ldi	r23, 0xFF	; 255
 874:	c5 01       	movw	r24, r10
 876:	0e 94 5f 05 	call	0xabe	; 0xabe <strnlen_P>
 87a:	4c 01       	movw	r8, r24
 87c:	f3 2d       	mov	r31, r3
 87e:	f0 68       	ori	r31, 0x80	; 128
 880:	3f 2e       	mov	r3, r31
 882:	82 01       	movw	r16, r4
 884:	33 fc       	sbrc	r3, 3
 886:	1b c0       	rjmp	.+54     	; 0x8be <vfprintf+0x1c2>
 888:	82 2d       	mov	r24, r2
 88a:	90 e0       	ldi	r25, 0x00	; 0
 88c:	88 16       	cp	r8, r24
 88e:	99 06       	cpc	r9, r25
 890:	b0 f4       	brcc	.+44     	; 0x8be <vfprintf+0x1c2>
 892:	b6 01       	movw	r22, r12
 894:	80 e2       	ldi	r24, 0x20	; 32
 896:	90 e0       	ldi	r25, 0x00	; 0
 898:	0e 94 75 05 	call	0xaea	; 0xaea <fputc>
 89c:	2a 94       	dec	r2
 89e:	f4 cf       	rjmp	.-24     	; 0x888 <vfprintf+0x18c>
 8a0:	f5 01       	movw	r30, r10
 8a2:	37 fc       	sbrc	r3, 7
 8a4:	85 91       	lpm	r24, Z+
 8a6:	37 fe       	sbrs	r3, 7
 8a8:	81 91       	ld	r24, Z+
 8aa:	5f 01       	movw	r10, r30
 8ac:	b6 01       	movw	r22, r12
 8ae:	90 e0       	ldi	r25, 0x00	; 0
 8b0:	0e 94 75 05 	call	0xaea	; 0xaea <fputc>
 8b4:	21 10       	cpse	r2, r1
 8b6:	2a 94       	dec	r2
 8b8:	21 e0       	ldi	r18, 0x01	; 1
 8ba:	82 1a       	sub	r8, r18
 8bc:	91 08       	sbc	r9, r1
 8be:	81 14       	cp	r8, r1
 8c0:	91 04       	cpc	r9, r1
 8c2:	71 f7       	brne	.-36     	; 0x8a0 <vfprintf+0x1a4>
 8c4:	e8 c0       	rjmp	.+464    	; 0xa96 <__stack+0x197>
 8c6:	84 36       	cpi	r24, 0x64	; 100
 8c8:	11 f0       	breq	.+4      	; 0x8ce <vfprintf+0x1d2>
 8ca:	89 36       	cpi	r24, 0x69	; 105
 8cc:	41 f5       	brne	.+80     	; 0x91e <__stack+0x1f>
 8ce:	f8 01       	movw	r30, r16
 8d0:	37 fe       	sbrs	r3, 7
 8d2:	07 c0       	rjmp	.+14     	; 0x8e2 <vfprintf+0x1e6>
 8d4:	60 81       	ld	r22, Z
 8d6:	71 81       	ldd	r23, Z+1	; 0x01
 8d8:	82 81       	ldd	r24, Z+2	; 0x02
 8da:	93 81       	ldd	r25, Z+3	; 0x03
 8dc:	0c 5f       	subi	r16, 0xFC	; 252
 8de:	1f 4f       	sbci	r17, 0xFF	; 255
 8e0:	08 c0       	rjmp	.+16     	; 0x8f2 <vfprintf+0x1f6>
 8e2:	60 81       	ld	r22, Z
 8e4:	71 81       	ldd	r23, Z+1	; 0x01
 8e6:	07 2e       	mov	r0, r23
 8e8:	00 0c       	add	r0, r0
 8ea:	88 0b       	sbc	r24, r24
 8ec:	99 0b       	sbc	r25, r25
 8ee:	0e 5f       	subi	r16, 0xFE	; 254
 8f0:	1f 4f       	sbci	r17, 0xFF	; 255
 8f2:	f3 2d       	mov	r31, r3
 8f4:	ff 76       	andi	r31, 0x6F	; 111
 8f6:	3f 2e       	mov	r3, r31
 8f8:	97 ff       	sbrs	r25, 7
 8fa:	09 c0       	rjmp	.+18     	; 0x90e <__stack+0xf>
 8fc:	90 95       	com	r25
 8fe:	80 95       	com	r24
 900:	70 95       	com	r23
 902:	61 95       	neg	r22
 904:	7f 4f       	sbci	r23, 0xFF	; 255
 906:	8f 4f       	sbci	r24, 0xFF	; 255
 908:	9f 4f       	sbci	r25, 0xFF	; 255
 90a:	f0 68       	ori	r31, 0x80	; 128
 90c:	3f 2e       	mov	r3, r31
 90e:	2a e0       	ldi	r18, 0x0A	; 10
 910:	30 e0       	ldi	r19, 0x00	; 0
 912:	a3 01       	movw	r20, r6
 914:	0e 94 b1 05 	call	0xb62	; 0xb62 <__ultoa_invert>
 918:	88 2e       	mov	r8, r24
 91a:	86 18       	sub	r8, r6
 91c:	45 c0       	rjmp	.+138    	; 0x9a8 <__stack+0xa9>
 91e:	85 37       	cpi	r24, 0x75	; 117
 920:	31 f4       	brne	.+12     	; 0x92e <__stack+0x2f>
 922:	23 2d       	mov	r18, r3
 924:	2f 7e       	andi	r18, 0xEF	; 239
 926:	b2 2e       	mov	r11, r18
 928:	2a e0       	ldi	r18, 0x0A	; 10
 92a:	30 e0       	ldi	r19, 0x00	; 0
 92c:	25 c0       	rjmp	.+74     	; 0x978 <__stack+0x79>
 92e:	93 2d       	mov	r25, r3
 930:	99 7f       	andi	r25, 0xF9	; 249
 932:	b9 2e       	mov	r11, r25
 934:	8f 36       	cpi	r24, 0x6F	; 111
 936:	c1 f0       	breq	.+48     	; 0x968 <__stack+0x69>
 938:	18 f4       	brcc	.+6      	; 0x940 <__stack+0x41>
 93a:	88 35       	cpi	r24, 0x58	; 88
 93c:	79 f0       	breq	.+30     	; 0x95c <__stack+0x5d>
 93e:	b5 c0       	rjmp	.+362    	; 0xaaa <__stack+0x1ab>
 940:	80 37       	cpi	r24, 0x70	; 112
 942:	19 f0       	breq	.+6      	; 0x94a <__stack+0x4b>
 944:	88 37       	cpi	r24, 0x78	; 120
 946:	21 f0       	breq	.+8      	; 0x950 <__stack+0x51>
 948:	b0 c0       	rjmp	.+352    	; 0xaaa <__stack+0x1ab>
 94a:	e9 2f       	mov	r30, r25
 94c:	e0 61       	ori	r30, 0x10	; 16
 94e:	be 2e       	mov	r11, r30
 950:	b4 fe       	sbrs	r11, 4
 952:	0d c0       	rjmp	.+26     	; 0x96e <__stack+0x6f>
 954:	fb 2d       	mov	r31, r11
 956:	f4 60       	ori	r31, 0x04	; 4
 958:	bf 2e       	mov	r11, r31
 95a:	09 c0       	rjmp	.+18     	; 0x96e <__stack+0x6f>
 95c:	34 fe       	sbrs	r3, 4
 95e:	0a c0       	rjmp	.+20     	; 0x974 <__stack+0x75>
 960:	29 2f       	mov	r18, r25
 962:	26 60       	ori	r18, 0x06	; 6
 964:	b2 2e       	mov	r11, r18
 966:	06 c0       	rjmp	.+12     	; 0x974 <__stack+0x75>
 968:	28 e0       	ldi	r18, 0x08	; 8
 96a:	30 e0       	ldi	r19, 0x00	; 0
 96c:	05 c0       	rjmp	.+10     	; 0x978 <__stack+0x79>
 96e:	20 e1       	ldi	r18, 0x10	; 16
 970:	30 e0       	ldi	r19, 0x00	; 0
 972:	02 c0       	rjmp	.+4      	; 0x978 <__stack+0x79>
 974:	20 e1       	ldi	r18, 0x10	; 16
 976:	32 e0       	ldi	r19, 0x02	; 2
 978:	f8 01       	movw	r30, r16
 97a:	b7 fe       	sbrs	r11, 7
 97c:	07 c0       	rjmp	.+14     	; 0x98c <__stack+0x8d>
 97e:	60 81       	ld	r22, Z
 980:	71 81       	ldd	r23, Z+1	; 0x01
 982:	82 81       	ldd	r24, Z+2	; 0x02
 984:	93 81       	ldd	r25, Z+3	; 0x03
 986:	0c 5f       	subi	r16, 0xFC	; 252
 988:	1f 4f       	sbci	r17, 0xFF	; 255
 98a:	06 c0       	rjmp	.+12     	; 0x998 <__stack+0x99>
 98c:	60 81       	ld	r22, Z
 98e:	71 81       	ldd	r23, Z+1	; 0x01
 990:	80 e0       	ldi	r24, 0x00	; 0
 992:	90 e0       	ldi	r25, 0x00	; 0
 994:	0e 5f       	subi	r16, 0xFE	; 254
 996:	1f 4f       	sbci	r17, 0xFF	; 255
 998:	a3 01       	movw	r20, r6
 99a:	0e 94 b1 05 	call	0xb62	; 0xb62 <__ultoa_invert>
 99e:	88 2e       	mov	r8, r24
 9a0:	86 18       	sub	r8, r6
 9a2:	fb 2d       	mov	r31, r11
 9a4:	ff 77       	andi	r31, 0x7F	; 127
 9a6:	3f 2e       	mov	r3, r31
 9a8:	36 fe       	sbrs	r3, 6
 9aa:	0d c0       	rjmp	.+26     	; 0x9c6 <__stack+0xc7>
 9ac:	23 2d       	mov	r18, r3
 9ae:	2e 7f       	andi	r18, 0xFE	; 254
 9b0:	a2 2e       	mov	r10, r18
 9b2:	89 14       	cp	r8, r9
 9b4:	58 f4       	brcc	.+22     	; 0x9cc <__stack+0xcd>
 9b6:	34 fe       	sbrs	r3, 4
 9b8:	0b c0       	rjmp	.+22     	; 0x9d0 <__stack+0xd1>
 9ba:	32 fc       	sbrc	r3, 2
 9bc:	09 c0       	rjmp	.+18     	; 0x9d0 <__stack+0xd1>
 9be:	83 2d       	mov	r24, r3
 9c0:	8e 7e       	andi	r24, 0xEE	; 238
 9c2:	a8 2e       	mov	r10, r24
 9c4:	05 c0       	rjmp	.+10     	; 0x9d0 <__stack+0xd1>
 9c6:	b8 2c       	mov	r11, r8
 9c8:	a3 2c       	mov	r10, r3
 9ca:	03 c0       	rjmp	.+6      	; 0x9d2 <__stack+0xd3>
 9cc:	b8 2c       	mov	r11, r8
 9ce:	01 c0       	rjmp	.+2      	; 0x9d2 <__stack+0xd3>
 9d0:	b9 2c       	mov	r11, r9
 9d2:	a4 fe       	sbrs	r10, 4
 9d4:	0f c0       	rjmp	.+30     	; 0x9f4 <__stack+0xf5>
 9d6:	fe 01       	movw	r30, r28
 9d8:	e8 0d       	add	r30, r8
 9da:	f1 1d       	adc	r31, r1
 9dc:	80 81       	ld	r24, Z
 9de:	80 33       	cpi	r24, 0x30	; 48
 9e0:	21 f4       	brne	.+8      	; 0x9ea <__stack+0xeb>
 9e2:	9a 2d       	mov	r25, r10
 9e4:	99 7e       	andi	r25, 0xE9	; 233
 9e6:	a9 2e       	mov	r10, r25
 9e8:	09 c0       	rjmp	.+18     	; 0x9fc <__stack+0xfd>
 9ea:	a2 fe       	sbrs	r10, 2
 9ec:	06 c0       	rjmp	.+12     	; 0x9fa <__stack+0xfb>
 9ee:	b3 94       	inc	r11
 9f0:	b3 94       	inc	r11
 9f2:	04 c0       	rjmp	.+8      	; 0x9fc <__stack+0xfd>
 9f4:	8a 2d       	mov	r24, r10
 9f6:	86 78       	andi	r24, 0x86	; 134
 9f8:	09 f0       	breq	.+2      	; 0x9fc <__stack+0xfd>
 9fa:	b3 94       	inc	r11
 9fc:	a3 fc       	sbrc	r10, 3
 9fe:	11 c0       	rjmp	.+34     	; 0xa22 <__stack+0x123>
 a00:	a0 fe       	sbrs	r10, 0
 a02:	06 c0       	rjmp	.+12     	; 0xa10 <__stack+0x111>
 a04:	b2 14       	cp	r11, r2
 a06:	88 f4       	brcc	.+34     	; 0xa2a <__stack+0x12b>
 a08:	28 0c       	add	r2, r8
 a0a:	92 2c       	mov	r9, r2
 a0c:	9b 18       	sub	r9, r11
 a0e:	0e c0       	rjmp	.+28     	; 0xa2c <__stack+0x12d>
 a10:	b2 14       	cp	r11, r2
 a12:	60 f4       	brcc	.+24     	; 0xa2c <__stack+0x12d>
 a14:	b6 01       	movw	r22, r12
 a16:	80 e2       	ldi	r24, 0x20	; 32
 a18:	90 e0       	ldi	r25, 0x00	; 0
 a1a:	0e 94 75 05 	call	0xaea	; 0xaea <fputc>
 a1e:	b3 94       	inc	r11
 a20:	f7 cf       	rjmp	.-18     	; 0xa10 <__stack+0x111>
 a22:	b2 14       	cp	r11, r2
 a24:	18 f4       	brcc	.+6      	; 0xa2c <__stack+0x12d>
 a26:	2b 18       	sub	r2, r11
 a28:	02 c0       	rjmp	.+4      	; 0xa2e <__stack+0x12f>
 a2a:	98 2c       	mov	r9, r8
 a2c:	21 2c       	mov	r2, r1
 a2e:	a4 fe       	sbrs	r10, 4
 a30:	10 c0       	rjmp	.+32     	; 0xa52 <__stack+0x153>
 a32:	b6 01       	movw	r22, r12
 a34:	80 e3       	ldi	r24, 0x30	; 48
 a36:	90 e0       	ldi	r25, 0x00	; 0
 a38:	0e 94 75 05 	call	0xaea	; 0xaea <fputc>
 a3c:	a2 fe       	sbrs	r10, 2
 a3e:	17 c0       	rjmp	.+46     	; 0xa6e <__stack+0x16f>
 a40:	a1 fc       	sbrc	r10, 1
 a42:	03 c0       	rjmp	.+6      	; 0xa4a <__stack+0x14b>
 a44:	88 e7       	ldi	r24, 0x78	; 120
 a46:	90 e0       	ldi	r25, 0x00	; 0
 a48:	02 c0       	rjmp	.+4      	; 0xa4e <__stack+0x14f>
 a4a:	88 e5       	ldi	r24, 0x58	; 88
 a4c:	90 e0       	ldi	r25, 0x00	; 0
 a4e:	b6 01       	movw	r22, r12
 a50:	0c c0       	rjmp	.+24     	; 0xa6a <__stack+0x16b>
 a52:	8a 2d       	mov	r24, r10
 a54:	86 78       	andi	r24, 0x86	; 134
 a56:	59 f0       	breq	.+22     	; 0xa6e <__stack+0x16f>
 a58:	a1 fe       	sbrs	r10, 1
 a5a:	02 c0       	rjmp	.+4      	; 0xa60 <__stack+0x161>
 a5c:	8b e2       	ldi	r24, 0x2B	; 43
 a5e:	01 c0       	rjmp	.+2      	; 0xa62 <__stack+0x163>
 a60:	80 e2       	ldi	r24, 0x20	; 32
 a62:	a7 fc       	sbrc	r10, 7
 a64:	8d e2       	ldi	r24, 0x2D	; 45
 a66:	b6 01       	movw	r22, r12
 a68:	90 e0       	ldi	r25, 0x00	; 0
 a6a:	0e 94 75 05 	call	0xaea	; 0xaea <fputc>
 a6e:	89 14       	cp	r8, r9
 a70:	38 f4       	brcc	.+14     	; 0xa80 <__stack+0x181>
 a72:	b6 01       	movw	r22, r12
 a74:	80 e3       	ldi	r24, 0x30	; 48
 a76:	90 e0       	ldi	r25, 0x00	; 0
 a78:	0e 94 75 05 	call	0xaea	; 0xaea <fputc>
 a7c:	9a 94       	dec	r9
 a7e:	f7 cf       	rjmp	.-18     	; 0xa6e <__stack+0x16f>
 a80:	8a 94       	dec	r8
 a82:	f3 01       	movw	r30, r6
 a84:	e8 0d       	add	r30, r8
 a86:	f1 1d       	adc	r31, r1
 a88:	80 81       	ld	r24, Z
 a8a:	b6 01       	movw	r22, r12
 a8c:	90 e0       	ldi	r25, 0x00	; 0
 a8e:	0e 94 75 05 	call	0xaea	; 0xaea <fputc>
 a92:	81 10       	cpse	r8, r1
 a94:	f5 cf       	rjmp	.-22     	; 0xa80 <__stack+0x181>
 a96:	22 20       	and	r2, r2
 a98:	09 f4       	brne	.+2      	; 0xa9c <__stack+0x19d>
 a9a:	42 ce       	rjmp	.-892    	; 0x720 <vfprintf+0x24>
 a9c:	b6 01       	movw	r22, r12
 a9e:	80 e2       	ldi	r24, 0x20	; 32
 aa0:	90 e0       	ldi	r25, 0x00	; 0
 aa2:	0e 94 75 05 	call	0xaea	; 0xaea <fputc>
 aa6:	2a 94       	dec	r2
 aa8:	f6 cf       	rjmp	.-20     	; 0xa96 <__stack+0x197>
 aaa:	f6 01       	movw	r30, r12
 aac:	86 81       	ldd	r24, Z+6	; 0x06
 aae:	97 81       	ldd	r25, Z+7	; 0x07
 ab0:	02 c0       	rjmp	.+4      	; 0xab6 <__stack+0x1b7>
 ab2:	8f ef       	ldi	r24, 0xFF	; 255
 ab4:	9f ef       	ldi	r25, 0xFF	; 255
 ab6:	2b 96       	adiw	r28, 0x0b	; 11
 ab8:	e2 e1       	ldi	r30, 0x12	; 18
 aba:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__epilogue_restores__>

00000abe <strnlen_P>:
 abe:	fc 01       	movw	r30, r24
 ac0:	05 90       	lpm	r0, Z+
 ac2:	61 50       	subi	r22, 0x01	; 1
 ac4:	70 40       	sbci	r23, 0x00	; 0
 ac6:	01 10       	cpse	r0, r1
 ac8:	d8 f7       	brcc	.-10     	; 0xac0 <strnlen_P+0x2>
 aca:	80 95       	com	r24
 acc:	90 95       	com	r25
 ace:	8e 0f       	add	r24, r30
 ad0:	9f 1f       	adc	r25, r31
 ad2:	08 95       	ret

00000ad4 <strnlen>:
 ad4:	fc 01       	movw	r30, r24
 ad6:	61 50       	subi	r22, 0x01	; 1
 ad8:	70 40       	sbci	r23, 0x00	; 0
 ada:	01 90       	ld	r0, Z+
 adc:	01 10       	cpse	r0, r1
 ade:	d8 f7       	brcc	.-10     	; 0xad6 <strnlen+0x2>
 ae0:	80 95       	com	r24
 ae2:	90 95       	com	r25
 ae4:	8e 0f       	add	r24, r30
 ae6:	9f 1f       	adc	r25, r31
 ae8:	08 95       	ret

00000aea <fputc>:
 aea:	0f 93       	push	r16
 aec:	1f 93       	push	r17
 aee:	cf 93       	push	r28
 af0:	df 93       	push	r29
 af2:	fb 01       	movw	r30, r22
 af4:	23 81       	ldd	r18, Z+3	; 0x03
 af6:	21 fd       	sbrc	r18, 1
 af8:	03 c0       	rjmp	.+6      	; 0xb00 <fputc+0x16>
 afa:	8f ef       	ldi	r24, 0xFF	; 255
 afc:	9f ef       	ldi	r25, 0xFF	; 255
 afe:	2c c0       	rjmp	.+88     	; 0xb58 <fputc+0x6e>
 b00:	22 ff       	sbrs	r18, 2
 b02:	16 c0       	rjmp	.+44     	; 0xb30 <fputc+0x46>
 b04:	46 81       	ldd	r20, Z+6	; 0x06
 b06:	57 81       	ldd	r21, Z+7	; 0x07
 b08:	24 81       	ldd	r18, Z+4	; 0x04
 b0a:	35 81       	ldd	r19, Z+5	; 0x05
 b0c:	42 17       	cp	r20, r18
 b0e:	53 07       	cpc	r21, r19
 b10:	44 f4       	brge	.+16     	; 0xb22 <fputc+0x38>
 b12:	a0 81       	ld	r26, Z
 b14:	b1 81       	ldd	r27, Z+1	; 0x01
 b16:	9d 01       	movw	r18, r26
 b18:	2f 5f       	subi	r18, 0xFF	; 255
 b1a:	3f 4f       	sbci	r19, 0xFF	; 255
 b1c:	31 83       	std	Z+1, r19	; 0x01
 b1e:	20 83       	st	Z, r18
 b20:	8c 93       	st	X, r24
 b22:	26 81       	ldd	r18, Z+6	; 0x06
 b24:	37 81       	ldd	r19, Z+7	; 0x07
 b26:	2f 5f       	subi	r18, 0xFF	; 255
 b28:	3f 4f       	sbci	r19, 0xFF	; 255
 b2a:	37 83       	std	Z+7, r19	; 0x07
 b2c:	26 83       	std	Z+6, r18	; 0x06
 b2e:	14 c0       	rjmp	.+40     	; 0xb58 <fputc+0x6e>
 b30:	8b 01       	movw	r16, r22
 b32:	ec 01       	movw	r28, r24
 b34:	fb 01       	movw	r30, r22
 b36:	00 84       	ldd	r0, Z+8	; 0x08
 b38:	f1 85       	ldd	r31, Z+9	; 0x09
 b3a:	e0 2d       	mov	r30, r0
 b3c:	09 95       	icall
 b3e:	89 2b       	or	r24, r25
 b40:	e1 f6       	brne	.-72     	; 0xafa <fputc+0x10>
 b42:	d8 01       	movw	r26, r16
 b44:	16 96       	adiw	r26, 0x06	; 6
 b46:	8d 91       	ld	r24, X+
 b48:	9c 91       	ld	r25, X
 b4a:	17 97       	sbiw	r26, 0x07	; 7
 b4c:	01 96       	adiw	r24, 0x01	; 1
 b4e:	17 96       	adiw	r26, 0x07	; 7
 b50:	9c 93       	st	X, r25
 b52:	8e 93       	st	-X, r24
 b54:	16 97       	sbiw	r26, 0x06	; 6
 b56:	ce 01       	movw	r24, r28
 b58:	df 91       	pop	r29
 b5a:	cf 91       	pop	r28
 b5c:	1f 91       	pop	r17
 b5e:	0f 91       	pop	r16
 b60:	08 95       	ret

00000b62 <__ultoa_invert>:
 b62:	fa 01       	movw	r30, r20
 b64:	aa 27       	eor	r26, r26
 b66:	28 30       	cpi	r18, 0x08	; 8
 b68:	51 f1       	breq	.+84     	; 0xbbe <__ultoa_invert+0x5c>
 b6a:	20 31       	cpi	r18, 0x10	; 16
 b6c:	81 f1       	breq	.+96     	; 0xbce <__ultoa_invert+0x6c>
 b6e:	e8 94       	clt
 b70:	6f 93       	push	r22
 b72:	6e 7f       	andi	r22, 0xFE	; 254
 b74:	6e 5f       	subi	r22, 0xFE	; 254
 b76:	7f 4f       	sbci	r23, 0xFF	; 255
 b78:	8f 4f       	sbci	r24, 0xFF	; 255
 b7a:	9f 4f       	sbci	r25, 0xFF	; 255
 b7c:	af 4f       	sbci	r26, 0xFF	; 255
 b7e:	b1 e0       	ldi	r27, 0x01	; 1
 b80:	3e d0       	rcall	.+124    	; 0xbfe <__ultoa_invert+0x9c>
 b82:	b4 e0       	ldi	r27, 0x04	; 4
 b84:	3c d0       	rcall	.+120    	; 0xbfe <__ultoa_invert+0x9c>
 b86:	67 0f       	add	r22, r23
 b88:	78 1f       	adc	r23, r24
 b8a:	89 1f       	adc	r24, r25
 b8c:	9a 1f       	adc	r25, r26
 b8e:	a1 1d       	adc	r26, r1
 b90:	68 0f       	add	r22, r24
 b92:	79 1f       	adc	r23, r25
 b94:	8a 1f       	adc	r24, r26
 b96:	91 1d       	adc	r25, r1
 b98:	a1 1d       	adc	r26, r1
 b9a:	6a 0f       	add	r22, r26
 b9c:	71 1d       	adc	r23, r1
 b9e:	81 1d       	adc	r24, r1
 ba0:	91 1d       	adc	r25, r1
 ba2:	a1 1d       	adc	r26, r1
 ba4:	20 d0       	rcall	.+64     	; 0xbe6 <__ultoa_invert+0x84>
 ba6:	09 f4       	brne	.+2      	; 0xbaa <__ultoa_invert+0x48>
 ba8:	68 94       	set
 baa:	3f 91       	pop	r19
 bac:	2a e0       	ldi	r18, 0x0A	; 10
 bae:	26 9f       	mul	r18, r22
 bb0:	11 24       	eor	r1, r1
 bb2:	30 19       	sub	r19, r0
 bb4:	30 5d       	subi	r19, 0xD0	; 208
 bb6:	31 93       	st	Z+, r19
 bb8:	de f6       	brtc	.-74     	; 0xb70 <__ultoa_invert+0xe>
 bba:	cf 01       	movw	r24, r30
 bbc:	08 95       	ret
 bbe:	46 2f       	mov	r20, r22
 bc0:	47 70       	andi	r20, 0x07	; 7
 bc2:	40 5d       	subi	r20, 0xD0	; 208
 bc4:	41 93       	st	Z+, r20
 bc6:	b3 e0       	ldi	r27, 0x03	; 3
 bc8:	0f d0       	rcall	.+30     	; 0xbe8 <__ultoa_invert+0x86>
 bca:	c9 f7       	brne	.-14     	; 0xbbe <__ultoa_invert+0x5c>
 bcc:	f6 cf       	rjmp	.-20     	; 0xbba <__ultoa_invert+0x58>
 bce:	46 2f       	mov	r20, r22
 bd0:	4f 70       	andi	r20, 0x0F	; 15
 bd2:	40 5d       	subi	r20, 0xD0	; 208
 bd4:	4a 33       	cpi	r20, 0x3A	; 58
 bd6:	18 f0       	brcs	.+6      	; 0xbde <__ultoa_invert+0x7c>
 bd8:	49 5d       	subi	r20, 0xD9	; 217
 bda:	31 fd       	sbrc	r19, 1
 bdc:	40 52       	subi	r20, 0x20	; 32
 bde:	41 93       	st	Z+, r20
 be0:	02 d0       	rcall	.+4      	; 0xbe6 <__ultoa_invert+0x84>
 be2:	a9 f7       	brne	.-22     	; 0xbce <__ultoa_invert+0x6c>
 be4:	ea cf       	rjmp	.-44     	; 0xbba <__ultoa_invert+0x58>
 be6:	b4 e0       	ldi	r27, 0x04	; 4
 be8:	a6 95       	lsr	r26
 bea:	97 95       	ror	r25
 bec:	87 95       	ror	r24
 bee:	77 95       	ror	r23
 bf0:	67 95       	ror	r22
 bf2:	ba 95       	dec	r27
 bf4:	c9 f7       	brne	.-14     	; 0xbe8 <__ultoa_invert+0x86>
 bf6:	00 97       	sbiw	r24, 0x00	; 0
 bf8:	61 05       	cpc	r22, r1
 bfa:	71 05       	cpc	r23, r1
 bfc:	08 95       	ret
 bfe:	9b 01       	movw	r18, r22
 c00:	ac 01       	movw	r20, r24
 c02:	0a 2e       	mov	r0, r26
 c04:	06 94       	lsr	r0
 c06:	57 95       	ror	r21
 c08:	47 95       	ror	r20
 c0a:	37 95       	ror	r19
 c0c:	27 95       	ror	r18
 c0e:	ba 95       	dec	r27
 c10:	c9 f7       	brne	.-14     	; 0xc04 <__ultoa_invert+0xa2>
 c12:	62 0f       	add	r22, r18
 c14:	73 1f       	adc	r23, r19
 c16:	84 1f       	adc	r24, r20
 c18:	95 1f       	adc	r25, r21
 c1a:	a0 1d       	adc	r26, r0
 c1c:	08 95       	ret

00000c1e <__prologue_saves__>:
 c1e:	2f 92       	push	r2
 c20:	3f 92       	push	r3
 c22:	4f 92       	push	r4
 c24:	5f 92       	push	r5
 c26:	6f 92       	push	r6
 c28:	7f 92       	push	r7
 c2a:	8f 92       	push	r8
 c2c:	9f 92       	push	r9
 c2e:	af 92       	push	r10
 c30:	bf 92       	push	r11
 c32:	cf 92       	push	r12
 c34:	df 92       	push	r13
 c36:	ef 92       	push	r14
 c38:	ff 92       	push	r15
 c3a:	0f 93       	push	r16
 c3c:	1f 93       	push	r17
 c3e:	cf 93       	push	r28
 c40:	df 93       	push	r29
 c42:	cd b7       	in	r28, 0x3d	; 61
 c44:	de b7       	in	r29, 0x3e	; 62
 c46:	ca 1b       	sub	r28, r26
 c48:	db 0b       	sbc	r29, r27
 c4a:	0f b6       	in	r0, 0x3f	; 63
 c4c:	f8 94       	cli
 c4e:	de bf       	out	0x3e, r29	; 62
 c50:	0f be       	out	0x3f, r0	; 63
 c52:	cd bf       	out	0x3d, r28	; 61
 c54:	09 94       	ijmp

00000c56 <__epilogue_restores__>:
 c56:	2a 88       	ldd	r2, Y+18	; 0x12
 c58:	39 88       	ldd	r3, Y+17	; 0x11
 c5a:	48 88       	ldd	r4, Y+16	; 0x10
 c5c:	5f 84       	ldd	r5, Y+15	; 0x0f
 c5e:	6e 84       	ldd	r6, Y+14	; 0x0e
 c60:	7d 84       	ldd	r7, Y+13	; 0x0d
 c62:	8c 84       	ldd	r8, Y+12	; 0x0c
 c64:	9b 84       	ldd	r9, Y+11	; 0x0b
 c66:	aa 84       	ldd	r10, Y+10	; 0x0a
 c68:	b9 84       	ldd	r11, Y+9	; 0x09
 c6a:	c8 84       	ldd	r12, Y+8	; 0x08
 c6c:	df 80       	ldd	r13, Y+7	; 0x07
 c6e:	ee 80       	ldd	r14, Y+6	; 0x06
 c70:	fd 80       	ldd	r15, Y+5	; 0x05
 c72:	0c 81       	ldd	r16, Y+4	; 0x04
 c74:	1b 81       	ldd	r17, Y+3	; 0x03
 c76:	aa 81       	ldd	r26, Y+2	; 0x02
 c78:	b9 81       	ldd	r27, Y+1	; 0x01
 c7a:	ce 0f       	add	r28, r30
 c7c:	d1 1d       	adc	r29, r1
 c7e:	0f b6       	in	r0, 0x3f	; 63
 c80:	f8 94       	cli
 c82:	de bf       	out	0x3e, r29	; 62
 c84:	0f be       	out	0x3f, r0	; 63
 c86:	cd bf       	out	0x3d, r28	; 61
 c88:	ed 01       	movw	r28, r26
 c8a:	08 95       	ret

00000c8c <_exit>:
 c8c:	f8 94       	cli

00000c8e <__stop_program>:
 c8e:	ff cf       	rjmp	.-2      	; 0xc8e <__stop_program>
