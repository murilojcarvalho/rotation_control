
rotation_control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000916  000009aa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000916  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000007e  00800110  00800110  000009ba  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009ba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a18  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b0  00000000  00000000  00000a58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ad8  00000000  00000000  00000b08  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008f6  00000000  00000000  000015e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000058b  00000000  00000000  00001ed6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000178  00000000  00000000  00002464  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000489  00000000  00000000  000025dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000021d  00000000  00000000  00002a65  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  00002c82  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 dc 00 	jmp	0x1b8	; 0x1b8 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e1       	ldi	r30, 0x16	; 22
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 31       	cpi	r26, 0x10	; 16
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e1       	ldi	r26, 0x10	; 16
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 38       	cpi	r26, 0x8E	; 142
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 7c 00 	call	0xf8	; 0xf8 <main>
  9e:	0c 94 89 04 	jmp	0x912	; 0x912 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_1>:
	
	return 0;
}

//INT0 Interrupt
ISR (INT0_vect){
  a6:	1f 92       	push	r1
  a8:	0f 92       	push	r0
  aa:	0f b6       	in	r0, 0x3f	; 63
  ac:	0f 92       	push	r0
  ae:	11 24       	eor	r1, r1
  b0:	8f 93       	push	r24
  b2:	9f 93       	push	r25
	//ATOMIC_BLOCK(ATOMIC_FORCEON){
		//current_rpm_millis = millis();
		//rpm = 60/(current_rpm_millis - previous_rpm_millis)*7;
		rpm++;
  b4:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <rpm>
  b8:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <rpm+0x1>
  bc:	01 96       	adiw	r24, 0x01	; 1
  be:	90 93 7d 01 	sts	0x017D, r25	; 0x80017d <rpm+0x1>
  c2:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <rpm>
		//sprintf(string_buffer, "%u \r\n", rpm);
		//USART_StrTx(string_buffer);
	//}
}
  c6:	9f 91       	pop	r25
  c8:	8f 91       	pop	r24
  ca:	0f 90       	pop	r0
  cc:	0f be       	out	0x3f, r0	; 63
  ce:	0f 90       	pop	r0
  d0:	1f 90       	pop	r1
  d2:	18 95       	reti

000000d4 <init>:

void init(void){
	//Port configuration
	//1 -> output, 0 -> input
	DDRB |= 0b00000010;		//Set PB1 (arduino digital pin 9) as output
  d4:	21 9a       	sbi	0x04, 1	; 4
	DDRD &= ~(1 << DDD2);     // Set PD2/INT0 (arduino digital pin 2) as input
  d6:	52 98       	cbi	0x0a, 2	; 10
	
	USART_Init();	//Start USART
  d8:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <USART_Init>
	
	//Pwm1AInit();	//Enable PWM
	
	//Interrupt Config
	EICRA |= 0b00000011;    //The rising edge of INT0 generates an interrupt request (ISC00, ISC01)
  dc:	e9 e6       	ldi	r30, 0x69	; 105
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	83 60       	ori	r24, 0x03	; 3
  e4:	80 83       	st	Z, r24
	EIMSK |= (1 << INT0);     //Turns on INT0
  e6:	e8 9a       	sbi	0x1d, 0	; 29
	ticks_init();
  e8:	0e 94 c3 00 	call	0x186	; 0x186 <ticks_init>
	sei();          // turn on interrupts
  ec:	78 94       	sei
	
	USART_StrTx("WELCOME\r\n");
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	91 e0       	ldi	r25, 0x01	; 1
  f2:	0e 94 90 01 	call	0x320	; 0x320 <USART_StrTx>
  f6:	08 95       	ret

000000f8 <main>:
void init(void);
void proporcional_control(void);


int main(void){
	init();
  f8:	0e 94 6a 00 	call	0xd4	; 0xd4 <init>
		//Pwm1ASetDuty(10);
		set_duty_PWM(50);
		current_rpm_millis = millis();
		if(current_rpm_millis - previous_rpm_millis >= serial_publish_interval){
			previous_rpm_millis = current_rpm_millis;
			sprintf(string_buffer, "%u \r\n", rpm);
  fc:	0a e0       	ldi	r16, 0x0A	; 10
  fe:	11 e0       	ldi	r17, 0x01	; 1
 100:	c0 e1       	ldi	r28, 0x10	; 16
 102:	d1 e0       	ldi	r29, 0x01	; 1
int main(void){
	init();
	
    while ( TRUE ) {
		//Pwm1ASetDuty(10);
		set_duty_PWM(50);
 104:	82 e3       	ldi	r24, 0x32	; 50
 106:	0e 94 70 01 	call	0x2e0	; 0x2e0 <set_duty_PWM>
		current_rpm_millis = millis();
 10a:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <millis>
 10e:	60 93 74 01 	sts	0x0174, r22	; 0x800174 <current_rpm_millis>
 112:	70 93 75 01 	sts	0x0175, r23	; 0x800175 <current_rpm_millis+0x1>
 116:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <current_rpm_millis+0x2>
 11a:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <current_rpm_millis+0x3>
		if(current_rpm_millis - previous_rpm_millis >= serial_publish_interval){
 11e:	c0 90 78 01 	lds	r12, 0x0178	; 0x800178 <previous_rpm_millis>
 122:	d0 90 79 01 	lds	r13, 0x0179	; 0x800179 <previous_rpm_millis+0x1>
 126:	e0 90 7a 01 	lds	r14, 0x017A	; 0x80017a <previous_rpm_millis+0x2>
 12a:	f0 90 7b 01 	lds	r15, 0x017B	; 0x80017b <previous_rpm_millis+0x3>
 12e:	9b 01       	movw	r18, r22
 130:	ac 01       	movw	r20, r24
 132:	2c 19       	sub	r18, r12
 134:	3d 09       	sbc	r19, r13
 136:	4e 09       	sbc	r20, r14
 138:	5f 09       	sbc	r21, r15
 13a:	69 01       	movw	r12, r18
 13c:	7a 01       	movw	r14, r20
 13e:	34 e6       	ldi	r19, 0x64	; 100
 140:	c3 16       	cp	r12, r19
 142:	d1 04       	cpc	r13, r1
 144:	e1 04       	cpc	r14, r1
 146:	f1 04       	cpc	r15, r1
 148:	e8 f2       	brcs	.-70     	; 0x104 <main+0xc>
			previous_rpm_millis = current_rpm_millis;
 14a:	60 93 78 01 	sts	0x0178, r22	; 0x800178 <previous_rpm_millis>
 14e:	70 93 79 01 	sts	0x0179, r23	; 0x800179 <previous_rpm_millis+0x1>
 152:	80 93 7a 01 	sts	0x017A, r24	; 0x80017a <previous_rpm_millis+0x2>
 156:	90 93 7b 01 	sts	0x017B, r25	; 0x80017b <previous_rpm_millis+0x3>
			sprintf(string_buffer, "%u \r\n", rpm);
 15a:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <rpm+0x1>
 15e:	8f 93       	push	r24
 160:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <rpm>
 164:	8f 93       	push	r24
 166:	1f 93       	push	r17
 168:	0f 93       	push	r16
 16a:	df 93       	push	r29
 16c:	cf 93       	push	r28
 16e:	0e 94 9f 01 	call	0x33e	; 0x33e <sprintf>
			USART_StrTx(string_buffer);
 172:	ce 01       	movw	r24, r28
 174:	0e 94 90 01 	call	0x320	; 0x320 <USART_StrTx>
 178:	0f 90       	pop	r0
 17a:	0f 90       	pop	r0
 17c:	0f 90       	pop	r0
 17e:	0f 90       	pop	r0
 180:	0f 90       	pop	r0
 182:	0f 90       	pop	r0
 184:	bf cf       	rjmp	.-130    	; 0x104 <main+0xc>

00000186 <ticks_init>:
*
*	Return:			None
****************************************************************************************************************************************************************/
void ticks_init( void )
{
	TCCR0A |= (1 << WGM01);				// Set the Timer0 Mode to CTC
 186:	84 b5       	in	r24, 0x24	; 36
 188:	82 60       	ori	r24, 0x02	; 2
 18a:	84 bd       	out	0x24, r24	; 36
	OCR0A = ((F_CPU*0.0001)/8)-1;		// OCRn =  [ (clock_speed / Prescaler_value) * Desired_time_in_Seconds ] - 1 =  [ (16000000 / 8) * 100us ] - 1 = 199
 18c:	87 ec       	ldi	r24, 0xC7	; 199
 18e:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1 << OCIE0A);			//Set the ISR COMPA vect
 190:	ee e6       	ldi	r30, 0x6E	; 110
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	80 81       	ld	r24, Z
 196:	82 60       	ori	r24, 0x02	; 2
 198:	80 83       	st	Z, r24
	TCCR0B |= (1 << CS01);	// set prescaler to 8 and start the timer
 19a:	85 b5       	in	r24, 0x25	; 37
 19c:	82 60       	ori	r24, 0x02	; 2
 19e:	85 bd       	out	0x25, r24	; 37
 1a0:	08 95       	ret

000001a2 <millis>:
    return 1;
}

static __inline__ uint8_t __iCliRetVal(void)
{
    cli();
 1a2:	f8 94       	cli
unsigned long int millis(void)
{
	unsigned long int tick_1ms_temp;
	
	ATOMIC_BLOCK(ATOMIC_FORCEON){
		tick_1ms_temp = tick_1ms;
 1a4:	60 91 8a 01 	lds	r22, 0x018A	; 0x80018a <tick_1ms>
 1a8:	70 91 8b 01 	lds	r23, 0x018B	; 0x80018b <tick_1ms+0x1>
 1ac:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <tick_1ms+0x2>
 1b0:	90 91 8d 01 	lds	r25, 0x018D	; 0x80018d <tick_1ms+0x3>
    return 1;
}

static __inline__ void __iSeiParam(const uint8_t *__s)
{
    sei();
 1b4:	78 94       	sei
	}
	
	return tick_1ms_temp;
}
 1b6:	08 95       	ret

000001b8 <__vector_14>:
*	TIMER1 Compare Output A Interrupt Service Routine
*	Increment ms_Counter at a rate of 1 ms
*
******************************************************************************************************************************************************************/
ISR( TIMER0_COMPA_vect )
{
 1b8:	1f 92       	push	r1
 1ba:	0f 92       	push	r0
 1bc:	0f b6       	in	r0, 0x3f	; 63
 1be:	0f 92       	push	r0
 1c0:	11 24       	eor	r1, r1
 1c2:	4f 93       	push	r20
 1c4:	5f 93       	push	r21
 1c6:	6f 93       	push	r22
 1c8:	7f 93       	push	r23
 1ca:	8f 93       	push	r24
 1cc:	9f 93       	push	r25
 1ce:	af 93       	push	r26
 1d0:	bf 93       	push	r27
	tick++;
 1d2:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <tick>
 1d6:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <tick+0x1>
 1da:	a0 91 88 01 	lds	r26, 0x0188	; 0x800188 <tick+0x2>
 1de:	b0 91 89 01 	lds	r27, 0x0189	; 0x800189 <tick+0x3>
 1e2:	01 96       	adiw	r24, 0x01	; 1
 1e4:	a1 1d       	adc	r26, r1
 1e6:	b1 1d       	adc	r27, r1
 1e8:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <tick>
 1ec:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <tick+0x1>
 1f0:	a0 93 88 01 	sts	0x0188, r26	; 0x800188 <tick+0x2>
 1f4:	b0 93 89 01 	sts	0x0189, r27	; 0x800189 <tick+0x3>
	if(tick >= 10){
 1f8:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <tick>
 1fc:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <tick+0x1>
 200:	a0 91 88 01 	lds	r26, 0x0188	; 0x800188 <tick+0x2>
 204:	b0 91 89 01 	lds	r27, 0x0189	; 0x800189 <tick+0x3>
 208:	0a 97       	sbiw	r24, 0x0a	; 10
 20a:	a1 05       	cpc	r26, r1
 20c:	b1 05       	cpc	r27, r1
 20e:	d8 f0       	brcs	.+54     	; 0x246 <__vector_14+0x8e>
		tick=0;
 210:	10 92 86 01 	sts	0x0186, r1	; 0x800186 <tick>
 214:	10 92 87 01 	sts	0x0187, r1	; 0x800187 <tick+0x1>
 218:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <tick+0x2>
 21c:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <tick+0x3>
		tick_1ms++;
 220:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <tick_1ms>
 224:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <tick_1ms+0x1>
 228:	a0 91 8c 01 	lds	r26, 0x018C	; 0x80018c <tick_1ms+0x2>
 22c:	b0 91 8d 01 	lds	r27, 0x018D	; 0x80018d <tick_1ms+0x3>
 230:	01 96       	adiw	r24, 0x01	; 1
 232:	a1 1d       	adc	r26, r1
 234:	b1 1d       	adc	r27, r1
 236:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <tick_1ms>
 23a:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <tick_1ms+0x1>
 23e:	a0 93 8c 01 	sts	0x018C, r26	; 0x80018c <tick_1ms+0x2>
 242:	b0 93 8d 01 	sts	0x018D, r27	; 0x80018d <tick_1ms+0x3>
	}
	
	pwm_tick++;
 246:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <pwm_tick>
 24a:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <pwm_tick+0x1>
 24e:	a0 91 84 01 	lds	r26, 0x0184	; 0x800184 <pwm_tick+0x2>
 252:	b0 91 85 01 	lds	r27, 0x0185	; 0x800185 <pwm_tick+0x3>
 256:	01 96       	adiw	r24, 0x01	; 1
 258:	a1 1d       	adc	r26, r1
 25a:	b1 1d       	adc	r27, r1
 25c:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <pwm_tick>
 260:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <pwm_tick+0x1>
 264:	a0 93 84 01 	sts	0x0184, r26	; 0x800184 <pwm_tick+0x2>
 268:	b0 93 85 01 	sts	0x0185, r27	; 0x800185 <pwm_tick+0x3>
	if(pwm_tick>=pwm_period){
 26c:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <pwm_tick>
 270:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <pwm_tick+0x1>
 274:	a0 91 84 01 	lds	r26, 0x0184	; 0x800184 <pwm_tick+0x2>
 278:	b0 91 85 01 	lds	r27, 0x0185	; 0x800185 <pwm_tick+0x3>
 27c:	84 36       	cpi	r24, 0x64	; 100
 27e:	91 05       	cpc	r25, r1
 280:	a1 05       	cpc	r26, r1
 282:	b1 05       	cpc	r27, r1
 284:	50 f0       	brcs	.+20     	; 0x29a <__vector_14+0xe2>
		pwm_tick = 0;
 286:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <pwm_tick>
 28a:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <pwm_tick+0x1>
 28e:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <pwm_tick+0x2>
 292:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <pwm_tick+0x3>
		PORTB |= 0b00000010;  // Set PB1 (arduino digital pin 9) to 1
 296:	29 9a       	sbi	0x05, 1	; 5
 298:	16 c0       	rjmp	.+44     	; 0x2c6 <__vector_14+0x10e>
	}
	else if(pwm_tick>=pwm_duty){
 29a:	40 91 82 01 	lds	r20, 0x0182	; 0x800182 <pwm_tick>
 29e:	50 91 83 01 	lds	r21, 0x0183	; 0x800183 <pwm_tick+0x1>
 2a2:	60 91 84 01 	lds	r22, 0x0184	; 0x800184 <pwm_tick+0x2>
 2a6:	70 91 85 01 	lds	r23, 0x0185	; 0x800185 <pwm_tick+0x3>
 2aa:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <pwm_duty>
 2ae:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <pwm_duty+0x1>
 2b2:	a0 91 80 01 	lds	r26, 0x0180	; 0x800180 <pwm_duty+0x2>
 2b6:	b0 91 81 01 	lds	r27, 0x0181	; 0x800181 <pwm_duty+0x3>
 2ba:	48 17       	cp	r20, r24
 2bc:	59 07       	cpc	r21, r25
 2be:	6a 07       	cpc	r22, r26
 2c0:	7b 07       	cpc	r23, r27
 2c2:	08 f0       	brcs	.+2      	; 0x2c6 <__vector_14+0x10e>
			PORTB &= 0b11111101; // Set PB1 (arduino digital pin 9) to 0
 2c4:	29 98       	cbi	0x05, 1	; 5
	}
}
 2c6:	bf 91       	pop	r27
 2c8:	af 91       	pop	r26
 2ca:	9f 91       	pop	r25
 2cc:	8f 91       	pop	r24
 2ce:	7f 91       	pop	r23
 2d0:	6f 91       	pop	r22
 2d2:	5f 91       	pop	r21
 2d4:	4f 91       	pop	r20
 2d6:	0f 90       	pop	r0
 2d8:	0f be       	out	0x3f, r0	; 63
 2da:	0f 90       	pop	r0
 2dc:	1f 90       	pop	r1
 2de:	18 95       	reti

000002e0 <set_duty_PWM>:

void set_duty_PWM(unsigned char pwm_duty_temp){
	pwm_duty = pwm_duty_temp;
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	a0 e0       	ldi	r26, 0x00	; 0
 2e4:	b0 e0       	ldi	r27, 0x00	; 0
 2e6:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <pwm_duty>
 2ea:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <pwm_duty+0x1>
 2ee:	a0 93 80 01 	sts	0x0180, r26	; 0x800180 <pwm_duty+0x2>
 2f2:	b0 93 81 01 	sts	0x0181, r27	; 0x800181 <pwm_duty+0x3>
 2f6:	08 95       	ret

000002f8 <USART_Init>:
//-------------------------------------------------------------------------------------------------------
unsigned char USART_Receive()
{
	while(!(UCSR0A & (1<<RXC0)));				// Espera o dado ser recebido
	return UDR0;
}
 2f8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 2fc:	87 e6       	ldi	r24, 0x67	; 103
 2fe:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 302:	88 e1       	ldi	r24, 0x18	; 24
 304:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 308:	86 e0       	ldi	r24, 0x06	; 6
 30a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 30e:	08 95       	ret

00000310 <USART_Transmit>:
 310:	e0 ec       	ldi	r30, 0xC0	; 192
 312:	f0 e0       	ldi	r31, 0x00	; 0
 314:	90 81       	ld	r25, Z
 316:	95 ff       	sbrs	r25, 5
 318:	fd cf       	rjmp	.-6      	; 0x314 <USART_Transmit+0x4>
 31a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 31e:	08 95       	ret

00000320 <USART_StrTx>:

//-------------------------------------------------------------------------------------------------------
void USART_StrTx(const char* ptr)
{
 320:	cf 93       	push	r28
 322:	df 93       	push	r29
 324:	ec 01       	movw	r28, r24
	while(*ptr != '\0')
 326:	88 81       	ld	r24, Y
 328:	88 23       	and	r24, r24
 32a:	31 f0       	breq	.+12     	; 0x338 <USART_StrTx+0x18>
 32c:	21 96       	adiw	r28, 0x01	; 1
	{
		USART_Transmit(*ptr);
 32e:	0e 94 88 01 	call	0x310	; 0x310 <USART_Transmit>
}

//-------------------------------------------------------------------------------------------------------
void USART_StrTx(const char* ptr)
{
	while(*ptr != '\0')
 332:	89 91       	ld	r24, Y+
 334:	81 11       	cpse	r24, r1
 336:	fb cf       	rjmp	.-10     	; 0x32e <USART_StrTx+0xe>
	{
		USART_Transmit(*ptr);
		ptr++;
	}
}
 338:	df 91       	pop	r29
 33a:	cf 91       	pop	r28
 33c:	08 95       	ret

0000033e <sprintf>:
 33e:	ae e0       	ldi	r26, 0x0E	; 14
 340:	b0 e0       	ldi	r27, 0x00	; 0
 342:	e5 ea       	ldi	r30, 0xA5	; 165
 344:	f1 e0       	ldi	r31, 0x01	; 1
 346:	0c 94 60 04 	jmp	0x8c0	; 0x8c0 <__prologue_saves__+0x1c>
 34a:	0d 89       	ldd	r16, Y+21	; 0x15
 34c:	1e 89       	ldd	r17, Y+22	; 0x16
 34e:	86 e0       	ldi	r24, 0x06	; 6
 350:	8c 83       	std	Y+4, r24	; 0x04
 352:	1a 83       	std	Y+2, r17	; 0x02
 354:	09 83       	std	Y+1, r16	; 0x01
 356:	8f ef       	ldi	r24, 0xFF	; 255
 358:	9f e7       	ldi	r25, 0x7F	; 127
 35a:	9e 83       	std	Y+6, r25	; 0x06
 35c:	8d 83       	std	Y+5, r24	; 0x05
 35e:	ae 01       	movw	r20, r28
 360:	47 5e       	subi	r20, 0xE7	; 231
 362:	5f 4f       	sbci	r21, 0xFF	; 255
 364:	6f 89       	ldd	r22, Y+23	; 0x17
 366:	78 8d       	ldd	r23, Y+24	; 0x18
 368:	ce 01       	movw	r24, r28
 36a:	01 96       	adiw	r24, 0x01	; 1
 36c:	0e 94 c1 01 	call	0x382	; 0x382 <vfprintf>
 370:	ef 81       	ldd	r30, Y+7	; 0x07
 372:	f8 85       	ldd	r31, Y+8	; 0x08
 374:	e0 0f       	add	r30, r16
 376:	f1 1f       	adc	r31, r17
 378:	10 82       	st	Z, r1
 37a:	2e 96       	adiw	r28, 0x0e	; 14
 37c:	e4 e0       	ldi	r30, 0x04	; 4
 37e:	0c 94 7c 04 	jmp	0x8f8	; 0x8f8 <__epilogue_restores__+0x1c>

00000382 <vfprintf>:
 382:	ab e0       	ldi	r26, 0x0B	; 11
 384:	b0 e0       	ldi	r27, 0x00	; 0
 386:	e7 ec       	ldi	r30, 0xC7	; 199
 388:	f1 e0       	ldi	r31, 0x01	; 1
 38a:	0c 94 52 04 	jmp	0x8a4	; 0x8a4 <__prologue_saves__>
 38e:	6c 01       	movw	r12, r24
 390:	7b 01       	movw	r14, r22
 392:	8a 01       	movw	r16, r20
 394:	fc 01       	movw	r30, r24
 396:	17 82       	std	Z+7, r1	; 0x07
 398:	16 82       	std	Z+6, r1	; 0x06
 39a:	83 81       	ldd	r24, Z+3	; 0x03
 39c:	81 ff       	sbrs	r24, 1
 39e:	cc c1       	rjmp	.+920    	; 0x738 <__LOCK_REGION_LENGTH__+0x338>
 3a0:	ce 01       	movw	r24, r28
 3a2:	01 96       	adiw	r24, 0x01	; 1
 3a4:	3c 01       	movw	r6, r24
 3a6:	f6 01       	movw	r30, r12
 3a8:	93 81       	ldd	r25, Z+3	; 0x03
 3aa:	f7 01       	movw	r30, r14
 3ac:	93 fd       	sbrc	r25, 3
 3ae:	85 91       	lpm	r24, Z+
 3b0:	93 ff       	sbrs	r25, 3
 3b2:	81 91       	ld	r24, Z+
 3b4:	7f 01       	movw	r14, r30
 3b6:	88 23       	and	r24, r24
 3b8:	09 f4       	brne	.+2      	; 0x3bc <vfprintf+0x3a>
 3ba:	ba c1       	rjmp	.+884    	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
 3bc:	85 32       	cpi	r24, 0x25	; 37
 3be:	39 f4       	brne	.+14     	; 0x3ce <vfprintf+0x4c>
 3c0:	93 fd       	sbrc	r25, 3
 3c2:	85 91       	lpm	r24, Z+
 3c4:	93 ff       	sbrs	r25, 3
 3c6:	81 91       	ld	r24, Z+
 3c8:	7f 01       	movw	r14, r30
 3ca:	85 32       	cpi	r24, 0x25	; 37
 3cc:	29 f4       	brne	.+10     	; 0x3d8 <vfprintf+0x56>
 3ce:	b6 01       	movw	r22, r12
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	0e 94 b8 03 	call	0x770	; 0x770 <fputc>
 3d6:	e7 cf       	rjmp	.-50     	; 0x3a6 <vfprintf+0x24>
 3d8:	91 2c       	mov	r9, r1
 3da:	21 2c       	mov	r2, r1
 3dc:	31 2c       	mov	r3, r1
 3de:	ff e1       	ldi	r31, 0x1F	; 31
 3e0:	f3 15       	cp	r31, r3
 3e2:	d8 f0       	brcs	.+54     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3e4:	8b 32       	cpi	r24, 0x2B	; 43
 3e6:	79 f0       	breq	.+30     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3e8:	38 f4       	brcc	.+14     	; 0x3f8 <vfprintf+0x76>
 3ea:	80 32       	cpi	r24, 0x20	; 32
 3ec:	79 f0       	breq	.+30     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3ee:	83 32       	cpi	r24, 0x23	; 35
 3f0:	a1 f4       	brne	.+40     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 3f2:	23 2d       	mov	r18, r3
 3f4:	20 61       	ori	r18, 0x10	; 16
 3f6:	1d c0       	rjmp	.+58     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 3f8:	8d 32       	cpi	r24, 0x2D	; 45
 3fa:	61 f0       	breq	.+24     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 3fc:	80 33       	cpi	r24, 0x30	; 48
 3fe:	69 f4       	brne	.+26     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 400:	23 2d       	mov	r18, r3
 402:	21 60       	ori	r18, 0x01	; 1
 404:	16 c0       	rjmp	.+44     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 406:	83 2d       	mov	r24, r3
 408:	82 60       	ori	r24, 0x02	; 2
 40a:	38 2e       	mov	r3, r24
 40c:	e3 2d       	mov	r30, r3
 40e:	e4 60       	ori	r30, 0x04	; 4
 410:	3e 2e       	mov	r3, r30
 412:	2a c0       	rjmp	.+84     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 414:	f3 2d       	mov	r31, r3
 416:	f8 60       	ori	r31, 0x08	; 8
 418:	1d c0       	rjmp	.+58     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 41a:	37 fc       	sbrc	r3, 7
 41c:	2d c0       	rjmp	.+90     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 41e:	20 ed       	ldi	r18, 0xD0	; 208
 420:	28 0f       	add	r18, r24
 422:	2a 30       	cpi	r18, 0x0A	; 10
 424:	40 f0       	brcs	.+16     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 426:	8e 32       	cpi	r24, 0x2E	; 46
 428:	b9 f4       	brne	.+46     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 42a:	36 fc       	sbrc	r3, 6
 42c:	81 c1       	rjmp	.+770    	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
 42e:	23 2d       	mov	r18, r3
 430:	20 64       	ori	r18, 0x40	; 64
 432:	32 2e       	mov	r3, r18
 434:	19 c0       	rjmp	.+50     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 436:	36 fe       	sbrs	r3, 6
 438:	06 c0       	rjmp	.+12     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 43a:	8a e0       	ldi	r24, 0x0A	; 10
 43c:	98 9e       	mul	r9, r24
 43e:	20 0d       	add	r18, r0
 440:	11 24       	eor	r1, r1
 442:	92 2e       	mov	r9, r18
 444:	11 c0       	rjmp	.+34     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 446:	ea e0       	ldi	r30, 0x0A	; 10
 448:	2e 9e       	mul	r2, r30
 44a:	20 0d       	add	r18, r0
 44c:	11 24       	eor	r1, r1
 44e:	22 2e       	mov	r2, r18
 450:	f3 2d       	mov	r31, r3
 452:	f0 62       	ori	r31, 0x20	; 32
 454:	3f 2e       	mov	r3, r31
 456:	08 c0       	rjmp	.+16     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 458:	8c 36       	cpi	r24, 0x6C	; 108
 45a:	21 f4       	brne	.+8      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 45c:	83 2d       	mov	r24, r3
 45e:	80 68       	ori	r24, 0x80	; 128
 460:	38 2e       	mov	r3, r24
 462:	02 c0       	rjmp	.+4      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 464:	88 36       	cpi	r24, 0x68	; 104
 466:	41 f4       	brne	.+16     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 468:	f7 01       	movw	r30, r14
 46a:	93 fd       	sbrc	r25, 3
 46c:	85 91       	lpm	r24, Z+
 46e:	93 ff       	sbrs	r25, 3
 470:	81 91       	ld	r24, Z+
 472:	7f 01       	movw	r14, r30
 474:	81 11       	cpse	r24, r1
 476:	b3 cf       	rjmp	.-154    	; 0x3de <vfprintf+0x5c>
 478:	98 2f       	mov	r25, r24
 47a:	9f 7d       	andi	r25, 0xDF	; 223
 47c:	95 54       	subi	r25, 0x45	; 69
 47e:	93 30       	cpi	r25, 0x03	; 3
 480:	28 f4       	brcc	.+10     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 482:	0c 5f       	subi	r16, 0xFC	; 252
 484:	1f 4f       	sbci	r17, 0xFF	; 255
 486:	9f e3       	ldi	r25, 0x3F	; 63
 488:	99 83       	std	Y+1, r25	; 0x01
 48a:	0d c0       	rjmp	.+26     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 48c:	83 36       	cpi	r24, 0x63	; 99
 48e:	31 f0       	breq	.+12     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 490:	83 37       	cpi	r24, 0x73	; 115
 492:	71 f0       	breq	.+28     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 494:	83 35       	cpi	r24, 0x53	; 83
 496:	09 f0       	breq	.+2      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 498:	59 c0       	rjmp	.+178    	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
 49a:	21 c0       	rjmp	.+66     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 49c:	f8 01       	movw	r30, r16
 49e:	80 81       	ld	r24, Z
 4a0:	89 83       	std	Y+1, r24	; 0x01
 4a2:	0e 5f       	subi	r16, 0xFE	; 254
 4a4:	1f 4f       	sbci	r17, 0xFF	; 255
 4a6:	88 24       	eor	r8, r8
 4a8:	83 94       	inc	r8
 4aa:	91 2c       	mov	r9, r1
 4ac:	53 01       	movw	r10, r6
 4ae:	13 c0       	rjmp	.+38     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4b0:	28 01       	movw	r4, r16
 4b2:	f2 e0       	ldi	r31, 0x02	; 2
 4b4:	4f 0e       	add	r4, r31
 4b6:	51 1c       	adc	r5, r1
 4b8:	f8 01       	movw	r30, r16
 4ba:	a0 80       	ld	r10, Z
 4bc:	b1 80       	ldd	r11, Z+1	; 0x01
 4be:	36 fe       	sbrs	r3, 6
 4c0:	03 c0       	rjmp	.+6      	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4c2:	69 2d       	mov	r22, r9
 4c4:	70 e0       	ldi	r23, 0x00	; 0
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4c8:	6f ef       	ldi	r22, 0xFF	; 255
 4ca:	7f ef       	ldi	r23, 0xFF	; 255
 4cc:	c5 01       	movw	r24, r10
 4ce:	0e 94 ad 03 	call	0x75a	; 0x75a <strnlen>
 4d2:	4c 01       	movw	r8, r24
 4d4:	82 01       	movw	r16, r4
 4d6:	f3 2d       	mov	r31, r3
 4d8:	ff 77       	andi	r31, 0x7F	; 127
 4da:	3f 2e       	mov	r3, r31
 4dc:	16 c0       	rjmp	.+44     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4de:	28 01       	movw	r4, r16
 4e0:	22 e0       	ldi	r18, 0x02	; 2
 4e2:	42 0e       	add	r4, r18
 4e4:	51 1c       	adc	r5, r1
 4e6:	f8 01       	movw	r30, r16
 4e8:	a0 80       	ld	r10, Z
 4ea:	b1 80       	ldd	r11, Z+1	; 0x01
 4ec:	36 fe       	sbrs	r3, 6
 4ee:	03 c0       	rjmp	.+6      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4f0:	69 2d       	mov	r22, r9
 4f2:	70 e0       	ldi	r23, 0x00	; 0
 4f4:	02 c0       	rjmp	.+4      	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4f6:	6f ef       	ldi	r22, 0xFF	; 255
 4f8:	7f ef       	ldi	r23, 0xFF	; 255
 4fa:	c5 01       	movw	r24, r10
 4fc:	0e 94 a2 03 	call	0x744	; 0x744 <strnlen_P>
 500:	4c 01       	movw	r8, r24
 502:	f3 2d       	mov	r31, r3
 504:	f0 68       	ori	r31, 0x80	; 128
 506:	3f 2e       	mov	r3, r31
 508:	82 01       	movw	r16, r4
 50a:	33 fc       	sbrc	r3, 3
 50c:	1b c0       	rjmp	.+54     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 50e:	82 2d       	mov	r24, r2
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	88 16       	cp	r8, r24
 514:	99 06       	cpc	r9, r25
 516:	b0 f4       	brcc	.+44     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 518:	b6 01       	movw	r22, r12
 51a:	80 e2       	ldi	r24, 0x20	; 32
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	0e 94 b8 03 	call	0x770	; 0x770 <fputc>
 522:	2a 94       	dec	r2
 524:	f4 cf       	rjmp	.-24     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 526:	f5 01       	movw	r30, r10
 528:	37 fc       	sbrc	r3, 7
 52a:	85 91       	lpm	r24, Z+
 52c:	37 fe       	sbrs	r3, 7
 52e:	81 91       	ld	r24, Z+
 530:	5f 01       	movw	r10, r30
 532:	b6 01       	movw	r22, r12
 534:	90 e0       	ldi	r25, 0x00	; 0
 536:	0e 94 b8 03 	call	0x770	; 0x770 <fputc>
 53a:	21 10       	cpse	r2, r1
 53c:	2a 94       	dec	r2
 53e:	21 e0       	ldi	r18, 0x01	; 1
 540:	82 1a       	sub	r8, r18
 542:	91 08       	sbc	r9, r1
 544:	81 14       	cp	r8, r1
 546:	91 04       	cpc	r9, r1
 548:	71 f7       	brne	.-36     	; 0x526 <__LOCK_REGION_LENGTH__+0x126>
 54a:	e8 c0       	rjmp	.+464    	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 54c:	84 36       	cpi	r24, 0x64	; 100
 54e:	11 f0       	breq	.+4      	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 550:	89 36       	cpi	r24, 0x69	; 105
 552:	41 f5       	brne	.+80     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 554:	f8 01       	movw	r30, r16
 556:	37 fe       	sbrs	r3, 7
 558:	07 c0       	rjmp	.+14     	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 55a:	60 81       	ld	r22, Z
 55c:	71 81       	ldd	r23, Z+1	; 0x01
 55e:	82 81       	ldd	r24, Z+2	; 0x02
 560:	93 81       	ldd	r25, Z+3	; 0x03
 562:	0c 5f       	subi	r16, 0xFC	; 252
 564:	1f 4f       	sbci	r17, 0xFF	; 255
 566:	08 c0       	rjmp	.+16     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 568:	60 81       	ld	r22, Z
 56a:	71 81       	ldd	r23, Z+1	; 0x01
 56c:	07 2e       	mov	r0, r23
 56e:	00 0c       	add	r0, r0
 570:	88 0b       	sbc	r24, r24
 572:	99 0b       	sbc	r25, r25
 574:	0e 5f       	subi	r16, 0xFE	; 254
 576:	1f 4f       	sbci	r17, 0xFF	; 255
 578:	f3 2d       	mov	r31, r3
 57a:	ff 76       	andi	r31, 0x6F	; 111
 57c:	3f 2e       	mov	r3, r31
 57e:	97 ff       	sbrs	r25, 7
 580:	09 c0       	rjmp	.+18     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 582:	90 95       	com	r25
 584:	80 95       	com	r24
 586:	70 95       	com	r23
 588:	61 95       	neg	r22
 58a:	7f 4f       	sbci	r23, 0xFF	; 255
 58c:	8f 4f       	sbci	r24, 0xFF	; 255
 58e:	9f 4f       	sbci	r25, 0xFF	; 255
 590:	f0 68       	ori	r31, 0x80	; 128
 592:	3f 2e       	mov	r3, r31
 594:	2a e0       	ldi	r18, 0x0A	; 10
 596:	30 e0       	ldi	r19, 0x00	; 0
 598:	a3 01       	movw	r20, r6
 59a:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <__ultoa_invert>
 59e:	88 2e       	mov	r8, r24
 5a0:	86 18       	sub	r8, r6
 5a2:	45 c0       	rjmp	.+138    	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 5a4:	85 37       	cpi	r24, 0x75	; 117
 5a6:	31 f4       	brne	.+12     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5a8:	23 2d       	mov	r18, r3
 5aa:	2f 7e       	andi	r18, 0xEF	; 239
 5ac:	b2 2e       	mov	r11, r18
 5ae:	2a e0       	ldi	r18, 0x0A	; 10
 5b0:	30 e0       	ldi	r19, 0x00	; 0
 5b2:	25 c0       	rjmp	.+74     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5b4:	93 2d       	mov	r25, r3
 5b6:	99 7f       	andi	r25, 0xF9	; 249
 5b8:	b9 2e       	mov	r11, r25
 5ba:	8f 36       	cpi	r24, 0x6F	; 111
 5bc:	c1 f0       	breq	.+48     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5be:	18 f4       	brcc	.+6      	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5c0:	88 35       	cpi	r24, 0x58	; 88
 5c2:	79 f0       	breq	.+30     	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5c4:	b5 c0       	rjmp	.+362    	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
 5c6:	80 37       	cpi	r24, 0x70	; 112
 5c8:	19 f0       	breq	.+6      	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5ca:	88 37       	cpi	r24, 0x78	; 120
 5cc:	21 f0       	breq	.+8      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5ce:	b0 c0       	rjmp	.+352    	; 0x730 <__LOCK_REGION_LENGTH__+0x330>
 5d0:	e9 2f       	mov	r30, r25
 5d2:	e0 61       	ori	r30, 0x10	; 16
 5d4:	be 2e       	mov	r11, r30
 5d6:	b4 fe       	sbrs	r11, 4
 5d8:	0d c0       	rjmp	.+26     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5da:	fb 2d       	mov	r31, r11
 5dc:	f4 60       	ori	r31, 0x04	; 4
 5de:	bf 2e       	mov	r11, r31
 5e0:	09 c0       	rjmp	.+18     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5e2:	34 fe       	sbrs	r3, 4
 5e4:	0a c0       	rjmp	.+20     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5e6:	29 2f       	mov	r18, r25
 5e8:	26 60       	ori	r18, 0x06	; 6
 5ea:	b2 2e       	mov	r11, r18
 5ec:	06 c0       	rjmp	.+12     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5ee:	28 e0       	ldi	r18, 0x08	; 8
 5f0:	30 e0       	ldi	r19, 0x00	; 0
 5f2:	05 c0       	rjmp	.+10     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5f4:	20 e1       	ldi	r18, 0x10	; 16
 5f6:	30 e0       	ldi	r19, 0x00	; 0
 5f8:	02 c0       	rjmp	.+4      	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5fa:	20 e1       	ldi	r18, 0x10	; 16
 5fc:	32 e0       	ldi	r19, 0x02	; 2
 5fe:	f8 01       	movw	r30, r16
 600:	b7 fe       	sbrs	r11, 7
 602:	07 c0       	rjmp	.+14     	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
 604:	60 81       	ld	r22, Z
 606:	71 81       	ldd	r23, Z+1	; 0x01
 608:	82 81       	ldd	r24, Z+2	; 0x02
 60a:	93 81       	ldd	r25, Z+3	; 0x03
 60c:	0c 5f       	subi	r16, 0xFC	; 252
 60e:	1f 4f       	sbci	r17, 0xFF	; 255
 610:	06 c0       	rjmp	.+12     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 612:	60 81       	ld	r22, Z
 614:	71 81       	ldd	r23, Z+1	; 0x01
 616:	80 e0       	ldi	r24, 0x00	; 0
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	0e 5f       	subi	r16, 0xFE	; 254
 61c:	1f 4f       	sbci	r17, 0xFF	; 255
 61e:	a3 01       	movw	r20, r6
 620:	0e 94 f4 03 	call	0x7e8	; 0x7e8 <__ultoa_invert>
 624:	88 2e       	mov	r8, r24
 626:	86 18       	sub	r8, r6
 628:	fb 2d       	mov	r31, r11
 62a:	ff 77       	andi	r31, 0x7F	; 127
 62c:	3f 2e       	mov	r3, r31
 62e:	36 fe       	sbrs	r3, 6
 630:	0d c0       	rjmp	.+26     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 632:	23 2d       	mov	r18, r3
 634:	2e 7f       	andi	r18, 0xFE	; 254
 636:	a2 2e       	mov	r10, r18
 638:	89 14       	cp	r8, r9
 63a:	58 f4       	brcc	.+22     	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 63c:	34 fe       	sbrs	r3, 4
 63e:	0b c0       	rjmp	.+22     	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 640:	32 fc       	sbrc	r3, 2
 642:	09 c0       	rjmp	.+18     	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 644:	83 2d       	mov	r24, r3
 646:	8e 7e       	andi	r24, 0xEE	; 238
 648:	a8 2e       	mov	r10, r24
 64a:	05 c0       	rjmp	.+10     	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 64c:	b8 2c       	mov	r11, r8
 64e:	a3 2c       	mov	r10, r3
 650:	03 c0       	rjmp	.+6      	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 652:	b8 2c       	mov	r11, r8
 654:	01 c0       	rjmp	.+2      	; 0x658 <__LOCK_REGION_LENGTH__+0x258>
 656:	b9 2c       	mov	r11, r9
 658:	a4 fe       	sbrs	r10, 4
 65a:	0f c0       	rjmp	.+30     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 65c:	fe 01       	movw	r30, r28
 65e:	e8 0d       	add	r30, r8
 660:	f1 1d       	adc	r31, r1
 662:	80 81       	ld	r24, Z
 664:	80 33       	cpi	r24, 0x30	; 48
 666:	21 f4       	brne	.+8      	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 668:	9a 2d       	mov	r25, r10
 66a:	99 7e       	andi	r25, 0xE9	; 233
 66c:	a9 2e       	mov	r10, r25
 66e:	09 c0       	rjmp	.+18     	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 670:	a2 fe       	sbrs	r10, 2
 672:	06 c0       	rjmp	.+12     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 674:	b3 94       	inc	r11
 676:	b3 94       	inc	r11
 678:	04 c0       	rjmp	.+8      	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 67a:	8a 2d       	mov	r24, r10
 67c:	86 78       	andi	r24, 0x86	; 134
 67e:	09 f0       	breq	.+2      	; 0x682 <__LOCK_REGION_LENGTH__+0x282>
 680:	b3 94       	inc	r11
 682:	a3 fc       	sbrc	r10, 3
 684:	11 c0       	rjmp	.+34     	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 686:	a0 fe       	sbrs	r10, 0
 688:	06 c0       	rjmp	.+12     	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 68a:	b2 14       	cp	r11, r2
 68c:	88 f4       	brcc	.+34     	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
 68e:	28 0c       	add	r2, r8
 690:	92 2c       	mov	r9, r2
 692:	9b 18       	sub	r9, r11
 694:	0e c0       	rjmp	.+28     	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 696:	b2 14       	cp	r11, r2
 698:	60 f4       	brcc	.+24     	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 69a:	b6 01       	movw	r22, r12
 69c:	80 e2       	ldi	r24, 0x20	; 32
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	0e 94 b8 03 	call	0x770	; 0x770 <fputc>
 6a4:	b3 94       	inc	r11
 6a6:	f7 cf       	rjmp	.-18     	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 6a8:	b2 14       	cp	r11, r2
 6aa:	18 f4       	brcc	.+6      	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 6ac:	2b 18       	sub	r2, r11
 6ae:	02 c0       	rjmp	.+4      	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 6b0:	98 2c       	mov	r9, r8
 6b2:	21 2c       	mov	r2, r1
 6b4:	a4 fe       	sbrs	r10, 4
 6b6:	10 c0       	rjmp	.+32     	; 0x6d8 <__LOCK_REGION_LENGTH__+0x2d8>
 6b8:	b6 01       	movw	r22, r12
 6ba:	80 e3       	ldi	r24, 0x30	; 48
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	0e 94 b8 03 	call	0x770	; 0x770 <fputc>
 6c2:	a2 fe       	sbrs	r10, 2
 6c4:	17 c0       	rjmp	.+46     	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 6c6:	a1 fc       	sbrc	r10, 1
 6c8:	03 c0       	rjmp	.+6      	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6ca:	88 e7       	ldi	r24, 0x78	; 120
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	02 c0       	rjmp	.+4      	; 0x6d4 <__LOCK_REGION_LENGTH__+0x2d4>
 6d0:	88 e5       	ldi	r24, 0x58	; 88
 6d2:	90 e0       	ldi	r25, 0x00	; 0
 6d4:	b6 01       	movw	r22, r12
 6d6:	0c c0       	rjmp	.+24     	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
 6d8:	8a 2d       	mov	r24, r10
 6da:	86 78       	andi	r24, 0x86	; 134
 6dc:	59 f0       	breq	.+22     	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 6de:	a1 fe       	sbrs	r10, 1
 6e0:	02 c0       	rjmp	.+4      	; 0x6e6 <__LOCK_REGION_LENGTH__+0x2e6>
 6e2:	8b e2       	ldi	r24, 0x2B	; 43
 6e4:	01 c0       	rjmp	.+2      	; 0x6e8 <__LOCK_REGION_LENGTH__+0x2e8>
 6e6:	80 e2       	ldi	r24, 0x20	; 32
 6e8:	a7 fc       	sbrc	r10, 7
 6ea:	8d e2       	ldi	r24, 0x2D	; 45
 6ec:	b6 01       	movw	r22, r12
 6ee:	90 e0       	ldi	r25, 0x00	; 0
 6f0:	0e 94 b8 03 	call	0x770	; 0x770 <fputc>
 6f4:	89 14       	cp	r8, r9
 6f6:	38 f4       	brcc	.+14     	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
 6f8:	b6 01       	movw	r22, r12
 6fa:	80 e3       	ldi	r24, 0x30	; 48
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	0e 94 b8 03 	call	0x770	; 0x770 <fputc>
 702:	9a 94       	dec	r9
 704:	f7 cf       	rjmp	.-18     	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 706:	8a 94       	dec	r8
 708:	f3 01       	movw	r30, r6
 70a:	e8 0d       	add	r30, r8
 70c:	f1 1d       	adc	r31, r1
 70e:	80 81       	ld	r24, Z
 710:	b6 01       	movw	r22, r12
 712:	90 e0       	ldi	r25, 0x00	; 0
 714:	0e 94 b8 03 	call	0x770	; 0x770 <fputc>
 718:	81 10       	cpse	r8, r1
 71a:	f5 cf       	rjmp	.-22     	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
 71c:	22 20       	and	r2, r2
 71e:	09 f4       	brne	.+2      	; 0x722 <__LOCK_REGION_LENGTH__+0x322>
 720:	42 ce       	rjmp	.-892    	; 0x3a6 <vfprintf+0x24>
 722:	b6 01       	movw	r22, r12
 724:	80 e2       	ldi	r24, 0x20	; 32
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	0e 94 b8 03 	call	0x770	; 0x770 <fputc>
 72c:	2a 94       	dec	r2
 72e:	f6 cf       	rjmp	.-20     	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 730:	f6 01       	movw	r30, r12
 732:	86 81       	ldd	r24, Z+6	; 0x06
 734:	97 81       	ldd	r25, Z+7	; 0x07
 736:	02 c0       	rjmp	.+4      	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 738:	8f ef       	ldi	r24, 0xFF	; 255
 73a:	9f ef       	ldi	r25, 0xFF	; 255
 73c:	2b 96       	adiw	r28, 0x0b	; 11
 73e:	e2 e1       	ldi	r30, 0x12	; 18
 740:	0c 94 6e 04 	jmp	0x8dc	; 0x8dc <__epilogue_restores__>

00000744 <strnlen_P>:
 744:	fc 01       	movw	r30, r24
 746:	05 90       	lpm	r0, Z+
 748:	61 50       	subi	r22, 0x01	; 1
 74a:	70 40       	sbci	r23, 0x00	; 0
 74c:	01 10       	cpse	r0, r1
 74e:	d8 f7       	brcc	.-10     	; 0x746 <strnlen_P+0x2>
 750:	80 95       	com	r24
 752:	90 95       	com	r25
 754:	8e 0f       	add	r24, r30
 756:	9f 1f       	adc	r25, r31
 758:	08 95       	ret

0000075a <strnlen>:
 75a:	fc 01       	movw	r30, r24
 75c:	61 50       	subi	r22, 0x01	; 1
 75e:	70 40       	sbci	r23, 0x00	; 0
 760:	01 90       	ld	r0, Z+
 762:	01 10       	cpse	r0, r1
 764:	d8 f7       	brcc	.-10     	; 0x75c <strnlen+0x2>
 766:	80 95       	com	r24
 768:	90 95       	com	r25
 76a:	8e 0f       	add	r24, r30
 76c:	9f 1f       	adc	r25, r31
 76e:	08 95       	ret

00000770 <fputc>:
 770:	0f 93       	push	r16
 772:	1f 93       	push	r17
 774:	cf 93       	push	r28
 776:	df 93       	push	r29
 778:	fb 01       	movw	r30, r22
 77a:	23 81       	ldd	r18, Z+3	; 0x03
 77c:	21 fd       	sbrc	r18, 1
 77e:	03 c0       	rjmp	.+6      	; 0x786 <fputc+0x16>
 780:	8f ef       	ldi	r24, 0xFF	; 255
 782:	9f ef       	ldi	r25, 0xFF	; 255
 784:	2c c0       	rjmp	.+88     	; 0x7de <fputc+0x6e>
 786:	22 ff       	sbrs	r18, 2
 788:	16 c0       	rjmp	.+44     	; 0x7b6 <fputc+0x46>
 78a:	46 81       	ldd	r20, Z+6	; 0x06
 78c:	57 81       	ldd	r21, Z+7	; 0x07
 78e:	24 81       	ldd	r18, Z+4	; 0x04
 790:	35 81       	ldd	r19, Z+5	; 0x05
 792:	42 17       	cp	r20, r18
 794:	53 07       	cpc	r21, r19
 796:	44 f4       	brge	.+16     	; 0x7a8 <fputc+0x38>
 798:	a0 81       	ld	r26, Z
 79a:	b1 81       	ldd	r27, Z+1	; 0x01
 79c:	9d 01       	movw	r18, r26
 79e:	2f 5f       	subi	r18, 0xFF	; 255
 7a0:	3f 4f       	sbci	r19, 0xFF	; 255
 7a2:	31 83       	std	Z+1, r19	; 0x01
 7a4:	20 83       	st	Z, r18
 7a6:	8c 93       	st	X, r24
 7a8:	26 81       	ldd	r18, Z+6	; 0x06
 7aa:	37 81       	ldd	r19, Z+7	; 0x07
 7ac:	2f 5f       	subi	r18, 0xFF	; 255
 7ae:	3f 4f       	sbci	r19, 0xFF	; 255
 7b0:	37 83       	std	Z+7, r19	; 0x07
 7b2:	26 83       	std	Z+6, r18	; 0x06
 7b4:	14 c0       	rjmp	.+40     	; 0x7de <fputc+0x6e>
 7b6:	8b 01       	movw	r16, r22
 7b8:	ec 01       	movw	r28, r24
 7ba:	fb 01       	movw	r30, r22
 7bc:	00 84       	ldd	r0, Z+8	; 0x08
 7be:	f1 85       	ldd	r31, Z+9	; 0x09
 7c0:	e0 2d       	mov	r30, r0
 7c2:	09 95       	icall
 7c4:	89 2b       	or	r24, r25
 7c6:	e1 f6       	brne	.-72     	; 0x780 <fputc+0x10>
 7c8:	d8 01       	movw	r26, r16
 7ca:	16 96       	adiw	r26, 0x06	; 6
 7cc:	8d 91       	ld	r24, X+
 7ce:	9c 91       	ld	r25, X
 7d0:	17 97       	sbiw	r26, 0x07	; 7
 7d2:	01 96       	adiw	r24, 0x01	; 1
 7d4:	17 96       	adiw	r26, 0x07	; 7
 7d6:	9c 93       	st	X, r25
 7d8:	8e 93       	st	-X, r24
 7da:	16 97       	sbiw	r26, 0x06	; 6
 7dc:	ce 01       	movw	r24, r28
 7de:	df 91       	pop	r29
 7e0:	cf 91       	pop	r28
 7e2:	1f 91       	pop	r17
 7e4:	0f 91       	pop	r16
 7e6:	08 95       	ret

000007e8 <__ultoa_invert>:
 7e8:	fa 01       	movw	r30, r20
 7ea:	aa 27       	eor	r26, r26
 7ec:	28 30       	cpi	r18, 0x08	; 8
 7ee:	51 f1       	breq	.+84     	; 0x844 <__ultoa_invert+0x5c>
 7f0:	20 31       	cpi	r18, 0x10	; 16
 7f2:	81 f1       	breq	.+96     	; 0x854 <__ultoa_invert+0x6c>
 7f4:	e8 94       	clt
 7f6:	6f 93       	push	r22
 7f8:	6e 7f       	andi	r22, 0xFE	; 254
 7fa:	6e 5f       	subi	r22, 0xFE	; 254
 7fc:	7f 4f       	sbci	r23, 0xFF	; 255
 7fe:	8f 4f       	sbci	r24, 0xFF	; 255
 800:	9f 4f       	sbci	r25, 0xFF	; 255
 802:	af 4f       	sbci	r26, 0xFF	; 255
 804:	b1 e0       	ldi	r27, 0x01	; 1
 806:	3e d0       	rcall	.+124    	; 0x884 <__ultoa_invert+0x9c>
 808:	b4 e0       	ldi	r27, 0x04	; 4
 80a:	3c d0       	rcall	.+120    	; 0x884 <__ultoa_invert+0x9c>
 80c:	67 0f       	add	r22, r23
 80e:	78 1f       	adc	r23, r24
 810:	89 1f       	adc	r24, r25
 812:	9a 1f       	adc	r25, r26
 814:	a1 1d       	adc	r26, r1
 816:	68 0f       	add	r22, r24
 818:	79 1f       	adc	r23, r25
 81a:	8a 1f       	adc	r24, r26
 81c:	91 1d       	adc	r25, r1
 81e:	a1 1d       	adc	r26, r1
 820:	6a 0f       	add	r22, r26
 822:	71 1d       	adc	r23, r1
 824:	81 1d       	adc	r24, r1
 826:	91 1d       	adc	r25, r1
 828:	a1 1d       	adc	r26, r1
 82a:	20 d0       	rcall	.+64     	; 0x86c <__ultoa_invert+0x84>
 82c:	09 f4       	brne	.+2      	; 0x830 <__ultoa_invert+0x48>
 82e:	68 94       	set
 830:	3f 91       	pop	r19
 832:	2a e0       	ldi	r18, 0x0A	; 10
 834:	26 9f       	mul	r18, r22
 836:	11 24       	eor	r1, r1
 838:	30 19       	sub	r19, r0
 83a:	30 5d       	subi	r19, 0xD0	; 208
 83c:	31 93       	st	Z+, r19
 83e:	de f6       	brtc	.-74     	; 0x7f6 <__ultoa_invert+0xe>
 840:	cf 01       	movw	r24, r30
 842:	08 95       	ret
 844:	46 2f       	mov	r20, r22
 846:	47 70       	andi	r20, 0x07	; 7
 848:	40 5d       	subi	r20, 0xD0	; 208
 84a:	41 93       	st	Z+, r20
 84c:	b3 e0       	ldi	r27, 0x03	; 3
 84e:	0f d0       	rcall	.+30     	; 0x86e <__ultoa_invert+0x86>
 850:	c9 f7       	brne	.-14     	; 0x844 <__ultoa_invert+0x5c>
 852:	f6 cf       	rjmp	.-20     	; 0x840 <__ultoa_invert+0x58>
 854:	46 2f       	mov	r20, r22
 856:	4f 70       	andi	r20, 0x0F	; 15
 858:	40 5d       	subi	r20, 0xD0	; 208
 85a:	4a 33       	cpi	r20, 0x3A	; 58
 85c:	18 f0       	brcs	.+6      	; 0x864 <__ultoa_invert+0x7c>
 85e:	49 5d       	subi	r20, 0xD9	; 217
 860:	31 fd       	sbrc	r19, 1
 862:	40 52       	subi	r20, 0x20	; 32
 864:	41 93       	st	Z+, r20
 866:	02 d0       	rcall	.+4      	; 0x86c <__ultoa_invert+0x84>
 868:	a9 f7       	brne	.-22     	; 0x854 <__ultoa_invert+0x6c>
 86a:	ea cf       	rjmp	.-44     	; 0x840 <__ultoa_invert+0x58>
 86c:	b4 e0       	ldi	r27, 0x04	; 4
 86e:	a6 95       	lsr	r26
 870:	97 95       	ror	r25
 872:	87 95       	ror	r24
 874:	77 95       	ror	r23
 876:	67 95       	ror	r22
 878:	ba 95       	dec	r27
 87a:	c9 f7       	brne	.-14     	; 0x86e <__ultoa_invert+0x86>
 87c:	00 97       	sbiw	r24, 0x00	; 0
 87e:	61 05       	cpc	r22, r1
 880:	71 05       	cpc	r23, r1
 882:	08 95       	ret
 884:	9b 01       	movw	r18, r22
 886:	ac 01       	movw	r20, r24
 888:	0a 2e       	mov	r0, r26
 88a:	06 94       	lsr	r0
 88c:	57 95       	ror	r21
 88e:	47 95       	ror	r20
 890:	37 95       	ror	r19
 892:	27 95       	ror	r18
 894:	ba 95       	dec	r27
 896:	c9 f7       	brne	.-14     	; 0x88a <__ultoa_invert+0xa2>
 898:	62 0f       	add	r22, r18
 89a:	73 1f       	adc	r23, r19
 89c:	84 1f       	adc	r24, r20
 89e:	95 1f       	adc	r25, r21
 8a0:	a0 1d       	adc	r26, r0
 8a2:	08 95       	ret

000008a4 <__prologue_saves__>:
 8a4:	2f 92       	push	r2
 8a6:	3f 92       	push	r3
 8a8:	4f 92       	push	r4
 8aa:	5f 92       	push	r5
 8ac:	6f 92       	push	r6
 8ae:	7f 92       	push	r7
 8b0:	8f 92       	push	r8
 8b2:	9f 92       	push	r9
 8b4:	af 92       	push	r10
 8b6:	bf 92       	push	r11
 8b8:	cf 92       	push	r12
 8ba:	df 92       	push	r13
 8bc:	ef 92       	push	r14
 8be:	ff 92       	push	r15
 8c0:	0f 93       	push	r16
 8c2:	1f 93       	push	r17
 8c4:	cf 93       	push	r28
 8c6:	df 93       	push	r29
 8c8:	cd b7       	in	r28, 0x3d	; 61
 8ca:	de b7       	in	r29, 0x3e	; 62
 8cc:	ca 1b       	sub	r28, r26
 8ce:	db 0b       	sbc	r29, r27
 8d0:	0f b6       	in	r0, 0x3f	; 63
 8d2:	f8 94       	cli
 8d4:	de bf       	out	0x3e, r29	; 62
 8d6:	0f be       	out	0x3f, r0	; 63
 8d8:	cd bf       	out	0x3d, r28	; 61
 8da:	09 94       	ijmp

000008dc <__epilogue_restores__>:
 8dc:	2a 88       	ldd	r2, Y+18	; 0x12
 8de:	39 88       	ldd	r3, Y+17	; 0x11
 8e0:	48 88       	ldd	r4, Y+16	; 0x10
 8e2:	5f 84       	ldd	r5, Y+15	; 0x0f
 8e4:	6e 84       	ldd	r6, Y+14	; 0x0e
 8e6:	7d 84       	ldd	r7, Y+13	; 0x0d
 8e8:	8c 84       	ldd	r8, Y+12	; 0x0c
 8ea:	9b 84       	ldd	r9, Y+11	; 0x0b
 8ec:	aa 84       	ldd	r10, Y+10	; 0x0a
 8ee:	b9 84       	ldd	r11, Y+9	; 0x09
 8f0:	c8 84       	ldd	r12, Y+8	; 0x08
 8f2:	df 80       	ldd	r13, Y+7	; 0x07
 8f4:	ee 80       	ldd	r14, Y+6	; 0x06
 8f6:	fd 80       	ldd	r15, Y+5	; 0x05
 8f8:	0c 81       	ldd	r16, Y+4	; 0x04
 8fa:	1b 81       	ldd	r17, Y+3	; 0x03
 8fc:	aa 81       	ldd	r26, Y+2	; 0x02
 8fe:	b9 81       	ldd	r27, Y+1	; 0x01
 900:	ce 0f       	add	r28, r30
 902:	d1 1d       	adc	r29, r1
 904:	0f b6       	in	r0, 0x3f	; 63
 906:	f8 94       	cli
 908:	de bf       	out	0x3e, r29	; 62
 90a:	0f be       	out	0x3f, r0	; 63
 90c:	cd bf       	out	0x3d, r28	; 61
 90e:	ed 01       	movw	r28, r26
 910:	08 95       	ret

00000912 <_exit>:
 912:	f8 94       	cli

00000914 <__stop_program>:
 914:	ff cf       	rjmp	.-2      	; 0x914 <__stop_program>
